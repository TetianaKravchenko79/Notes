/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(35);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _login = __webpack_require__(175);

	var _login2 = _interopRequireDefault(_login);

	var _register = __webpack_require__(185);

	var _register2 = _interopRequireDefault(_register);

	var _notes = __webpack_require__(187);

	var _notes2 = _interopRequireDefault(_notes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MainDialog = function (_React$Component) {
	  _inherits(MainDialog, _React$Component);

	  function MainDialog(props) {
	    _classCallCheck(this, MainDialog);

	    var _this = _possibleConstructorReturn(this, (MainDialog.__proto__ || Object.getPrototypeOf(MainDialog)).call(this, props));

	    _this.handleUid = _this.handleUid.bind(_this);
	    _this.handleLogout = _this.handleLogout.bind(_this);
	    _this.handleRegister = _this.handleRegister.bind(_this);

	    _this.state = {
	      uid: localStorage.uid,
	      register: 0 //or false...
	    };
	    return _this;
	  }

	  _createClass(MainDialog, [{
	    key: "handleUid",
	    value: function handleUid(uid) {
	      this.setState({
	        uid: uid
	      });

	      localStorage.uid = uid;
	    }
	  }, {
	    key: "handleLogout",
	    value: function handleLogout() {
	      this.setState({
	        uid: ""
	        // register: 0,
	      });

	      localStorage.uid = "";
	    }
	  }, {
	    key: "handleRegister",
	    value: function handleRegister(register) {
	      this.setState({
	        register: register
	      });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        "div",
	        null,
	        this.state.uid ? _react2.default.createElement(_notes2.default, {
	          uidMain: this.state.uid,
	          handleLogoutMain: this.handleLogout
	        }) : _react2.default.createElement(
	          "div",
	          null,
	          this.state.register ? _react2.default.createElement(_register2.default, {
	            handleRegisterMain: this.handleRegister,
	            handleUidMain: this.handleUid
	          }) : _react2.default.createElement(_login2.default, {
	            handleRegisterMain: this.handleRegister,
	            handleUidMain: this.handleUid
	          })
	        )
	      );
	    }
	  }]);

	  return MainDialog;
	}(_react2.default.Component);

	var elem = document.querySelector("#app");

	if (elem) {
	  _reactDom2.default.render(_react2.default.createElement(MainDialog, null), elem);
	}

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(2);

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactChildren = __webpack_require__(5);
	var ReactComponent = __webpack_require__(17);
	var ReactPureComponent = __webpack_require__(20);
	var ReactClass = __webpack_require__(21);
	var ReactDOMFactories = __webpack_require__(26);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypes = __webpack_require__(32);
	var ReactVersion = __webpack_require__(33);

	var onlyChild = __webpack_require__(34);
	var warning = __webpack_require__(11);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function __spread() {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function createMixin(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	'use strict';

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout() {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	})();
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while (len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) {
	    return [];
	};

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function () {
	    return 0;
	};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */

	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(6);
	var ReactElement = __webpack_require__(9);

	var emptyFunction = __webpack_require__(12);
	var traverseAllChildren = __webpack_require__(14);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function fiveArgumentPooler(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function standardReleaser(instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _assign = __webpack_require__(4);

	var ReactCurrentOwner = __webpack_require__(10);

	var warning = __webpack_require__(11);
	var canDefineProperty = __webpack_require__(13);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

	    // Create dummy `key` and `ref` property to `props` to warn users against its use
	    var warnAboutAccessingKey = function warnAboutAccessingKey() {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;

	    var warnAboutAccessingRef = function warnAboutAccessingRef() {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;

	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(12);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function get() {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(10);
	var ReactElement = __webpack_require__(9);

	var getIteratorFn = __webpack_require__(15);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(16);
	var warning = __webpack_require__(11);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && (typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 15 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactNoopUpdateQueue = __webpack_require__(18);

	var canDefineProperty = __webpack_require__(13);
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !((typeof partialState === 'undefined' ? 'undefined' : _typeof(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function get() {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(11);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactComponent = __webpack_require__(17);
	var ReactNoopUpdateQueue = __webpack_require__(18);

	var emptyObject = __webpack_require__(19);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var ReactComponent = __webpack_require__(17);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactPropTypeLocationNames = __webpack_require__(24);
	var ReactNoopUpdateQueue = __webpack_require__(18);

	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(8);
	var keyMirror = __webpack_require__(23);
	var keyOf = __webpack_require__(25);
	var warning = __webpack_require__(11);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function displayName(Constructor, _displayName) {
	    Constructor.displayName = _displayName;
	  },
	  mixins: function mixins(Constructor, _mixins) {
	    if (_mixins) {
	      for (var i = 0; i < _mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, _mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
	  },
	  contextTypes: function contextTypes(Constructor, _contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = _getDefaultProps;
	    }
	  },
	  propTypes: function propTypes(Constructor, _propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
	  },
	  statics: function statics(Constructor, _statics) {
	    mixStaticSpecIntoComponent(Constructor, _statics);
	  },
	  autobind: function autobind() {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec === 'undefined' ? 'undefined' : _typeof(spec);
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function replaceState(newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted() {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function ReactClassComponent() {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function createClass(spec) {
	    var Constructor = function Constructor(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function injectMixin(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(23);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(8);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 25 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */

	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(9);

	var mapObject = __webpack_require__(27);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactElementValidator = __webpack_require__(28);
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 27 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var ReactCurrentOwner = __webpack_require__(10);
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocations = __webpack_require__(22);

	var checkReactTypeSpec = __webpack_require__(30);

	var canDefineProperty = __webpack_require__(13);
	var getIteratorFn = __webpack_require__(15);
	var warning = __webpack_require__(11);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {

	  createElement: function createElement(type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function createFactory(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function get() {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function cloneElement(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(10);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};

	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}

	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;

	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function onSetDisplayName(id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function onSetChildren(id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;

	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          // TODO: This shouldn't be necessary but mounting a new root during in
	          // componentWillMount currently causes not-yet-mounted components to
	          // be purged from our tree data so their parent ID is missing.
	        }
	        !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function onSetOwner(id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function onSetParent(id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function onSetText(id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function onMountComponent(id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function onMountRootComponent(id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function onUpdateComponent(id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function onUnmountComponent(id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function purgeUnmountedComponents() {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function isMounted(id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function getStackAddendumByID(id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function getChildIDs(id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function getDisplayName(id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function getElement(id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function getOwnerID(id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function getParentID(id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function getSource(id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function getText(id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function getUpdateCount(id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function getRootIDs() {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function getRegisteredIDs() {
	    return Object.keys(tree);
	  }
	};

	module.exports = ReactComponentTreeDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactPropTypeLocationNames = __webpack_require__(24);
	var ReactPropTypesSecret = __webpack_require__(31);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	var ReactComponentTreeDevtool;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeDevtool = __webpack_require__(29);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeDevtool) {
	            ReactComponentTreeDevtool = __webpack_require__(29);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 31 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocationNames = __webpack_require__(24);
	var ReactPropTypesSecret = __webpack_require__(31);

	var emptyFunction = __webpack_require__(12);
	var getIteratorFn = __webpack_require__(15);
	var warning = __webpack_require__(11);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 33 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.3.0';

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactElement = __webpack_require__(9);

	var invariant = __webpack_require__(8);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(36);

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDefaultInjection = __webpack_require__(40);
	var ReactMount = __webpack_require__(167);
	var ReactReconciler = __webpack_require__(60);
	var ReactUpdates = __webpack_require__(57);
	var ReactVersion = __webpack_require__(33);

	var findDOMNode = __webpack_require__(172);
	var getHostComponentFromComposite = __webpack_require__(173);
	var renderSubtreeIntoContainer = __webpack_require__(174);
	var warning = __webpack_require__(11);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function getNodeFromInstance(inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(50);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var DOMProperty = __webpack_require__(38);
	var ReactDOMComponentFlags = __webpack_require__(39);

	var invariant = __webpack_require__(8);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function isCustomAttribute(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 39 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(41);
	var ChangeEventPlugin = __webpack_require__(56);
	var DefaultEventPluginOrder = __webpack_require__(74);
	var EnterLeaveEventPlugin = __webpack_require__(75);
	var HTMLDOMPropertyConfig = __webpack_require__(80);
	var ReactComponentBrowserEnvironment = __webpack_require__(81);
	var ReactDOMComponent = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMEmptyComponent = __webpack_require__(138);
	var ReactDOMTreeTraversal = __webpack_require__(139);
	var ReactDOMTextComponent = __webpack_require__(140);
	var ReactDefaultBatchingStrategy = __webpack_require__(141);
	var ReactEventListener = __webpack_require__(142);
	var ReactInjection = __webpack_require__(145);
	var ReactReconcileTransaction = __webpack_require__(146);
	var SVGDOMPropertyConfig = __webpack_require__(154);
	var SelectEventPlugin = __webpack_require__(155);
	var SimpleEventPlugin = __webpack_require__(156);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var EventConstants = __webpack_require__(42);
	var EventPropagators = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(50);
	var FallbackCompositionState = __webpack_require__(51);
	var SyntheticCompositionEvent = __webpack_require__(53);
	var SyntheticInputEvent = __webpack_require__(55);

	var keyOf = __webpack_require__(25);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (typeof opera === 'undefined' ? 'undefined' : _typeof(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if ((typeof detail === 'undefined' ? 'undefined' : _typeof(detail)) === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(23);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(46);

	var accumulateInto = __webpack_require__(48);
	var forEachAccumulated = __webpack_require__(49);
	var warning = __webpack_require__(11);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var EventPluginRegistry = __webpack_require__(45);
	var EventPluginUtils = __webpack_require__(46);
	var ReactErrorUtils = __webpack_require__(47);

	var accumulateInto = __webpack_require__(48);
	var forEachAccumulated = __webpack_require__(49);
	var invariant = __webpack_require__(8);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function getDictionaryKey(inst) {
	  return '.' + inst._rootNodeID;
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function putListener(inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : _prodInvariant('94', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function getListener(inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function deleteListener(inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function deleteAllListeners(inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function enqueueEvents(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function processEventQueue(simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function __purge() {
	    listenerBank = {};
	  },

	  __getListenerBank: function __getListenerBank() {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function injectEventPluginOrder(InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function _resetEventPlugins() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var EventConstants = __webpack_require__(42);
	var ReactErrorUtils = __webpack_require__(47);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function injectComponentTree(Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function injectTreeTraversal(Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function validateEventDispatches(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function getInstanceFromNode(node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function getNodeFromInstance(node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function isAncestor(a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function getLowestCommonAncestor(a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function getParentInstance(inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function traverseTwoPhase(target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function rethrowCaughtError() {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 49 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ }),
/* 50 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);

	var getTextContentAccessor = __webpack_require__(52);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function destructor() {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function getText() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function getData() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);

	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function timeStamp(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function preventDefault() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function stopPropagation() {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function persist() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function destructor() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function construct(target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function apply(constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function set(target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function E() {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(44);
	var EventPropagators = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);
	var SyntheticEvent = __webpack_require__(54);

	var getEventTarget = __webpack_require__(71);
	var isEventSupported = __webpack_require__(72);
	var isTextInputElement = __webpack_require__(73);
	var keyOf = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function get() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function set(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var CallbackQueue = __webpack_require__(58);
	var PooledClass = __webpack_require__(6);
	var ReactFeatureFlags = __webpack_require__(59);
	var ReactReconciler = __webpack_require__(60);
	var Transaction = __webpack_require__(70);

	var invariant = __webpack_require__(8);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function initialize() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function close() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function initialize() {
	    this.callbackQueue.reset();
	  },
	  close: function close() {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function destructor() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function perform(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function flushBatchedUpdates() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);

	var invariant = __webpack_require__(8);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function rollback(len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function destructor() {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 59 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(61);
	var ReactInstrumentation = __webpack_require__(63);

	var warning = __webpack_require__(11);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function getHostNode(internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(62);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function isValidOwner(object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(64);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */

	'use strict';

	var ReactInvalidSetStateWarningDevTool = __webpack_require__(65);
	var ReactHostOperationHistoryDevtool = __webpack_require__(66);
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var ReactChildrenMutationWarningDevtool = __webpack_require__(67);
	var ExecutionEnvironment = __webpack_require__(50);

	var performanceNow = __webpack_require__(68);
	var warning = __webpack_require__(11);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}

	var _isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactHostOperationHistoryDevtool.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryDevtool.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (_isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var ReactDebugTool = {
	  addDevtool: function addDevtool(devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function removeDevtool(devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function isProfiling() {
	    return _isProfiling;
	  },
	  beginProfiling: function beginProfiling() {
	    if (_isProfiling) {
	      return;
	    }

	    _isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
	  },
	  endProfiling: function endProfiling() {
	    if (!_isProfiling) {
	      return;
	    }

	    _isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeDevtool(ReactHostOperationHistoryDevtool);
	  },
	  getFlushHistory: function getFlushHistory() {
	    return flushHistory;
	  },
	  onBeginFlush: function onBeginFlush() {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function onEndFlush() {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function onBeginReconcilerTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function onEndReconcilerTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onError: function onError(debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function onHostOperation(debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onComponentHasMounted: function onComponentHasMounted(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onComponentHasMounted', debugID);
	  },
	  onComponentHasUpdated: function onComponentHasUpdated(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onComponentHasUpdated', debugID);
	  },
	  onSetState: function onSetState() {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function onSetDisplayName(debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function onSetChildren(debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function onSetOwner(debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetParent: function onSetParent(debugID, parentDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetParent', debugID, parentDebugID);
	  },
	  onSetText: function onSetText(debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function onMountRootComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeMountComponent', debugID, element);
	  },
	  onMountComponent: function onMountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function onUpdateComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function onUnmountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function onTestEvent() {
	    emitEvent('onTestEvent');
	  }
	};

	ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	ReactDebugTool.addDevtool(ReactChildrenMutationWarningDevtool);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningDevTool
	 */

	'use strict';

	var warning = __webpack_require__(11);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function warnInvalidSetState() {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    processingChildContext = false;
	  },
	  onSetState: function onSetState() {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningDevTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 66 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryDevtool
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryDevtool = {
	  onHostOperation: function onHostOperation(debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function clearHistory() {
	    if (ReactHostOperationHistoryDevtool._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function getHistory() {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryDevtool;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildrenMutationWarningDevtool
	 */

	'use strict';

	var ReactComponentTreeDevtool = __webpack_require__(29);

	var warning = __webpack_require__(11);

	var elements = {};

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element._shadowChildren === undefined) {
	    return;
	  }
	  if (element._shadowChildren === element.props.children) {
	    return;
	  }
	  var isMutated = false;
	  if (Array.isArray(element._shadowChildren)) {
	    if (element._shadowChildren.length === element.props.children.length) {
	      for (var i = 0; i < element._shadowChildren.length; i++) {
	        if (element._shadowChildren[i] !== element.props.children[i]) {
	          isMutated = true;
	        }
	      }
	    } else {
	      isMutated = true;
	    }
	  }
	  process.env.NODE_ENV !== 'production' ? warning(Array.isArray(element._shadowChildren) && !isMutated, 'Component\'s children should not be mutated.%s', ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    elements[debugID] = element;
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    elements[debugID] = element;
	  },
	  onComponentHasMounted: function onComponentHasMounted(debugID) {
	    handleElement(debugID, elements[debugID]);
	    delete elements[debugID];
	  },
	  onComponentHasUpdated: function onComponentHasUpdated(debugID) {
	    handleElement(debugID, elements[debugID]);
	    delete elements[debugID];
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(69);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function reinitializeTransaction() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function isInTransaction() {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function perform(method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function initializeAll(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function closeAll(startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 71 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ }),
/* 73 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(25);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPropagators = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(37);
	var SyntheticMouseEvent = __webpack_require__(76);

	var keyOf = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);
	var ViewportMetrics = __webpack_require__(78);

	var getEventModifierState = __webpack_require__(79);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function button(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function relatedTarget(event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function pageX(event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function pageY(event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	var getEventTarget = __webpack_require__(71);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function view(event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function detail(event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ }),
/* 78 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function refreshScrollValues(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ }),
/* 79 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(82);
	var ReactDOMIDOperations = __webpack_require__(94);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function unmountIDFromEnvironment(rootNodeID) {}

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(83);
	var Danger = __webpack_require__(89);
	var ReactMultiChildUpdateTypes = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstrumentation = __webpack_require__(63);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(86);
	var setInnerHTML = __webpack_require__(85);
	var setTextContent = __webpack_require__(87);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function dangerouslyReplaceNodeWithMarkup(oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function processUpdates(parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(84);
	var setInnerHTML = __webpack_require__(85);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(86);
	var setTextContent = __webpack_require__(87);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ }),
/* 84 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);
	var DOMNamespaces = __webpack_require__(84);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(86);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function setInnerHTML(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ }),
/* 86 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);
	var escapeTextContentForBrowser = __webpack_require__(88);
	var setInnerHTML = __webpack_require__(85);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function setTextContent(node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function setTextContent(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ }),
/* 88 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var DOMLazyTree = __webpack_require__(83);
	var ExecutionEnvironment = __webpack_require__(50);

	var createNodesFromMarkup = __webpack_require__(90);
	var emptyFunction = __webpack_require__(12);
	var invariant = __webpack_require__(8);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(50);

	var createArrayFromMixed = __webpack_require__(91);
	var getMarkupWrap = __webpack_require__(92);
	var invariant = __webpack_require__(8);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var invariant = __webpack_require__(8);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(50);

	var invariant = __webpack_require__(8);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(23);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(37);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var AutoFocusUtils = __webpack_require__(96);
	var CSSPropertyOperations = __webpack_require__(98);
	var DOMLazyTree = __webpack_require__(83);
	var DOMNamespaces = __webpack_require__(84);
	var DOMProperty = __webpack_require__(38);
	var DOMPropertyOperations = __webpack_require__(106);
	var EventConstants = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(44);
	var EventPluginRegistry = __webpack_require__(45);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactComponentBrowserEnvironment = __webpack_require__(81);
	var ReactDOMButton = __webpack_require__(115);
	var ReactDOMComponentFlags = __webpack_require__(39);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMInput = __webpack_require__(117);
	var ReactDOMOption = __webpack_require__(119);
	var ReactDOMSelect = __webpack_require__(120);
	var ReactDOMTextarea = __webpack_require__(121);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMultiChild = __webpack_require__(122);
	var ReactServerRenderingTransaction = __webpack_require__(134);

	var emptyFunction = __webpack_require__(12);
	var escapeTextContentForBrowser = __webpack_require__(88);
	var invariant = __webpack_require__(8);
	var isEventSupported = __webpack_require__(72);
	var keyOf = __webpack_require__(25);
	var shallowEqual = __webpack_require__(129);
	var validateDOMNesting = __webpack_require__(137);
	var warning = __webpack_require__(11);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(_typeof(props.dangerouslySetInnerHTML) === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || _typeof(props.style) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function setContentChildForInstrumentation(content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    this._contentDebugID = contentDebugID;
	    var text = '' + content;

	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);

	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID) {
	        var callback = function callback() {
	          return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function _createContentMarkup(transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function _createInitialChildren(transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function receiveComponent(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevElement, nextElement, context) {
	    var _this2 = this;

	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID) {
	        var callback = function callback() {
	          return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function _updateDOMProperties(lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function _updateDOMChildren(lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[_typeof(lastProps.children)] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[_typeof(nextProps.children)] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function getHostNode() {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },

	  getPublicInstance: function getPublicInstance() {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(37);

	var focusNode = __webpack_require__(97);

	var AutoFocusUtils = {
	  focusDOMComponent: function focusDOMComponent() {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ }),
/* 97 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(99);
	var ExecutionEnvironment = __webpack_require__(50);
	var ReactInstrumentation = __webpack_require__(63);

	var camelizeStyleName = __webpack_require__(100);
	var dangerousStyleValue = __webpack_require__(102);
	var hyphenateStyleName = __webpack_require__(103);
	var memoizeStringOnly = __webpack_require__(105);
	var warning = __webpack_require__(11);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function checkRenderMessage(owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function warnValidStyle(name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function createMarkupForStyles(styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function setValueForStyles(node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 99 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(101);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 101 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(99);
	var warning = __webpack_require__(11);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(104);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 104 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 105 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMInstrumentation = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(63);

	var quoteAttributeValueForBrowser = __webpack_require__(111);
	var warning = __webpack_require__(11);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function createMarkupForID(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function setAttributeForID(node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function createMarkupForRoot() {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function setAttributeForRoot(node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function createMarkupForProperty(name, value) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function createMarkupForCustomAttribute(name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function setValueForProperty(node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function setValueForAttribute(node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function deleteValueForAttribute(node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function deleteValueForProperty(node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDOMDebugTool = __webpack_require__(108);
	  debugTool = ReactDOMDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMDebugTool
	 */

	'use strict';

	var ReactDOMNullInputValuePropDevtool = __webpack_require__(109);
	var ReactDOMUnknownPropertyDevtool = __webpack_require__(110);
	var ReactDebugTool = __webpack_require__(64);

	var warning = __webpack_require__(11);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}

	var ReactDOMDebugTool = {
	  addDevtool: function addDevtool(devtool) {
	    ReactDebugTool.addDevtool(devtool);
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function removeDevtool(devtool) {
	    ReactDebugTool.removeDevtool(devtool);
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  onCreateMarkupForProperty: function onCreateMarkupForProperty(name, value) {
	    emitEvent('onCreateMarkupForProperty', name, value);
	  },
	  onSetValueForProperty: function onSetValueForProperty(node, name, value) {
	    emitEvent('onSetValueForProperty', node, name, value);
	  },
	  onDeleteValueForProperty: function onDeleteValueForProperty(node, name) {
	    emitEvent('onDeleteValueForProperty', node, name);
	  },
	  onTestEvent: function onTestEvent() {
	    emitEvent('onTestEvent');
	  }
	};

	ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
	ReactDOMDebugTool.addDevtool(ReactDOMNullInputValuePropDevtool);

	module.exports = ReactDOMDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropDevtool
	 */

	'use strict';

	var ReactComponentTreeDevtool = __webpack_require__(29);

	var warning = __webpack_require__(11);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyDevtool
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);
	var EventPluginRegistry = __webpack_require__(45);
	var ReactComponentTreeDevtool = __webpack_require__(29);

	var warning = __webpack_require__(11);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function validateProperty(tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function warnUnknownProperties(debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(88);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var EventConstants = __webpack_require__(42);
	var EventPluginRegistry = __webpack_require__(45);
	var ReactEventEmitterMixin = __webpack_require__(113);
	var ViewportMetrics = __webpack_require__(78);

	var getVendorPrefixedEventName = __webpack_require__(114);
	var isEventSupported = __webpack_require__(72);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function injectReactEventListener(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function setEnabled(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function isEnabled() {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function listenTo(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(44);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(116);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ }),
/* 116 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function getHostProps(inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(116);
	var DOMPropertyOperations = __webpack_require__(106);
	var LinkedValueUtils = __webpack_require__(118);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function getHostProps(inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	    if (props.type !== 'submit' && props.type !== 'reset') {
	      node.value = node.value;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactPropTypes = __webpack_require__(32);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactPropTypesSecret = __webpack_require__(31);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function value(props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function checked(props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function checkPropTypes(tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function getValue(inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function getChecked(inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function executeOnChange(inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactChildren = __webpack_require__(5);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMSelect = __webpack_require__(120);

	var warning = __webpack_require__(11);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function mountWrapper(inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function getHostProps(inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(116);
	var LinkedValueUtils = __webpack_require__(118);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var warning = __webpack_require__(11);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function getHostProps(inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function getSelectValueContext(inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function postUpdateWrapper(inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(116);
	var LinkedValueUtils = __webpack_require__(118);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function getHostProps(inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactComponentEnvironment = __webpack_require__(123);
	var ReactInstanceMap = __webpack_require__(124);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMultiChildUpdateTypes = __webpack_require__(93);

	var ReactCurrentOwner = __webpack_require__(10);
	var ReactReconciler = __webpack_require__(60);
	var ReactChildReconciler = __webpack_require__(125);

	var emptyFunction = __webpack_require__(12);
	var flattenChildren = __webpack_require__(133);
	var invariant = __webpack_require__(8);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setParentForInstrumentation = emptyFunction;
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function getDebugID(inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setParentForInstrumentation = function setParentForInstrumentation(child) {
	    if (child._debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
	    }
	  };
	  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function mountChildren(nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          if (process.env.NODE_ENV !== 'production') {
	            setParentForInstrumentation.call(this, child);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function updateTextContent(nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function updateMarkup(nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function unmountChildren(safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function createChild(child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function removeChild(child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function _unmountChild(child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function injectEnvironment(environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 124 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function remove(key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function get(key) {
	    return key._reactInternalInstance;
	  },

	  has: function has(key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function set(key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(60);

	var instantiateReactComponent = __webpack_require__(126);
	var KeyEscapeUtils = __webpack_require__(16);
	var shouldUpdateReactComponent = __webpack_require__(130);
	var traverseAllChildren = __webpack_require__(14);
	var warning = __webpack_require__(11);

	var ReactComponentTreeDevtool;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeDevtool = __webpack_require__(29);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeDevtool) {
	      ReactComponentTreeDevtool = __webpack_require__(29);
	    }
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function unmountChildren(renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var ReactCompositeComponent = __webpack_require__(127);
	var ReactEmptyComponent = __webpack_require__(131);
	var ReactHostComponent = __webpack_require__(132);
	var ReactInstrumentation = __webpack_require__(63);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : _prodInvariant('131', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    if (shouldHaveDebugID) {
	      var debugID = nextDebugID++;
	      instance._debugID = debugID;
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    } else {
	      instance._debugID = 0;
	    }
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var ReactComponentEnvironment = __webpack_require__(123);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactElement = __webpack_require__(9);
	var ReactErrorUtils = __webpack_require__(47);
	var ReactInstanceMap = __webpack_require__(124);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactNodeTypes = __webpack_require__(128);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactReconciler = __webpack_require__(60);

	var checkReactTypeSpec = __webpack_require__(30);
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(8);
	var shallowEqual = __webpack_require__(129);
	var shouldUpdateReactComponent = __webpack_require__(130);
	var warning = __webpack_require__(11);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function construct(element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID) {
	        var callback = function callback(component) {
	          return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	    if (process.env.NODE_ENV !== 'production') {
	      if (child._debugID !== 0 && this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	      }
	    }

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function getHostNode() {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function _maskContext(context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function _processContext(context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function _processChildContext(currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(_typeof(Component.childContextTypes) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function _processPendingState(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID) {
	        var callback = function callback() {
	          return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	      if (process.env.NODE_ENV !== 'production') {
	        if (child._debugID !== 0 && this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	        }
	      }

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));

	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
	    var inst = this._instance;

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function _renderValidatedComponent() {
	    var renderedComponent;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function attachRef(ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function detachRef(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function getName() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function getPublicInstance() {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactElement = __webpack_require__(9);

	var invariant = __webpack_require__(8);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function getType(node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 129 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 130 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement);
	  var nextType = typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement);
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 131 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function create(instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var invariant = __webpack_require__(8);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function injectTextComponentClass(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function injectComponentClasses(componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var KeyEscapeUtils = __webpack_require__(16);
	var traverseAllChildren = __webpack_require__(14);
	var warning = __webpack_require__(11);

	var ReactComponentTreeDevtool;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeDevtool = __webpack_require__(29);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && (typeof traverseContext === 'undefined' ? 'undefined' : _typeof(traverseContext)) === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeDevtool) {
	        ReactComponentTreeDevtool = __webpack_require__(29);
	      }
	      process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);
	var Transaction = __webpack_require__(70);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactServerUpdateQueue = __webpack_require__(135);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function enqueue() {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function getUpdateQueue() {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {},

	  checkpoint: function checkpoint() {},

	  rollback: function rollback() {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var ReactUpdateQueue = __webpack_require__(136);
	var Transaction = __webpack_require__(70);
	var warning = __webpack_require__(11);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */

	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(10);
	var ReactInstanceMap = __webpack_require__(124);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function validateCallback(callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function findOwnerStack(instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function validateDOMNesting(childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DOMLazyTree = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(37);

	var ReactDOMEmptyComponent = function ReactDOMEmptyComponent(instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function receiveComponent() {},
	  getHostNode: function getHostNode() {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function unmountComponent() {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(8);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);

	var DOMChildrenOperations = __webpack_require__(82);
	var DOMLazyTree = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstrumentation = __webpack_require__(63);

	var escapeTextContentForBrowser = __webpack_require__(88);
	var invariant = __webpack_require__(8);
	var validateDOMNesting = __webpack_require__(137);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function ReactDOMTextComponent(text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);

	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function receiveComponent(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);

	        if (process.env.NODE_ENV !== 'production') {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },

	  getHostNode: function getHostNode() {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function unmountComponent() {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactUpdates = __webpack_require__(57);
	var Transaction = __webpack_require__(70);

	var emptyFunction = __webpack_require__(12);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function close() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var EventListener = __webpack_require__(143);
	var ExecutionEnvironment = __webpack_require__(50);
	var PooledClass = __webpack_require__(6);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(57);

	var getEventTarget = __webpack_require__(71);
	var getUnboundedScrollPosition = __webpack_require__(144);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function destructor() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function setEnabled(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function isEnabled() {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function monitorScrollValue(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(12);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 144 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(38);
	var EventPluginHub = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(46);
	var ReactComponentEnvironment = __webpack_require__(123);
	var ReactClass = __webpack_require__(21);
	var ReactEmptyComponent = __webpack_require__(131);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactHostComponent = __webpack_require__(132);
	var ReactUpdates = __webpack_require__(57);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var CallbackQueue = __webpack_require__(58);
	var PooledClass = __webpack_require__(6);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactInputSelection = __webpack_require__(147);
	var ReactInstrumentation = __webpack_require__(63);
	var Transaction = __webpack_require__(70);
	var ReactUpdateQueue = __webpack_require__(136);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function initialize() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function close(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function initialize() {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function close() {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function getUpdateQueue() {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function checkpoint() {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function rollback(checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(148);

	var containsNode = __webpack_require__(150);
	var focusNode = __webpack_require__(97);
	var getActiveElement = __webpack_require__(153);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function getSelectionInformation() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function restoreSelection(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function getSelection(input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function setSelection(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(50);

	var getNodeForCharacterOffset = __webpack_require__(149);
	var getTextContentAccessor = __webpack_require__(52);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ }),
/* 149 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(151);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(152);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 152 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 153 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */

	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 154 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(42);
	var EventPropagators = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInputSelection = __webpack_require__(147);
	var SyntheticEvent = __webpack_require__(54);

	var getActiveElement = __webpack_require__(153);
	var isTextInputElement = __webpack_require__(73);
	var keyOf = __webpack_require__(25);
	var shallowEqual = __webpack_require__(129);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var EventConstants = __webpack_require__(42);
	var EventListener = __webpack_require__(143);
	var EventPropagators = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(37);
	var SyntheticAnimationEvent = __webpack_require__(157);
	var SyntheticClipboardEvent = __webpack_require__(158);
	var SyntheticEvent = __webpack_require__(54);
	var SyntheticFocusEvent = __webpack_require__(159);
	var SyntheticKeyboardEvent = __webpack_require__(160);
	var SyntheticMouseEvent = __webpack_require__(76);
	var SyntheticDragEvent = __webpack_require__(163);
	var SyntheticTouchEvent = __webpack_require__(164);
	var SyntheticTransitionEvent = __webpack_require__(165);
	var SyntheticUIEvent = __webpack_require__(77);
	var SyntheticWheelEvent = __webpack_require__(166);

	var emptyFunction = __webpack_require__(12);
	var getEventCharCode = __webpack_require__(161);
	var invariant = __webpack_require__(8);
	var keyOf = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  return '.' + inst._rootNodeID;
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function willDeleteListener(inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function clipboardData(event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);

	var getEventCharCode = __webpack_require__(161);
	var getEventKey = __webpack_require__(162);
	var getEventModifierState = __webpack_require__(79);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function charCode(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function keyCode(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function which(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 161 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(161);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(76);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(77);

	var getEventModifierState = __webpack_require__(79);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(76);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function deltaX(event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function deltaY(event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var DOMLazyTree = __webpack_require__(83);
	var DOMProperty = __webpack_require__(38);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMContainerInfo = __webpack_require__(168);
	var ReactDOMFeatureFlags = __webpack_require__(169);
	var ReactElement = __webpack_require__(9);
	var ReactFeatureFlags = __webpack_require__(59);
	var ReactInstanceMap = __webpack_require__(124);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMarkupChecksum = __webpack_require__(170);
	var ReactReconciler = __webpack_require__(60);
	var ReactUpdateQueue = __webpack_require__(136);
	var ReactUpdates = __webpack_require__(57);

	var emptyObject = __webpack_require__(19);
	var instantiateReactComponent = __webpack_require__(126);
	var invariant = __webpack_require__(8);
	var setInnerHTML = __webpack_require__(85);
	var shouldUpdateReactComponent = __webpack_require__(130);
	var warning = __webpack_require__(11);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function TopLevelWrapper() {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function scrollMonitor(container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function _updateRootComponent(prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    if (process.env.NODE_ENV !== 'production') {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function render(nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function unmountComponentAtNode(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function _mountImageIntoNode(markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(137);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 169 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(171);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function addChecksumToMarkup(markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function canReuseMarkup(markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ }),
/* 171 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstanceMap = __webpack_require__(124);

	var getHostComponentFromComposite = __webpack_require__(173);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(128);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(167);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _config = __webpack_require__(176);

	__webpack_require__(183);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var LoginDialog = function (_React$Component) {
	  _inherits(LoginDialog, _React$Component);

	  function LoginDialog(props) {
	    _classCallCheck(this, LoginDialog);

	    var _this = _possibleConstructorReturn(this, (LoginDialog.__proto__ || Object.getPrototypeOf(LoginDialog)).call(this, props));

	    _this.handleEmail = _this.handleEmail.bind(_this);
	    _this.handlePassword = _this.handlePassword.bind(_this);
	    _this.clickLogin = _this.clickLogin.bind(_this);

	    _this.makeRegister = _this.makeRegister.bind(_this);

	    _this.AUTH = null;

	    _this.state = {
	      email: "",
	      password: "",
	      type: "password",
	      eye: "show"
	    };
	    return _this;
	  }

	  _createClass(LoginDialog, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _config.appConfig)();
	      this.AUTH = _config.APP.auth();
	    }
	  }, {
	    key: "handleEmail",
	    value: function handleEmail(event) {
	      this.setState({
	        email: event.target.value
	      });
	    }
	  }, {
	    key: "handlePassword",
	    value: function handlePassword(event) {
	      this.setState({
	        password: event.target.value
	      });
	    }
	  }, {
	    key: "clickLogin",
	    value: function clickLogin() {
	      var _this2 = this;

	      var self = this;

	      if (this.state.email && this.state.password) {
	        this.AUTH.signInWithEmailAndPassword(this.state.email, this.state.password).then(function (cred) {
	          console.log(cred.user);

	          _this2.props.handleUidMain(cred.user.uid);
	        }).catch(function (error) {
	          console.error(error);

	          alert("Incorrect login or password!");
	        });
	      } else {
	        alert("All fields must be filled in!");
	      }
	    }
	  }, {
	    key: "makeRegister",
	    value: function makeRegister() {
	      this.props.handleRegisterMain(1);
	    }
	  }, {
	    key: "handleTypeInputPassword",
	    value: function handleTypeInputPassword(eventState, typeState) {
	      if (this.state[eventState] == "password" && this.state[typeState] == "show") {
	        var _setState;

	        this.setState((_setState = {}, _defineProperty(_setState, eventState, "text"), _defineProperty(_setState, typeState, "hide"), _setState));
	        e.preventDefault();
	      } else {
	        var _setState2;

	        this.setState((_setState2 = {}, _defineProperty(_setState2, eventState, "password"), _defineProperty(_setState2, typeState, "show"), _setState2));
	        e.preventDefault();
	      }
	    }
	  }, {
	    key: "onKeyPressHandler",
	    value: function onKeyPressHandler(event) {
	      if (event.key == "Enter") {
	        console.log("Pressed Enter!!!");
	        this.clickLogin();
	        event.preventDefault();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this3 = this;

	      return _react2.default.createElement(
	        "div",
	        { className: "container" },
	        _react2.default.createElement(
	          "div",
	          { className: "row justify-content-center" },
	          _react2.default.createElement(
	            "div",
	            { className: "col-md-6" },
	            _react2.default.createElement(
	              "div",
	              { className: "card" },
	              _react2.default.createElement(
	                "div",
	                { className: "card-header" },
	                "Login"
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "card-body" },
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row" },
	                  _react2.default.createElement(
	                    "label",
	                    { className: "col-md-4 col-form-label text-md-right" },
	                    "E-Mail Address"
	                  ),
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-6" },
	                    _react2.default.createElement("input", {
	                      id: "email",
	                      type: "email",
	                      className: "form-control",
	                      name: "email",
	                      required: true,
	                      onChange: this.handleEmail,
	                      onKeyDown: function onKeyDown(event) {
	                        _this3.onKeyPressHandler(event);
	                      }
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row" },
	                  _react2.default.createElement(
	                    "label",
	                    { className: "col-md-4 col-form-label text-md-right" },
	                    "Password"
	                  ),
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-6" },
	                    _react2.default.createElement("input", {
	                      id: "password",
	                      type: this.state.type,
	                      className: "form-control",
	                      name: "password",
	                      required: true,
	                      onChange: this.handlePassword,
	                      onKeyDown: function onKeyDown(event) {
	                        _this3.onKeyPressHandler(event);
	                      }
	                    }),
	                    _react2.default.createElement(
	                      "div",
	                      {
	                        style: {
	                          display: "flex",
	                          justifyContent: "flex-end"
	                        }
	                      },
	                      _react2.default.createElement(
	                        "button",
	                        {
	                          className: "btn",
	                          onClick: function onClick() {
	                            _this3.handleTypeInputPassword("type", "eye");
	                          }
	                        },
	                        _react2.default.createElement(
	                          "span",
	                          null,
	                          this.state.eye
	                        )
	                      ),
	                      " "
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row mb-0" },
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-8 offset-md-4" },
	                    _react2.default.createElement(
	                      "button",
	                      {
	                        type: "button",
	                        className: "btn btn-primary size",
	                        onClick: this.clickLogin
	                      },
	                      "Login"
	                    ),
	                    _react2.default.createElement(
	                      "button",
	                      {
	                        className: "btn btn-link",
	                        onClick: this.makeRegister
	                      },
	                      "Register"
	                    )
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return LoginDialog;
	}(_react2.default.Component);

	exports.default = LoginDialog;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.APP = undefined;
	exports.appConfig = appConfig;

	var _app = __webpack_require__(177);

	var _app2 = _interopRequireDefault(_app);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var firebaseConfig = {
	  apiKey: "AIzaSyAMftdpsJMFqTnwalWnT2PdWeUZcfTDi6A",
	  authDomain: "tetiana-914c4.firebaseapp.com",
	  projectId: "tetiana-914c4",
	  storageBucket: "tetiana-914c4.appspot.com",
	  messagingSenderId: "527587577962",
	  appId: "1:527587577962:web:014c85df6dc697a588ba13",
	  measurementId: "G-93Z2RYYRS3"
	};

	var APP = exports.APP = null;

	function appConfig() {
	  exports.APP = APP = !_app2.default.apps.length ? (0, _app.initializeApp)(firebaseConfig) : _app2.default.app();
	}

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var firebase = __webpack_require__(178);

	function _interopDefaultLegacy(e) {
	  return e && (typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object' && 'default' in e ? e : { 'default': e };
	}

	var firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);

	var name = "firebase";
	var version = "7.24.0";

	/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	firebase__default['default'].registerVersion(name, version, 'app');

	module.exports = firebase__default['default'];
	//# sourceMappingURL=index.cjs.js.map

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	Object.defineProperty(exports, '__esModule', { value: true });

	var tslib = __webpack_require__(179);
	var util = __webpack_require__(180);
	var component = __webpack_require__(181);
	var logger$1 = __webpack_require__(182);

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _a;
	var ERRORS = (_a = {}, _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " + 'call Firebase App.initializeApp()', _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}", _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists", _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted", _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.', _a["invalid-log-argument" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.', _a);
	var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);

	var name$1 = "@firebase/app";
	var version = "0.6.11";

	var name$2 = "@firebase/analytics";

	var name$3 = "@firebase/auth";

	var name$4 = "@firebase/database";

	var name$5 = "@firebase/functions";

	var name$6 = "@firebase/installations";

	var name$7 = "@firebase/messaging";

	var name$8 = "@firebase/performance";

	var name$9 = "@firebase/remote-config";

	var name$a = "@firebase/storage";

	var name$b = "@firebase/firestore";

	var name$c = "firebase-wrapper";

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _a$1;
	var DEFAULT_ENTRY_NAME = '[DEFAULT]';
	var PLATFORM_LOG_STRING = (_a$1 = {}, _a$1[name$1] = 'fire-core', _a$1[name$2] = 'fire-analytics', _a$1[name$3] = 'fire-auth', _a$1[name$4] = 'fire-rtdb', _a$1[name$5] = 'fire-fn', _a$1[name$6] = 'fire-iid', _a$1[name$7] = 'fire-fcm', _a$1[name$8] = 'fire-perf', _a$1[name$9] = 'fire-rc', _a$1[name$a] = 'fire-gcs', _a$1[name$b] = 'fire-fst', _a$1['fire-js'] = 'fire-js', _a$1[name$c] = 'fire-js-all', _a$1);

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var logger = new logger$1.Logger('@firebase/app');

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Global context object for a collection of services using
	 * a shared authentication state.
	 */
	var FirebaseAppImpl = /** @class */function () {
	    function FirebaseAppImpl(options, config, firebase_) {
	        var e_1, _a;
	        var _this = this;
	        this.firebase_ = firebase_;
	        this.isDeleted_ = false;
	        this.name_ = config.name;
	        this.automaticDataCollectionEnabled_ = config.automaticDataCollectionEnabled || false;
	        this.options_ = util.deepCopy(options);
	        this.container = new component.ComponentContainer(config.name);
	        // add itself to container
	        this._addComponent(new component.Component('app', function () {
	            return _this;
	        }, "PUBLIC" /* PUBLIC */));
	        try {
	            // populate ComponentContainer with existing components
	            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var component$1 = _c.value;
	                this._addComponent(component$1);
	            }
	        } catch (e_1_1) {
	            e_1 = { error: e_1_1 };
	        } finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            } finally {
	                if (e_1) throw e_1.error;
	            }
	        }
	    }
	    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
	        get: function get() {
	            this.checkDestroyed_();
	            return this.automaticDataCollectionEnabled_;
	        },
	        set: function set(val) {
	            this.checkDestroyed_();
	            this.automaticDataCollectionEnabled_ = val;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
	        get: function get() {
	            this.checkDestroyed_();
	            return this.name_;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
	        get: function get() {
	            this.checkDestroyed_();
	            return this.options_;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    FirebaseAppImpl.prototype.delete = function () {
	        var _this = this;
	        return new Promise(function (resolve) {
	            _this.checkDestroyed_();
	            resolve();
	        }).then(function () {
	            _this.firebase_.INTERNAL.removeApp(_this.name_);
	            return Promise.all(_this.container.getProviders().map(function (provider) {
	                return provider.delete();
	            }));
	        }).then(function () {
	            _this.isDeleted_ = true;
	        });
	    };
	    /**
	     * Return a service instance associated with this app (creating it
	     * on demand), identified by the passed instanceIdentifier.
	     *
	     * NOTE: Currently storage and functions are the only ones that are leveraging this
	     * functionality. They invoke it by calling:
	     *
	     * ```javascript
	     * firebase.app().storage('STORAGE BUCKET ID')
	     * ```
	     *
	     * The service name is passed to this already
	     * @internal
	     */
	    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
	        if (instanceIdentifier === void 0) {
	            instanceIdentifier = DEFAULT_ENTRY_NAME;
	        }
	        this.checkDestroyed_();
	        // getImmediate will always succeed because _getService is only called for registered components.
	        return this.container.getProvider(name).getImmediate({
	            identifier: instanceIdentifier
	        });
	    };
	    /**
	     * Remove a service instance from the cache, so we will create a new instance for this service
	     * when people try to get this service again.
	     *
	     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
	     *
	     * @param name The service name
	     * @param instanceIdentifier instance identifier in case multiple instances are allowed
	     * @internal
	     */
	    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
	        if (instanceIdentifier === void 0) {
	            instanceIdentifier = DEFAULT_ENTRY_NAME;
	        }
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        this.container.getProvider(name).clearInstance(instanceIdentifier);
	    };
	    /**
	     * @param component the component being added to this app's container
	     */
	    FirebaseAppImpl.prototype._addComponent = function (component) {
	        try {
	            this.container.addComponent(component);
	        } catch (e) {
	            logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
	        }
	    };
	    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
	        this.container.addOrOverwriteComponent(component);
	    };
	    /**
	     * This function will throw an Error if the App has already been deleted -
	     * use before performing API actions on the App.
	     */
	    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
	        if (this.isDeleted_) {
	            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
	        }
	    };
	    return FirebaseAppImpl;
	}();
	// Prevent dead-code elimination of these methods w/o invalid property
	// copying.
	FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');

	var version$1 = "7.20.0";

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Because auth can't share code with other components, we attach the utility functions
	 * in an internal namespace to share code.
	 * This function return a firebase namespace object without
	 * any utility functions, so it can be shared between the regular firebaseNamespace and
	 * the lite version.
	 */
	function createFirebaseNamespaceCore(firebaseAppImpl) {
	    var apps = {};
	    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    var components = new Map();
	    // A namespace is a plain JavaScript Object.
	    var namespace = {
	        // Hack to prevent Babel from modifying the object returned
	        // as the firebase namespace.
	        // @ts-ignore
	        __esModule: true,
	        initializeApp: initializeApp,
	        // @ts-ignore
	        app: app,
	        registerVersion: registerVersion,
	        setLogLevel: logger$1.setLogLevel,
	        onLog: onLog,
	        // @ts-ignore
	        apps: null,
	        SDK_VERSION: version$1,
	        INTERNAL: {
	            registerComponent: registerComponent,
	            removeApp: removeApp,
	            components: components,
	            useAsService: useAsService
	        }
	    };
	    // Inject a circular default export to allow Babel users who were previously
	    // using:
	    //
	    //   import firebase from 'firebase';
	    //   which becomes: var firebase = require('firebase').default;
	    //
	    // instead of
	    //
	    //   import * as firebase from 'firebase';
	    //   which becomes: var firebase = require('firebase');
	    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	    namespace['default'] = namespace;
	    // firebase.apps is a read-only getter.
	    Object.defineProperty(namespace, 'apps', {
	        get: getApps
	    });
	    /**
	     * Called by App.delete() - but before any services associated with the App
	     * are deleted.
	     */
	    function removeApp(name) {
	        delete apps[name];
	    }
	    /**
	     * Get the App object for a given name (or DEFAULT).
	     */
	    function app(name) {
	        name = name || DEFAULT_ENTRY_NAME;
	        if (!util.contains(apps, name)) {
	            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
	        }
	        return apps[name];
	    }
	    // @ts-ignore
	    app['App'] = firebaseAppImpl;
	    function initializeApp(options, rawConfig) {
	        if (rawConfig === void 0) {
	            rawConfig = {};
	        }
	        if ((typeof rawConfig === 'undefined' ? 'undefined' : _typeof(rawConfig)) !== 'object' || rawConfig === null) {
	            var name_1 = rawConfig;
	            rawConfig = { name: name_1 };
	        }
	        var config = rawConfig;
	        if (config.name === undefined) {
	            config.name = DEFAULT_ENTRY_NAME;
	        }
	        var name = config.name;
	        if (typeof name !== 'string' || !name) {
	            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
	                appName: String(name)
	            });
	        }
	        if (util.contains(apps, name)) {
	            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
	        }
	        var app = new firebaseAppImpl(options, config, namespace);
	        apps[name] = app;
	        return app;
	    }
	    /*
	     * Return an array of all the non-deleted FirebaseApps.
	     */
	    function getApps() {
	        // Make a copy so caller cannot mutate the apps list.
	        return Object.keys(apps).map(function (name) {
	            return apps[name];
	        });
	    }
	    function registerComponent(component) {
	        var e_1, _a;
	        var componentName = component.name;
	        if (components.has(componentName)) {
	            logger.debug("There were multiple attempts to register component " + componentName + ".");
	            return component.type === "PUBLIC" /* PUBLIC */
	            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
	            namespace[componentName] : null;
	        }
	        components.set(componentName, component);
	        // create service namespace for public components
	        if (component.type === "PUBLIC" /* PUBLIC */) {
	                // The Service namespace is an accessor function ...
	                var serviceNamespace = function serviceNamespace(appArg) {
	                    if (appArg === void 0) {
	                        appArg = app();
	                    }
	                    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                    if (typeof appArg[componentName] !== 'function') {
	                        // Invalid argument.
	                        // This happens in the following case: firebase.storage('gs:/')
	                        throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
	                            appName: componentName
	                        });
	                    }
	                    // Forward service instance lookup to the FirebaseApp.
	                    // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                    return appArg[componentName]();
	                };
	                // ... and a container for service-level properties.
	                if (component.serviceProps !== undefined) {
	                    util.deepExtend(serviceNamespace, component.serviceProps);
	                }
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                namespace[componentName] = serviceNamespace;
	                // Patch the FirebaseAppImpl prototype
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                firebaseAppImpl.prototype[componentName] =
	                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
	                // option added to the no-explicit-any rule when ESlint releases it.
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                function () {
	                    var args = [];
	                    for (var _i = 0; _i < arguments.length; _i++) {
	                        args[_i] = arguments[_i];
	                    }
	                    var serviceFxn = this._getService.bind(this, componentName);
	                    return serviceFxn.apply(this, component.multipleInstances ? args : []);
	                };
	            }
	        try {
	            // add the component to existing app instances
	            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var appName = _c.value;
	                apps[appName]._addComponent(component);
	            }
	        } catch (e_1_1) {
	            e_1 = { error: e_1_1 };
	        } finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            } finally {
	                if (e_1) throw e_1.error;
	            }
	        }
	        return component.type === "PUBLIC" /* PUBLIC */
	        ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        namespace[componentName] : null;
	    }
	    function registerVersion(libraryKeyOrName, version, variant) {
	        var _a;
	        // TODO: We can use this check to whitelist strings when/if we set up
	        // a good whitelist system.
	        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
	        if (variant) {
	            library += "-" + variant;
	        }
	        var libraryMismatch = library.match(/\s|\//);
	        var versionMismatch = version.match(/\s|\//);
	        if (libraryMismatch || versionMismatch) {
	            var warning = ["Unable to register library \"" + library + "\" with version \"" + version + "\":"];
	            if (libraryMismatch) {
	                warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
	            }
	            if (libraryMismatch && versionMismatch) {
	                warning.push('and');
	            }
	            if (versionMismatch) {
	                warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
	            }
	            logger.warn(warning.join(' '));
	            return;
	        }
	        registerComponent(new component.Component(library + "-version", function () {
	            return { library: library, version: version };
	        }, "VERSION" /* VERSION */));
	    }
	    function onLog(logCallback, options) {
	        if (logCallback !== null && typeof logCallback !== 'function') {
	            throw ERROR_FACTORY.create("invalid-log-argument" /* INVALID_LOG_ARGUMENT */, {
	                appName: name
	            });
	        }
	        logger$1.setUserLogHandler(logCallback, options);
	    }
	    // Map the requested service to a registered service name
	    // (used to map auth to serverAuth service when needed).
	    function useAsService(app, name) {
	        if (name === 'serverAuth') {
	            return null;
	        }
	        var useService = name;
	        return useService;
	    }
	    return namespace;
	}

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Return a firebase namespace object.
	 *
	 * In production, this will be called exactly once and the result
	 * assigned to the 'firebase' global.  It may be called multiple times
	 * in unit tests.
	 */
	function createFirebaseNamespace() {
	    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
	    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
	        extendNamespace: extendNamespace,
	        createSubscribe: util.createSubscribe,
	        ErrorFactory: util.ErrorFactory,
	        deepExtend: util.deepExtend });
	    /**
	     * Patch the top-level firebase namespace with additional properties.
	     *
	     * firebase.INTERNAL.extendNamespace()
	     */
	    function extendNamespace(props) {
	        util.deepExtend(namespace, props);
	    }
	    return namespace;
	}
	var firebase = createFirebaseNamespace();

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var PlatformLoggerService = /** @class */function () {
	    function PlatformLoggerService(container) {
	        this.container = container;
	    }
	    // In initial implementation, this will be called by installations on
	    // auth token refresh, and installations will send this string.
	    PlatformLoggerService.prototype.getPlatformInfoString = function () {
	        var providers = this.container.getProviders();
	        // Loop through providers and get library/version pairs from any that are
	        // version components.
	        return providers.map(function (provider) {
	            if (isVersionServiceProvider(provider)) {
	                var service = provider.getImmediate();
	                return service.library + "/" + service.version;
	            } else {
	                return null;
	            }
	        }).filter(function (logString) {
	            return logString;
	        }).join(' ');
	    };
	    return PlatformLoggerService;
	}();
	/**
	 *
	 * @param provider check if this provider provides a VersionService
	 *
	 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
	 * provides VersionService. The provider is not necessarily a 'app-version'
	 * provider.
	 */
	function isVersionServiceProvider(provider) {
	    var component = provider.getComponent();
	    return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* VERSION */;
	}

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function registerCoreComponents(firebase, variant) {
	    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) {
	        return new PlatformLoggerService(container);
	    }, "PRIVATE" /* PRIVATE */));
	    // Register `app` package.
	    firebase.registerVersion(name$1, version, variant);
	    // Register platform SDK identifier (no version).
	    firebase.registerVersion('fire-js', '');
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Firebase Lite detection test
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	if (util.isBrowser() && self.firebase !== undefined) {
	    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
	    // eslint-disable-next-line
	    var sdkVersion = self.firebase.SDK_VERSION;
	    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
	        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
	    }
	}
	var initializeApp = firebase.initializeApp;
	// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
	// the no-explicit-any rule when ESlint releases it.
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	firebase.initializeApp = function () {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i] = arguments[_i];
	    }
	    // Environment check before initializing app
	    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
	    // in @firebase/logger
	    if (util.isNode()) {
	        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
	    }
	    return initializeApp.apply(undefined, args);
	};
	var firebase$1 = firebase;
	registerCoreComponents(firebase$1);

	exports.default = firebase$1;
	exports.firebase = firebase$1;
	//# sourceMappingURL=index.cjs.js.map

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*! *****************************************************************************
	Copyright (c) Microsoft Corporation.

	Permission to use, copy, modify, and/or distribute this software for any
	purpose with or without fee is hereby granted.

	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
	REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
	INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
	LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
	OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
	PERFORMANCE OF THIS SOFTWARE.
	***************************************************************************** */

	/* global global, define, System, Reflect, Promise */
	var __extends;
	var __assign;
	var __rest;
	var __decorate;
	var __param;
	var __metadata;
	var __awaiter;
	var __generator;
	var __exportStar;
	var __values;
	var __read;
	var __spread;
	var __spreadArrays;
	var _await;
	var __asyncGenerator;
	var __asyncDelegator;
	var __asyncValues;
	var __makeTemplateObject;
	var __importStar;
	var __importDefault;
	var __classPrivateFieldGet;
	var __classPrivateFieldSet;
	var __createBinding;
	(function (factory) {
	    var root = (typeof global === "undefined" ? "undefined" : _typeof(global)) === "object" ? global : (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" ? self : _typeof(this) === "object" ? this : {};
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (exports) {
	            factory(createExporter(root, createExporter(exports)));
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) === "object" && _typeof(module.exports) === "object") {
	        factory(createExporter(root, createExporter(module.exports)));
	    } else {
	        factory(createExporter(root));
	    }
	    function createExporter(exports, previous) {
	        if (exports !== root) {
	            if (typeof Object.create === "function") {
	                Object.defineProperty(exports, "__esModule", { value: true });
	            } else {
	                exports.__esModule = true;
	            }
	        }
	        return function (id, v) {
	            return exports[id] = previous ? previous(id, v) : v;
	        };
	    }
	})(function (exporter) {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };

	    __extends = function __extends(d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };

	    __assign = Object.assign || function (t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) {
	                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	            }
	        }
	        return t;
	    };

	    __rest = function __rest(s, e) {
	        var t = {};
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
	        }if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
	        }
	        return t;
	    };

	    __decorate = function __decorate(decorators, target, key, desc) {
	        var c = arguments.length,
	            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	            d;
	        if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	            if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	        }return c > 3 && r && Object.defineProperty(target, key, r), r;
	    };

	    __param = function __param(paramIndex, decorator) {
	        return function (target, key) {
	            decorator(target, key, paramIndex);
	        };
	    };

	    __metadata = function __metadata(metadataKey, metadataValue) {
	        if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
	    };

	    __awaiter = function __awaiter(thisArg, _arguments, P, generator) {
	        function adopt(value) {
	            return value instanceof P ? value : new P(function (resolve) {
	                resolve(value);
	            });
	        }
	        return new (P || (P = Promise))(function (resolve, reject) {
	            function fulfilled(value) {
	                try {
	                    step(generator.next(value));
	                } catch (e) {
	                    reject(e);
	                }
	            }
	            function rejected(value) {
	                try {
	                    step(generator["throw"](value));
	                } catch (e) {
	                    reject(e);
	                }
	            }
	            function step(result) {
	                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
	            }
	            step((generator = generator.apply(thisArg, _arguments || [])).next());
	        });
	    };

	    __generator = function __generator(thisArg, body) {
	        var _ = { label: 0, sent: function sent() {
	                if (t[0] & 1) throw t[1];return t[1];
	            }, trys: [], ops: [] },
	            f,
	            y,
	            t,
	            g;
	        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
	            return this;
	        }), g;
	        function verb(n) {
	            return function (v) {
	                return step([n, v]);
	            };
	        }
	        function step(op) {
	            if (f) throw new TypeError("Generator is already executing.");
	            while (_) {
	                try {
	                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	                    if (y = 0, t) op = [op[0] & 2, t.value];
	                    switch (op[0]) {
	                        case 0:case 1:
	                            t = op;break;
	                        case 4:
	                            _.label++;return { value: op[1], done: false };
	                        case 5:
	                            _.label++;y = op[1];op = [0];continue;
	                        case 7:
	                            op = _.ops.pop();_.trys.pop();continue;
	                        default:
	                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
	                                _ = 0;continue;
	                            }
	                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
	                                _.label = op[1];break;
	                            }
	                            if (op[0] === 6 && _.label < t[1]) {
	                                _.label = t[1];t = op;break;
	                            }
	                            if (t && _.label < t[2]) {
	                                _.label = t[2];_.ops.push(op);break;
	                            }
	                            if (t[2]) _.ops.pop();
	                            _.trys.pop();continue;
	                    }
	                    op = body.call(thisArg, _);
	                } catch (e) {
	                    op = [6, e];y = 0;
	                } finally {
	                    f = t = 0;
	                }
	            }if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };
	        }
	    };

	    __createBinding = function __createBinding(o, m, k, k2) {
	        if (k2 === undefined) k2 = k;
	        o[k2] = m[k];
	    };

	    __exportStar = function __exportStar(m, exports) {
	        for (var p in m) {
	            if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
	        }
	    };

	    __values = function __values(o) {
	        var s = typeof Symbol === "function" && Symbol.iterator,
	            m = s && o[s],
	            i = 0;
	        if (m) return m.call(o);
	        if (o && typeof o.length === "number") return {
	            next: function next() {
	                if (o && i >= o.length) o = void 0;
	                return { value: o && o[i++], done: !o };
	            }
	        };
	        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	    };

	    __read = function __read(o, n) {
	        var m = typeof Symbol === "function" && o[Symbol.iterator];
	        if (!m) return o;
	        var i = m.call(o),
	            r,
	            ar = [],
	            e;
	        try {
	            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
	                ar.push(r.value);
	            }
	        } catch (error) {
	            e = { error: error };
	        } finally {
	            try {
	                if (r && !r.done && (m = i["return"])) m.call(i);
	            } finally {
	                if (e) throw e.error;
	            }
	        }
	        return ar;
	    };

	    __spread = function __spread() {
	        for (var ar = [], i = 0; i < arguments.length; i++) {
	            ar = ar.concat(__read(arguments[i]));
	        }return ar;
	    };

	    __spreadArrays = function __spreadArrays() {
	        for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
	            s += arguments[i].length;
	        }for (var r = Array(s), k = 0, i = 0; i < il; i++) {
	            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
	                r[k] = a[j];
	            }
	        }return r;
	    };

	    _await = function __await(v) {
	        return this instanceof _await ? (this.v = v, this) : new _await(v);
	    };

	    __asyncGenerator = function __asyncGenerator(thisArg, _arguments, generator) {
	        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	        var g = generator.apply(thisArg, _arguments || []),
	            i,
	            q = [];
	        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
	            return this;
	        }, i;
	        function verb(n) {
	            if (g[n]) i[n] = function (v) {
	                return new Promise(function (a, b) {
	                    q.push([n, v, a, b]) > 1 || resume(n, v);
	                });
	            };
	        }
	        function resume(n, v) {
	            try {
	                step(g[n](v));
	            } catch (e) {
	                settle(q[0][3], e);
	            }
	        }
	        function step(r) {
	            r.value instanceof _await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
	        }
	        function fulfill(value) {
	            resume("next", value);
	        }
	        function reject(value) {
	            resume("throw", value);
	        }
	        function settle(f, v) {
	            if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
	        }
	    };

	    __asyncDelegator = function __asyncDelegator(o) {
	        var i, p;
	        return i = {}, verb("next"), verb("throw", function (e) {
	            throw e;
	        }), verb("return"), i[Symbol.iterator] = function () {
	            return this;
	        }, i;
	        function verb(n, f) {
	            i[n] = o[n] ? function (v) {
	                return (p = !p) ? { value: _await(o[n](v)), done: n === "return" } : f ? f(v) : v;
	            } : f;
	        }
	    };

	    __asyncValues = function __asyncValues(o) {
	        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	        var m = o[Symbol.asyncIterator],
	            i;
	        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
	            return this;
	        }, i);
	        function verb(n) {
	            i[n] = o[n] && function (v) {
	                return new Promise(function (resolve, reject) {
	                    v = o[n](v), settle(resolve, reject, v.done, v.value);
	                });
	            };
	        }
	        function settle(resolve, reject, d, v) {
	            Promise.resolve(v).then(function (v) {
	                resolve({ value: v, done: d });
	            }, reject);
	        }
	    };

	    __makeTemplateObject = function __makeTemplateObject(cooked, raw) {
	        if (Object.defineProperty) {
	            Object.defineProperty(cooked, "raw", { value: raw });
	        } else {
	            cooked.raw = raw;
	        }
	        return cooked;
	    };

	    __importStar = function __importStar(mod) {
	        if (mod && mod.__esModule) return mod;
	        var result = {};
	        if (mod != null) for (var k in mod) {
	            if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
	        }result["default"] = mod;
	        return result;
	    };

	    __importDefault = function __importDefault(mod) {
	        return mod && mod.__esModule ? mod : { "default": mod };
	    };

	    __classPrivateFieldGet = function __classPrivateFieldGet(receiver, privateMap) {
	        if (!privateMap.has(receiver)) {
	            throw new TypeError("attempted to get private field on non-instance");
	        }
	        return privateMap.get(receiver);
	    };

	    __classPrivateFieldSet = function __classPrivateFieldSet(receiver, privateMap, value) {
	        if (!privateMap.has(receiver)) {
	            throw new TypeError("attempted to set private field on non-instance");
	        }
	        privateMap.set(receiver, value);
	        return value;
	    };

	    exporter("__extends", __extends);
	    exporter("__assign", __assign);
	    exporter("__rest", __rest);
	    exporter("__decorate", __decorate);
	    exporter("__param", __param);
	    exporter("__metadata", __metadata);
	    exporter("__awaiter", __awaiter);
	    exporter("__generator", __generator);
	    exporter("__exportStar", __exportStar);
	    exporter("__createBinding", __createBinding);
	    exporter("__values", __values);
	    exporter("__read", __read);
	    exporter("__spread", __spread);
	    exporter("__spreadArrays", __spreadArrays);
	    exporter("__await", _await);
	    exporter("__asyncGenerator", __asyncGenerator);
	    exporter("__asyncDelegator", __asyncDelegator);
	    exporter("__asyncValues", __asyncValues);
	    exporter("__makeTemplateObject", __makeTemplateObject);
	    exporter("__importStar", __importStar);
	    exporter("__importDefault", __importDefault);
	    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
	    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	Object.defineProperty(exports, '__esModule', { value: true });

	var tslib = __webpack_require__(179);

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
	 */
	var CONSTANTS = {
	    /**
	     * @define {boolean} Whether this is the client Node.js SDK.
	     */
	    NODE_CLIENT: false,
	    /**
	     * @define {boolean} Whether this is the Admin Node.js SDK.
	     */
	    NODE_ADMIN: false,
	    /**
	     * Firebase SDK Version
	     */
	    SDK_VERSION: '${JSCORE_VERSION}'
	};

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Throws an error if the provided assertion is falsy
	 */
	var assert = function assert(assertion, message) {
	    if (!assertion) {
	        throw assertionError(message);
	    }
	};
	/**
	 * Returns an Error object suitable for throwing.
	 */
	var assertionError = function assertionError(message) {
	    return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);
	};

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var stringToByteArray = function stringToByteArray(str) {
	    // TODO(user): Use native implementations if/when available
	    var out = [];
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        if (c < 128) {
	            out[p++] = c;
	        } else if (c < 2048) {
	            out[p++] = c >> 6 | 192;
	            out[p++] = c & 63 | 128;
	        } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
	            // Surrogate Pair
	            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
	            out[p++] = c >> 18 | 240;
	            out[p++] = c >> 12 & 63 | 128;
	            out[p++] = c >> 6 & 63 | 128;
	            out[p++] = c & 63 | 128;
	        } else {
	            out[p++] = c >> 12 | 224;
	            out[p++] = c >> 6 & 63 | 128;
	            out[p++] = c & 63 | 128;
	        }
	    }
	    return out;
	};
	/**
	 * Turns an array of numbers into the string given by the concatenation of the
	 * characters to which the numbers correspond.
	 * @param bytes Array of numbers representing characters.
	 * @return Stringification of the array.
	 */
	var byteArrayToString = function byteArrayToString(bytes) {
	    // TODO(user): Use native implementations if/when available
	    var out = [];
	    var pos = 0,
	        c = 0;
	    while (pos < bytes.length) {
	        var c1 = bytes[pos++];
	        if (c1 < 128) {
	            out[c++] = String.fromCharCode(c1);
	        } else if (c1 > 191 && c1 < 224) {
	            var c2 = bytes[pos++];
	            out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
	        } else if (c1 > 239 && c1 < 365) {
	            // Surrogate Pair
	            var c2 = bytes[pos++];
	            var c3 = bytes[pos++];
	            var c4 = bytes[pos++];
	            var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;
	            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
	            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
	        } else {
	            var c2 = bytes[pos++];
	            var c3 = bytes[pos++];
	            out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
	        }
	    }
	    return out.join('');
	};
	// We define it as an object literal instead of a class because a class compiled down to es5 can't
	// be treeshaked. https://github.com/rollup/rollup/issues/1691
	// Static lookup maps, lazily populated by init_()
	var base64 = {
	    /**
	     * Maps bytes to characters.
	     */
	    byteToCharMap_: null,
	    /**
	     * Maps characters to bytes.
	     */
	    charToByteMap_: null,
	    /**
	     * Maps bytes to websafe characters.
	     * @private
	     */
	    byteToCharMapWebSafe_: null,
	    /**
	     * Maps websafe characters to bytes.
	     * @private
	     */
	    charToByteMapWebSafe_: null,
	    /**
	     * Our default alphabet, shared between
	     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
	     */
	    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
	    /**
	     * Our default alphabet. Value 64 (=) is special; it means "nothing."
	     */
	    get ENCODED_VALS() {
	        return this.ENCODED_VALS_BASE + '+/=';
	    },
	    /**
	     * Our websafe alphabet.
	     */
	    get ENCODED_VALS_WEBSAFE() {
	        return this.ENCODED_VALS_BASE + '-_.';
	    },
	    /**
	     * Whether this browser supports the atob and btoa functions. This extension
	     * started at Mozilla but is now implemented by many browsers. We use the
	     * ASSUME_* variables to avoid pulling in the full useragent detection library
	     * but still allowing the standard per-browser compilations.
	     *
	     */
	    HAS_NATIVE_SUPPORT: typeof atob === 'function',
	    /**
	     * Base64-encode an array of bytes.
	     *
	     * @param input An array of bytes (numbers with
	     *     value in [0, 255]) to encode.
	     * @param webSafe Boolean indicating we should use the
	     *     alternative alphabet.
	     * @return The base64 encoded string.
	     */
	    encodeByteArray: function encodeByteArray(input, webSafe) {
	        if (!Array.isArray(input)) {
	            throw Error('encodeByteArray takes an array as a parameter');
	        }
	        this.init_();
	        var byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
	        var output = [];
	        for (var i = 0; i < input.length; i += 3) {
	            var byte1 = input[i];
	            var haveByte2 = i + 1 < input.length;
	            var byte2 = haveByte2 ? input[i + 1] : 0;
	            var haveByte3 = i + 2 < input.length;
	            var byte3 = haveByte3 ? input[i + 2] : 0;
	            var outByte1 = byte1 >> 2;
	            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;
	            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;
	            var outByte4 = byte3 & 0x3f;
	            if (!haveByte3) {
	                outByte4 = 64;
	                if (!haveByte2) {
	                    outByte3 = 64;
	                }
	            }
	            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
	        }
	        return output.join('');
	    },
	    /**
	     * Base64-encode a string.
	     *
	     * @param input A string to encode.
	     * @param webSafe If true, we should use the
	     *     alternative alphabet.
	     * @return The base64 encoded string.
	     */
	    encodeString: function encodeString(input, webSafe) {
	        // Shortcut for Mozilla browsers that implement
	        // a native base64 encoder in the form of "btoa/atob"
	        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
	            return btoa(input);
	        }
	        return this.encodeByteArray(stringToByteArray(input), webSafe);
	    },
	    /**
	     * Base64-decode a string.
	     *
	     * @param input to decode.
	     * @param webSafe True if we should use the
	     *     alternative alphabet.
	     * @return string representing the decoded value.
	     */
	    decodeString: function decodeString(input, webSafe) {
	        // Shortcut for Mozilla browsers that implement
	        // a native base64 encoder in the form of "btoa/atob"
	        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
	            return atob(input);
	        }
	        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
	    },
	    /**
	     * Base64-decode a string.
	     *
	     * In base-64 decoding, groups of four characters are converted into three
	     * bytes.  If the encoder did not apply padding, the input length may not
	     * be a multiple of 4.
	     *
	     * In this case, the last group will have fewer than 4 characters, and
	     * padding will be inferred.  If the group has one or two characters, it decodes
	     * to one byte.  If the group has three characters, it decodes to two bytes.
	     *
	     * @param input Input to decode.
	     * @param webSafe True if we should use the web-safe alphabet.
	     * @return bytes representing the decoded value.
	     */
	    decodeStringToByteArray: function decodeStringToByteArray(input, webSafe) {
	        this.init_();
	        var charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
	        var output = [];
	        for (var i = 0; i < input.length;) {
	            var byte1 = charToByteMap[input.charAt(i++)];
	            var haveByte2 = i < input.length;
	            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
	            ++i;
	            var haveByte3 = i < input.length;
	            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
	            ++i;
	            var haveByte4 = i < input.length;
	            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
	            ++i;
	            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
	                throw Error();
	            }
	            var outByte1 = byte1 << 2 | byte2 >> 4;
	            output.push(outByte1);
	            if (byte3 !== 64) {
	                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;
	                output.push(outByte2);
	                if (byte4 !== 64) {
	                    var outByte3 = byte3 << 6 & 0xc0 | byte4;
	                    output.push(outByte3);
	                }
	            }
	        }
	        return output;
	    },
	    /**
	     * Lazy static initialization function. Called before
	     * accessing any of the static map variables.
	     * @private
	     */
	    init_: function init_() {
	        if (!this.byteToCharMap_) {
	            this.byteToCharMap_ = {};
	            this.charToByteMap_ = {};
	            this.byteToCharMapWebSafe_ = {};
	            this.charToByteMapWebSafe_ = {};
	            // We want quick mappings back and forth, so we precompute two maps.
	            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
	                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
	                this.charToByteMap_[this.byteToCharMap_[i]] = i;
	                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
	                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
	                // Be forgiving when decoding and correctly decode both encodings.
	                if (i >= this.ENCODED_VALS_BASE.length) {
	                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
	                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
	                }
	            }
	        }
	    }
	};
	/**
	 * URL-safe base64 encoding
	 */
	var base64Encode = function base64Encode(str) {
	    var utf8Bytes = stringToByteArray(str);
	    return base64.encodeByteArray(utf8Bytes, true);
	};
	/**
	 * URL-safe base64 decoding
	 *
	 * NOTE: DO NOT use the global atob() function - it does NOT support the
	 * base64Url variant encoding.
	 *
	 * @param str To be decoded
	 * @return Decoded result, if possible
	 */
	var base64Decode = function base64Decode(str) {
	    try {
	        return base64.decodeString(str, true);
	    } catch (e) {
	        console.error('base64Decode failed: ', e);
	    }
	    return null;
	};

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Do a deep-copy of basic JavaScript Objects or Arrays.
	 */
	function deepCopy(value) {
	    return deepExtend(undefined, value);
	}
	/**
	 * Copy properties from source to target (recursively allows extension
	 * of Objects and Arrays).  Scalar values in the target are over-written.
	 * If target is undefined, an object of the appropriate type will be created
	 * (and returned).
	 *
	 * We recursively copy all child properties of plain Objects in the source- so
	 * that namespace- like dictionaries are merged.
	 *
	 * Note that the target can be a function, in which case the properties in
	 * the source Object are copied onto it as static properties of the Function.
	 */
	function deepExtend(target, source) {
	    if (!(source instanceof Object)) {
	        return source;
	    }
	    switch (source.constructor) {
	        case Date:
	            // Treat Dates like scalars; if the target date object had any child
	            // properties - they will be lost!
	            var dateValue = source;
	            return new Date(dateValue.getTime());
	        case Object:
	            if (target === undefined) {
	                target = {};
	            }
	            break;
	        case Array:
	            // Always copy the array source and overwrite the target.
	            target = [];
	            break;
	        default:
	            // Not a plain Object - treat it as a scalar.
	            return source;
	    }
	    for (var prop in source) {
	        if (!source.hasOwnProperty(prop)) {
	            continue;
	        }
	        target[prop] = deepExtend(target[prop], source[prop]);
	    }
	    return target;
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Deferred = /** @class */function () {
	    function Deferred() {
	        var _this = this;
	        this.reject = function () {};
	        this.resolve = function () {};
	        this.promise = new Promise(function (resolve, reject) {
	            _this.resolve = resolve;
	            _this.reject = reject;
	        });
	    }
	    /**
	     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
	     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
	     * and returns a node-style callback which will resolve or reject the Deferred's promise.
	     */
	    Deferred.prototype.wrapCallback = function (callback) {
	        var _this = this;
	        return function (error, value) {
	            if (error) {
	                _this.reject(error);
	            } else {
	                _this.resolve(value);
	            }
	            if (typeof callback === 'function') {
	                // Attaching noop handler just in case developer wasn't expecting
	                // promises
	                _this.promise.catch(function () {});
	                // Some of our callbacks don't expect a value and our own tests
	                // assert that the parameter length is 1
	                if (callback.length === 1) {
	                    callback(error);
	                } else {
	                    callback(error, value);
	                }
	            }
	        };
	    };
	    return Deferred;
	}();

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Returns navigator.userAgent string or '' if it's not defined.
	 * @return user agent string
	 */
	function getUA() {
	    if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {
	        return navigator['userAgent'];
	    } else {
	        return '';
	    }
	}
	/**
	 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
	 *
	 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
	 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
	 * wait for a callback.
	 */
	function isMobileCordova() {
	    return typeof window !== 'undefined' &&
	    // @ts-ignore Setting up an broadly applicable index signature for Window
	    // just to deal with this case would probably be a bad idea.
	    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());
	}
	/**
	 * Detect Node.js.
	 *
	 * @return true if Node.js environment is detected.
	 */
	// Node detection logic from: https://github.com/iliakan/detect-node/
	function isNode() {
	    try {
	        return Object.prototype.toString.call(global.process) === '[object process]';
	    } catch (e) {
	        return false;
	    }
	}
	/**
	 * Detect Browser Environment
	 */
	function isBrowser() {
	    return (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.self === self;
	}
	function isBrowserExtension() {
	    var runtime = (typeof chrome === 'undefined' ? 'undefined' : _typeof(chrome)) === 'object' ? chrome.runtime : (typeof browser === 'undefined' ? 'undefined' : _typeof(browser)) === 'object' ? browser.runtime : undefined;
	    return (typeof runtime === 'undefined' ? 'undefined' : _typeof(runtime)) === 'object' && runtime.id !== undefined;
	}
	/**
	 * Detect React Native.
	 *
	 * @return true if ReactNative environment is detected.
	 */
	function isReactNative() {
	    return (typeof navigator === 'undefined' ? 'undefined' : _typeof(navigator)) === 'object' && navigator['product'] === 'ReactNative';
	}
	/** Detects Electron apps. */
	function isElectron() {
	    return getUA().indexOf('Electron/') >= 0;
	}
	/** Detects Internet Explorer. */
	function isIE() {
	    var ua = getUA();
	    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
	}
	/** Detects Universal Windows Platform apps. */
	function isUWP() {
	    return getUA().indexOf('MSAppHost/') >= 0;
	}
	/**
	 * Detect whether the current SDK build is the Node version.
	 *
	 * @return true if it's the Node SDK build.
	 */
	function isNodeSdk() {
	    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
	}
	/** Returns true if we are running in Safari. */
	function isSafari() {
	    return !isNode() && navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');
	}
	/**
	 * This method checks if indexedDB is supported by current browser/service worker context
	 * @return true if indexedDB is supported by current browser/service worker context
	 */
	function isIndexedDBAvailable() {
	    return 'indexedDB' in self && indexedDB != null;
	}
	/**
	 * This method validates browser context for indexedDB by opening a dummy indexedDB database and reject
	 * if errors occur during the database open operation.
	 */
	function validateIndexedDBOpenable() {
	    return new Promise(function (resolve, reject) {
	        try {
	            var preExist_1 = true;
	            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';
	            var request_1 = window.indexedDB.open(DB_CHECK_NAME_1);
	            request_1.onsuccess = function () {
	                request_1.result.close();
	                // delete database only when it doesn't pre-exist
	                if (!preExist_1) {
	                    window.indexedDB.deleteDatabase(DB_CHECK_NAME_1);
	                }
	                resolve(true);
	            };
	            request_1.onupgradeneeded = function () {
	                preExist_1 = false;
	            };
	            request_1.onerror = function () {
	                var _a;
	                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');
	            };
	        } catch (error) {
	            reject(error);
	        }
	    });
	}
	/**
	 *
	 * This method checks whether cookie is enabled within current browser
	 * @return true if cookie is enabled within current browser
	 */
	function areCookiesEnabled() {
	    if (!navigator || !navigator.cookieEnabled) {
	        return false;
	    }
	    return true;
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var ERROR_NAME = 'FirebaseError';
	// Based on code from:
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
	var FirebaseError = /** @class */function (_super) {
	    tslib.__extends(FirebaseError, _super);
	    function FirebaseError(code, message) {
	        var _this = _super.call(this, message) || this;
	        _this.code = code;
	        _this.name = ERROR_NAME;
	        // Fix For ES5
	        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
	        Object.setPrototypeOf(_this, FirebaseError.prototype);
	        // Maintains proper stack trace for where our error was thrown.
	        // Only available on V8.
	        if (Error.captureStackTrace) {
	            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
	        }
	        return _this;
	    }
	    return FirebaseError;
	}(Error);
	var ErrorFactory = /** @class */function () {
	    function ErrorFactory(service, serviceName, errors) {
	        this.service = service;
	        this.serviceName = serviceName;
	        this.errors = errors;
	    }
	    ErrorFactory.prototype.create = function (code) {
	        var data = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            data[_i - 1] = arguments[_i];
	        }
	        var customData = data[0] || {};
	        var fullCode = this.service + "/" + code;
	        var template = this.errors[code];
	        var message = template ? replaceTemplate(template, customData) : 'Error';
	        // Service Name: Error message (service/code).
	        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
	        var error = new FirebaseError(fullCode, fullMessage);
	        // Keys with an underscore at the end of their name are not included in
	        // error.data for some reason.
	        // TODO: Replace with Object.entries when lib is updated to es2017.
	        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
	            var key = _b[_a];
	            if (key.slice(-1) !== '_') {
	                if (key in error) {
	                    console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
	                }
	                error[key] = customData[key];
	            }
	        }
	        return error;
	    };
	    return ErrorFactory;
	}();
	function replaceTemplate(template, data) {
	    return template.replace(PATTERN, function (_, key) {
	        var value = data[key];
	        return value != null ? String(value) : "<" + key + "?>";
	    });
	}
	var PATTERN = /\{\$([^}]+)}/g;

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Evaluates a JSON string into a javascript object.
	 *
	 * @param {string} str A string containing JSON.
	 * @return {*} The javascript object representing the specified JSON.
	 */
	function jsonEval(str) {
	    return JSON.parse(str);
	}
	/**
	 * Returns JSON representing a javascript object.
	 * @param {*} data Javascript object to be stringified.
	 * @return {string} The JSON contents of the object.
	 */
	function stringify(data) {
	    return JSON.stringify(data);
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Decodes a Firebase auth. token into constituent parts.
	 *
	 * Notes:
	 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var decode = function decode(token) {
	    var header = {},
	        claims = {},
	        data = {},
	        signature = '';
	    try {
	        var parts = token.split('.');
	        header = jsonEval(base64Decode(parts[0]) || '');
	        claims = jsonEval(base64Decode(parts[1]) || '');
	        signature = parts[2];
	        data = claims['d'] || {};
	        delete claims['d'];
	    } catch (e) {}
	    return {
	        header: header,
	        claims: claims,
	        data: data,
	        signature: signature
	    };
	};
	/**
	 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
	 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var isValidTimestamp = function isValidTimestamp(token) {
	    var claims = decode(token).claims;
	    var now = Math.floor(new Date().getTime() / 1000);
	    var validSince = 0,
	        validUntil = 0;
	    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object') {
	        if (claims.hasOwnProperty('nbf')) {
	            validSince = claims['nbf'];
	        } else if (claims.hasOwnProperty('iat')) {
	            validSince = claims['iat'];
	        }
	        if (claims.hasOwnProperty('exp')) {
	            validUntil = claims['exp'];
	        } else {
	            // token will expire after 24h by default
	            validUntil = validSince + 86400;
	        }
	    }
	    return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;
	};
	/**
	 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
	 *
	 * Notes:
	 * - May return null if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var issuedAtTime = function issuedAtTime(token) {
	    var claims = decode(token).claims;
	    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat')) {
	        return claims['iat'];
	    }
	    return null;
	};
	/**
	 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var isValidFormat = function isValidFormat(token) {
	    var decoded = decode(token),
	        claims = decoded.claims;
	    return !!claims && (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat');
	};
	/**
	 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 */
	var isAdmin = function isAdmin(token) {
	    var claims = decode(token).claims;
	    return (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims['admin'] === true;
	};

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function contains(obj, key) {
	    return Object.prototype.hasOwnProperty.call(obj, key);
	}
	function safeGet(obj, key) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) {
	        return obj[key];
	    } else {
	        return undefined;
	    }
	}
	function isEmpty(obj) {
	    for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	            return false;
	        }
	    }
	    return true;
	}
	function map(obj, fn, contextObj) {
	    var res = {};
	    for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	            res[key] = fn.call(contextObj, obj[key], key, obj);
	        }
	    }
	    return res;
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
	 * params object (e.g. {arg: 'val', arg2: 'val2'})
	 * Note: You must prepend it with ? when adding it to a URL.
	 */
	function querystring(querystringParams) {
	    var params = [];
	    var _loop_1 = function _loop_1(key, value) {
	        if (Array.isArray(value)) {
	            value.forEach(function (arrayVal) {
	                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
	            });
	        } else {
	            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
	        }
	    };
	    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
	        var _b = _a[_i],
	            key = _b[0],
	            value = _b[1];
	        _loop_1(key, value);
	    }
	    return params.length ? '&' + params.join('&') : '';
	}
	/**
	 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
	 * (e.g. {arg: 'val', arg2: 'val2'})
	 */
	function querystringDecode(querystring) {
	    var obj = {};
	    var tokens = querystring.replace(/^\?/, '').split('&');
	    tokens.forEach(function (token) {
	        if (token) {
	            var key = token.split('=');
	            obj[key[0]] = key[1];
	        }
	    });
	    return obj;
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview SHA-1 cryptographic hash.
	 * Variable names follow the notation in FIPS PUB 180-3:
	 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
	 *
	 * Usage:
	 *   var sha1 = new sha1();
	 *   sha1.update(bytes);
	 *   var hash = sha1.digest();
	 *
	 * Performance:
	 *   Chrome 23:   ~400 Mbit/s
	 *   Firefox 16:  ~250 Mbit/s
	 *
	 */
	/**
	 * SHA-1 cryptographic hash constructor.
	 *
	 * The properties declared here are discussed in the above algorithm document.
	 * @constructor
	 * @final
	 * @struct
	 */
	var Sha1 = /** @class */function () {
	    function Sha1() {
	        /**
	         * Holds the previous values of accumulated variables a-e in the compress_
	         * function.
	         * @private
	         */
	        this.chain_ = [];
	        /**
	         * A buffer holding the partially computed hash result.
	         * @private
	         */
	        this.buf_ = [];
	        /**
	         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
	         * as the message schedule in the docs.
	         * @private
	         */
	        this.W_ = [];
	        /**
	         * Contains data needed to pad messages less than 64 bytes.
	         * @private
	         */
	        this.pad_ = [];
	        /**
	         * @private {number}
	         */
	        this.inbuf_ = 0;
	        /**
	         * @private {number}
	         */
	        this.total_ = 0;
	        this.blockSize = 512 / 8;
	        this.pad_[0] = 128;
	        for (var i = 1; i < this.blockSize; ++i) {
	            this.pad_[i] = 0;
	        }
	        this.reset();
	    }
	    Sha1.prototype.reset = function () {
	        this.chain_[0] = 0x67452301;
	        this.chain_[1] = 0xefcdab89;
	        this.chain_[2] = 0x98badcfe;
	        this.chain_[3] = 0x10325476;
	        this.chain_[4] = 0xc3d2e1f0;
	        this.inbuf_ = 0;
	        this.total_ = 0;
	    };
	    /**
	     * Internal compress helper function.
	     * @param buf Block to compress.
	     * @param offset Offset of the block in the buffer.
	     * @private
	     */
	    Sha1.prototype.compress_ = function (buf, offset) {
	        if (!offset) {
	            offset = 0;
	        }
	        var W = this.W_;
	        // get 16 big endian words
	        if (typeof buf === 'string') {
	            for (var i = 0; i < 16; i++) {
	                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
	                // have a bug that turns the post-increment ++ operator into pre-increment
	                // during JIT compilation.  We have code that depends heavily on SHA-1 for
	                // correctness and which is affected by this bug, so I've removed all uses
	                // of post-increment ++ in which the result value is used.  We can revert
	                // this change once the Safari bug
	                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
	                // most clients have been updated.
	                W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);
	                offset += 4;
	            }
	        } else {
	            for (var i = 0; i < 16; i++) {
	                W[i] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];
	                offset += 4;
	            }
	        }
	        // expand to 80 words
	        for (var i = 16; i < 80; i++) {
	            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	            W[i] = (t << 1 | t >>> 31) & 0xffffffff;
	        }
	        var a = this.chain_[0];
	        var b = this.chain_[1];
	        var c = this.chain_[2];
	        var d = this.chain_[3];
	        var e = this.chain_[4];
	        var f, k;
	        // TODO(user): Try to unroll this loop to speed up the computation.
	        for (var i = 0; i < 80; i++) {
	            if (i < 40) {
	                if (i < 20) {
	                    f = d ^ b & (c ^ d);
	                    k = 0x5a827999;
	                } else {
	                    f = b ^ c ^ d;
	                    k = 0x6ed9eba1;
	                }
	            } else {
	                if (i < 60) {
	                    f = b & c | d & (b | c);
	                    k = 0x8f1bbcdc;
	                } else {
	                    f = b ^ c ^ d;
	                    k = 0xca62c1d6;
	                }
	            }
	            var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;
	            e = d;
	            d = c;
	            c = (b << 30 | b >>> 2) & 0xffffffff;
	            b = a;
	            a = t;
	        }
	        this.chain_[0] = this.chain_[0] + a & 0xffffffff;
	        this.chain_[1] = this.chain_[1] + b & 0xffffffff;
	        this.chain_[2] = this.chain_[2] + c & 0xffffffff;
	        this.chain_[3] = this.chain_[3] + d & 0xffffffff;
	        this.chain_[4] = this.chain_[4] + e & 0xffffffff;
	    };
	    Sha1.prototype.update = function (bytes, length) {
	        // TODO(johnlenz): tighten the function signature and remove this check
	        if (bytes == null) {
	            return;
	        }
	        if (length === undefined) {
	            length = bytes.length;
	        }
	        var lengthMinusBlock = length - this.blockSize;
	        var n = 0;
	        // Using local instead of member variables gives ~5% speedup on Firefox 16.
	        var buf = this.buf_;
	        var inbuf = this.inbuf_;
	        // The outer while loop should execute at most twice.
	        while (n < length) {
	            // When we have no data in the block to top up, we can directly process the
	            // input buffer (assuming it contains sufficient data). This gives ~25%
	            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
	            // the data is provided in large chunks (or in multiples of 64 bytes).
	            if (inbuf === 0) {
	                while (n <= lengthMinusBlock) {
	                    this.compress_(bytes, n);
	                    n += this.blockSize;
	                }
	            }
	            if (typeof bytes === 'string') {
	                while (n < length) {
	                    buf[inbuf] = bytes.charCodeAt(n);
	                    ++inbuf;
	                    ++n;
	                    if (inbuf === this.blockSize) {
	                        this.compress_(buf);
	                        inbuf = 0;
	                        // Jump to the outer loop so we use the full-block optimization.
	                        break;
	                    }
	                }
	            } else {
	                while (n < length) {
	                    buf[inbuf] = bytes[n];
	                    ++inbuf;
	                    ++n;
	                    if (inbuf === this.blockSize) {
	                        this.compress_(buf);
	                        inbuf = 0;
	                        // Jump to the outer loop so we use the full-block optimization.
	                        break;
	                    }
	                }
	            }
	        }
	        this.inbuf_ = inbuf;
	        this.total_ += length;
	    };
	    /** @override */
	    Sha1.prototype.digest = function () {
	        var digest = [];
	        var totalBits = this.total_ * 8;
	        // Add pad 0x80 0x00*.
	        if (this.inbuf_ < 56) {
	            this.update(this.pad_, 56 - this.inbuf_);
	        } else {
	            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
	        }
	        // Add # bits.
	        for (var i = this.blockSize - 1; i >= 56; i--) {
	            this.buf_[i] = totalBits & 255;
	            totalBits /= 256; // Don't use bit-shifting here!
	        }
	        this.compress_(this.buf_);
	        var n = 0;
	        for (var i = 0; i < 5; i++) {
	            for (var j = 24; j >= 0; j -= 8) {
	                digest[n] = this.chain_[i] >> j & 255;
	                ++n;
	            }
	        }
	        return digest;
	    };
	    return Sha1;
	}();

	/**
	 * Helper to make a Subscribe function (just like Promise helps make a
	 * Thenable).
	 *
	 * @param executor Function which can make calls to a single Observer
	 *     as a proxy.
	 * @param onNoObservers Callback when count of Observers goes to zero.
	 */
	function createSubscribe(executor, onNoObservers) {
	    var proxy = new ObserverProxy(executor, onNoObservers);
	    return proxy.subscribe.bind(proxy);
	}
	/**
	 * Implement fan-out for any number of Observers attached via a subscribe
	 * function.
	 */
	var ObserverProxy = /** @class */function () {
	    /**
	     * @param executor Function which can make calls to a single Observer
	     *     as a proxy.
	     * @param onNoObservers Callback when count of Observers goes to zero.
	     */
	    function ObserverProxy(executor, onNoObservers) {
	        var _this = this;
	        this.observers = [];
	        this.unsubscribes = [];
	        this.observerCount = 0;
	        // Micro-task scheduling by calling task.then().
	        this.task = Promise.resolve();
	        this.finalized = false;
	        this.onNoObservers = onNoObservers;
	        // Call the executor asynchronously so subscribers that are called
	        // synchronously after the creation of the subscribe function
	        // can still receive the very first value generated in the executor.
	        this.task.then(function () {
	            executor(_this);
	        }).catch(function (e) {
	            _this.error(e);
	        });
	    }
	    ObserverProxy.prototype.next = function (value) {
	        this.forEachObserver(function (observer) {
	            observer.next(value);
	        });
	    };
	    ObserverProxy.prototype.error = function (error) {
	        this.forEachObserver(function (observer) {
	            observer.error(error);
	        });
	        this.close(error);
	    };
	    ObserverProxy.prototype.complete = function () {
	        this.forEachObserver(function (observer) {
	            observer.complete();
	        });
	        this.close();
	    };
	    /**
	     * Subscribe function that can be used to add an Observer to the fan-out list.
	     *
	     * - We require that no event is sent to a subscriber sychronously to their
	     *   call to subscribe().
	     */
	    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
	        var _this = this;
	        var observer;
	        if (nextOrObserver === undefined && error === undefined && complete === undefined) {
	            throw new Error('Missing Observer.');
	        }
	        // Assemble an Observer object when passed as callback functions.
	        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
	            observer = nextOrObserver;
	        } else {
	            observer = {
	                next: nextOrObserver,
	                error: error,
	                complete: complete
	            };
	        }
	        if (observer.next === undefined) {
	            observer.next = noop;
	        }
	        if (observer.error === undefined) {
	            observer.error = noop;
	        }
	        if (observer.complete === undefined) {
	            observer.complete = noop;
	        }
	        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
	        // Attempt to subscribe to a terminated Observable - we
	        // just respond to the Observer with the final error or complete
	        // event.
	        if (this.finalized) {
	            // eslint-disable-next-line @typescript-eslint/no-floating-promises
	            this.task.then(function () {
	                try {
	                    if (_this.finalError) {
	                        observer.error(_this.finalError);
	                    } else {
	                        observer.complete();
	                    }
	                } catch (e) {
	                    // nothing
	                }
	                return;
	            });
	        }
	        this.observers.push(observer);
	        return unsub;
	    };
	    // Unsubscribe is synchronous - we guarantee that no events are sent to
	    // any unsubscribed Observer.
	    ObserverProxy.prototype.unsubscribeOne = function (i) {
	        if (this.observers === undefined || this.observers[i] === undefined) {
	            return;
	        }
	        delete this.observers[i];
	        this.observerCount -= 1;
	        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
	            this.onNoObservers(this);
	        }
	    };
	    ObserverProxy.prototype.forEachObserver = function (fn) {
	        if (this.finalized) {
	            // Already closed by previous event....just eat the additional values.
	            return;
	        }
	        // Since sendOne calls asynchronously - there is no chance that
	        // this.observers will become undefined.
	        for (var i = 0; i < this.observers.length; i++) {
	            this.sendOne(i, fn);
	        }
	    };
	    // Call the Observer via one of it's callback function. We are careful to
	    // confirm that the observe has not been unsubscribed since this asynchronous
	    // function had been queued.
	    ObserverProxy.prototype.sendOne = function (i, fn) {
	        var _this = this;
	        // Execute the callback asynchronously
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.task.then(function () {
	            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
	                try {
	                    fn(_this.observers[i]);
	                } catch (e) {
	                    // Ignore exceptions raised in Observers or missing methods of an
	                    // Observer.
	                    // Log error to console. b/31404806
	                    if (typeof console !== 'undefined' && console.error) {
	                        console.error(e);
	                    }
	                }
	            }
	        });
	    };
	    ObserverProxy.prototype.close = function (err) {
	        var _this = this;
	        if (this.finalized) {
	            return;
	        }
	        this.finalized = true;
	        if (err !== undefined) {
	            this.finalError = err;
	        }
	        // Proxy is no longer needed - garbage collect references
	        // eslint-disable-next-line @typescript-eslint/no-floating-promises
	        this.task.then(function () {
	            _this.observers = undefined;
	            _this.onNoObservers = undefined;
	        });
	    };
	    return ObserverProxy;
	}();
	/** Turn synchronous function into one called asynchronously. */
	// eslint-disable-next-line @typescript-eslint/ban-types
	function async(fn, onError) {
	    return function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        Promise.resolve(true).then(function () {
	            fn.apply(void 0, args);
	        }).catch(function (error) {
	            if (onError) {
	                onError(error);
	            }
	        });
	    };
	}
	/**
	 * Return true if the object passed in implements any of the named methods.
	 */
	function implementsAnyMethods(obj, methods) {
	    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {
	        return false;
	    }
	    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
	        var method = methods_1[_i];
	        if (method in obj && typeof obj[method] === 'function') {
	            return true;
	        }
	    }
	    return false;
	}
	function noop() {}
	// do nothing


	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Check to make sure the appropriate number of arguments are provided for a public function.
	 * Throws an error if it fails.
	 *
	 * @param fnName The function name
	 * @param minCount The minimum number of arguments to allow for the function call
	 * @param maxCount The maximum number of argument to allow for the function call
	 * @param argCount The actual number of arguments provided.
	 */
	var validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {
	    var argError;
	    if (argCount < minCount) {
	        argError = 'at least ' + minCount;
	    } else if (argCount > maxCount) {
	        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
	    }
	    if (argError) {
	        var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';
	        throw new Error(error);
	    }
	};
	/**
	 * Generates a string to prefix an error message about failed argument validation
	 *
	 * @param fnName The function name
	 * @param argumentNumber The index of the argument
	 * @param optional Whether or not the argument is optional
	 * @return The prefix to add to the error thrown for validation.
	 */
	function errorPrefix(fnName, argumentNumber, optional) {
	    var argName = '';
	    switch (argumentNumber) {
	        case 1:
	            argName = optional ? 'first' : 'First';
	            break;
	        case 2:
	            argName = optional ? 'second' : 'Second';
	            break;
	        case 3:
	            argName = optional ? 'third' : 'Third';
	            break;
	        case 4:
	            argName = optional ? 'fourth' : 'Fourth';
	            break;
	        default:
	            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
	    }
	    var error = fnName + ' failed: ';
	    error += argName + ' argument ';
	    return error;
	}
	/**
	 * @param fnName
	 * @param argumentNumber
	 * @param namespace
	 * @param optional
	 */
	function validateNamespace(fnName, argumentNumber, namespace, optional) {
	    if (optional && !namespace) {
	        return;
	    }
	    if (typeof namespace !== 'string') {
	        //TODO: I should do more validation here. We only allow certain chars in namespaces.
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');
	    }
	}
	function validateCallback(fnName, argumentNumber,
	// eslint-disable-next-line @typescript-eslint/ban-types
	callback, optional) {
	    if (optional && !callback) {
	        return;
	    }
	    if (typeof callback !== 'function') {
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');
	    }
	}
	function validateContextObject(fnName, argumentNumber, context, optional) {
	    if (optional && !context) {
	        return;
	    }
	    if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) !== 'object' || context === null) {
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');
	    }
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
	// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
	// so it's been modified.
	// Note that not all Unicode characters appear as single characters in JavaScript strings.
	// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
	// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
	// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
	// pair).
	// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
	/**
	 * @param {string} str
	 * @return {Array}
	 */
	var stringToByteArray$1 = function stringToByteArray$1(str) {
	    var out = [];
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        // Is this the lead surrogate in a surrogate pair?
	        if (c >= 0xd800 && c <= 0xdbff) {
	            var high = c - 0xd800; // the high 10 bits.
	            i++;
	            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
	            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
	            c = 0x10000 + (high << 10) + low;
	        }
	        if (c < 128) {
	            out[p++] = c;
	        } else if (c < 2048) {
	            out[p++] = c >> 6 | 192;
	            out[p++] = c & 63 | 128;
	        } else if (c < 65536) {
	            out[p++] = c >> 12 | 224;
	            out[p++] = c >> 6 & 63 | 128;
	            out[p++] = c & 63 | 128;
	        } else {
	            out[p++] = c >> 18 | 240;
	            out[p++] = c >> 12 & 63 | 128;
	            out[p++] = c >> 6 & 63 | 128;
	            out[p++] = c & 63 | 128;
	        }
	    }
	    return out;
	};
	/**
	 * Calculate length without actually converting; useful for doing cheaper validation.
	 * @param {string} str
	 * @return {number}
	 */
	var stringLength = function stringLength(str) {
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        if (c < 128) {
	            p++;
	        } else if (c < 2048) {
	            p += 2;
	        } else if (c >= 0xd800 && c <= 0xdbff) {
	            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
	            p += 4;
	            i++; // skip trail surrogate.
	        } else {
	            p += 3;
	        }
	    }
	    return p;
	};

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * The amount of milliseconds to exponentially increase.
	 */
	var DEFAULT_INTERVAL_MILLIS = 1000;
	/**
	 * The factor to backoff by.
	 * Should be a number greater than 1.
	 */
	var DEFAULT_BACKOFF_FACTOR = 2;
	/**
	 * The maximum milliseconds to increase to.
	 *
	 * <p>Visible for testing
	 */
	var MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.
	/**
	 * The percentage of backoff time to randomize by.
	 * See
	 * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic
	 * for context.
	 *
	 * <p>Visible for testing
	 */
	var RANDOM_FACTOR = 0.5;
	/**
	 * Based on the backoff method from
	 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
	 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
	 */
	function calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {
	    if (intervalMillis === void 0) {
	        intervalMillis = DEFAULT_INTERVAL_MILLIS;
	    }
	    if (backoffFactor === void 0) {
	        backoffFactor = DEFAULT_BACKOFF_FACTOR;
	    }
	    // Calculates an exponentially increasing value.
	    // Deviation: calculates value from count and a constant interval, so we only need to save value
	    // and count to restore state.
	    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);
	    // A random "fuzz" to avoid waves of retries.
	    // Deviation: randomFactor is required.
	    var randomWait = Math.round(
	    // A fraction of the backoff value to add/subtract.
	    // Deviation: changes multiplication order to improve readability.
	    RANDOM_FACTOR * currBaseValue * (
	    // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
	    // if we add or subtract.
	    Math.random() - 0.5) * 2);
	    // Limits backoff to max to avoid effectively permanent backoff.
	    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);
	}

	exports.CONSTANTS = CONSTANTS;
	exports.Deferred = Deferred;
	exports.ErrorFactory = ErrorFactory;
	exports.FirebaseError = FirebaseError;
	exports.MAX_VALUE_MILLIS = MAX_VALUE_MILLIS;
	exports.RANDOM_FACTOR = RANDOM_FACTOR;
	exports.Sha1 = Sha1;
	exports.areCookiesEnabled = areCookiesEnabled;
	exports.assert = assert;
	exports.assertionError = assertionError;
	exports.async = async;
	exports.base64 = base64;
	exports.base64Decode = base64Decode;
	exports.base64Encode = base64Encode;
	exports.calculateBackoffMillis = calculateBackoffMillis;
	exports.contains = contains;
	exports.createSubscribe = createSubscribe;
	exports.decode = decode;
	exports.deepCopy = deepCopy;
	exports.deepExtend = deepExtend;
	exports.errorPrefix = errorPrefix;
	exports.getUA = getUA;
	exports.isAdmin = isAdmin;
	exports.isBrowser = isBrowser;
	exports.isBrowserExtension = isBrowserExtension;
	exports.isElectron = isElectron;
	exports.isEmpty = isEmpty;
	exports.isIE = isIE;
	exports.isIndexedDBAvailable = isIndexedDBAvailable;
	exports.isMobileCordova = isMobileCordova;
	exports.isNode = isNode;
	exports.isNodeSdk = isNodeSdk;
	exports.isReactNative = isReactNative;
	exports.isSafari = isSafari;
	exports.isUWP = isUWP;
	exports.isValidFormat = isValidFormat;
	exports.isValidTimestamp = isValidTimestamp;
	exports.issuedAtTime = issuedAtTime;
	exports.jsonEval = jsonEval;
	exports.map = map;
	exports.querystring = querystring;
	exports.querystringDecode = querystringDecode;
	exports.safeGet = safeGet;
	exports.stringLength = stringLength;
	exports.stringToByteArray = stringToByteArray$1;
	exports.stringify = stringify;
	exports.validateArgCount = validateArgCount;
	exports.validateCallback = validateCallback;
	exports.validateContextObject = validateContextObject;
	exports.validateIndexedDBOpenable = validateIndexedDBOpenable;
	exports.validateNamespace = validateNamespace;
	//# sourceMappingURL=index.cjs.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	var tslib = __webpack_require__(179);
	var util = __webpack_require__(180);

	/**
	 * Component for service name T, e.g. `auth`, `auth-internal`
	 */
	var Component = /** @class */function () {
	    /**
	     *
	     * @param name The public service name, e.g. app, auth, firestore, database
	     * @param instanceFactory Service factory responsible for creating the public interface
	     * @param type whether the service provided by the component is public or private
	     */
	    function Component(name, instanceFactory, type) {
	        this.name = name;
	        this.instanceFactory = instanceFactory;
	        this.type = type;
	        this.multipleInstances = false;
	        /**
	         * Properties to be added to the service namespace
	         */
	        this.serviceProps = {};
	        this.instantiationMode = "LAZY" /* LAZY */;
	    }
	    Component.prototype.setInstantiationMode = function (mode) {
	        this.instantiationMode = mode;
	        return this;
	    };
	    Component.prototype.setMultipleInstances = function (multipleInstances) {
	        this.multipleInstances = multipleInstances;
	        return this;
	    };
	    Component.prototype.setServiceProps = function (props) {
	        this.serviceProps = props;
	        return this;
	    };
	    return Component;
	}();

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var DEFAULT_ENTRY_NAME = '[DEFAULT]';

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
	 * NameServiceMapping[T] is an alias for the type of the instance
	 */
	var Provider = /** @class */function () {
	    function Provider(name, container) {
	        this.name = name;
	        this.container = container;
	        this.component = null;
	        this.instances = new Map();
	        this.instancesDeferred = new Map();
	    }
	    /**
	     * @param identifier A provider can provide mulitple instances of a service
	     * if this.component.multipleInstances is true.
	     */
	    Provider.prototype.get = function (identifier) {
	        if (identifier === void 0) {
	            identifier = DEFAULT_ENTRY_NAME;
	        }
	        // if multipleInstances is not supported, use the default name
	        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
	        if (!this.instancesDeferred.has(normalizedIdentifier)) {
	            var deferred = new util.Deferred();
	            this.instancesDeferred.set(normalizedIdentifier, deferred);
	            // If the service instance is available, resolve the promise with it immediately
	            try {
	                var instance = this.getOrInitializeService(normalizedIdentifier);
	                if (instance) {
	                    deferred.resolve(instance);
	                }
	            } catch (e) {
	                // when the instance factory throws an exception during get(), it should not cause
	                // a fatal error. We just return the unresolved promise in this case.
	            }
	        }
	        return this.instancesDeferred.get(normalizedIdentifier).promise;
	    };
	    Provider.prototype.getImmediate = function (options) {
	        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options),
	            identifier = _a.identifier,
	            optional = _a.optional;
	        // if multipleInstances is not supported, use the default name
	        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
	        try {
	            var instance = this.getOrInitializeService(normalizedIdentifier);
	            if (!instance) {
	                if (optional) {
	                    return null;
	                }
	                throw Error("Service " + this.name + " is not available");
	            }
	            return instance;
	        } catch (e) {
	            if (optional) {
	                return null;
	            } else {
	                throw e;
	            }
	        }
	    };
	    Provider.prototype.getComponent = function () {
	        return this.component;
	    };
	    Provider.prototype.setComponent = function (component) {
	        var e_1, _a;
	        if (component.name !== this.name) {
	            throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
	        }
	        if (this.component) {
	            throw Error("Component for " + this.name + " has already been provided");
	        }
	        this.component = component;
	        // if the service is eager, initialize the default instance
	        if (isComponentEager(component)) {
	            try {
	                this.getOrInitializeService(DEFAULT_ENTRY_NAME);
	            } catch (e) {
	                // when the instance factory for an eager Component throws an exception during the eager
	                // initialization, it should not cause a fatal error.
	                // TODO: Investigate if we need to make it configurable, because some component may want to cause
	                // a fatal error in this case?
	            }
	        }
	        try {
	            // Create service instances for the pending promises and resolve them
	            // NOTE: if this.multipleInstances is false, only the default instance will be created
	            // and all promises with resolve with it regardless of the identifier.
	            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var _d = tslib.__read(_c.value, 2),
	                    instanceIdentifier = _d[0],
	                    instanceDeferred = _d[1];
	                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
	                try {
	                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
	                    var instance = this.getOrInitializeService(normalizedIdentifier);
	                    instanceDeferred.resolve(instance);
	                } catch (e) {
	                    // when the instance factory throws an exception, it should not cause
	                    // a fatal error. We just leave the promise unresolved.
	                }
	            }
	        } catch (e_1_1) {
	            e_1 = { error: e_1_1 };
	        } finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            } finally {
	                if (e_1) throw e_1.error;
	            }
	        }
	    };
	    Provider.prototype.clearInstance = function (identifier) {
	        if (identifier === void 0) {
	            identifier = DEFAULT_ENTRY_NAME;
	        }
	        this.instancesDeferred.delete(identifier);
	        this.instances.delete(identifier);
	    };
	    // app.delete() will call this method on every provider to delete the services
	    // TODO: should we mark the provider as deleted?
	    Provider.prototype.delete = function () {
	        return tslib.__awaiter(this, void 0, void 0, function () {
	            var services;
	            return tslib.__generator(this, function (_a) {
	                switch (_a.label) {
	                    case 0:
	                        services = Array.from(this.instances.values());
	                        return [4 /*yield*/, Promise.all(tslib.__spread(services.filter(function (service) {
	                            return 'INTERNAL' in service;
	                        }) // legacy services
	                        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                        .map(function (service) {
	                            return service.INTERNAL.delete();
	                        }), services.filter(function (service) {
	                            return '_delete' in service;
	                        }) // modularized services
	                        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                        .map(function (service) {
	                            return service._delete();
	                        })))];
	                    case 1:
	                        _a.sent();
	                        return [2 /*return*/];
	                }
	            });
	        });
	    };
	    Provider.prototype.isComponentSet = function () {
	        return this.component != null;
	    };
	    Provider.prototype.getOrInitializeService = function (identifier) {
	        var instance = this.instances.get(identifier);
	        if (!instance && this.component) {
	            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));
	            this.instances.set(identifier, instance);
	        }
	        return instance || null;
	    };
	    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
	        if (this.component) {
	            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
	        } else {
	            return identifier; // assume multiple instances are supported before the component is provided.
	        }
	    };
	    return Provider;
	}();
	// undefined should be passed to the service factory for the default instance
	function normalizeIdentifierForFactory(identifier) {
	    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
	}
	function isComponentEager(component) {
	    return component.instantiationMode === "EAGER" /* EAGER */;
	}

	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
	 */
	var ComponentContainer = /** @class */function () {
	    function ComponentContainer(name) {
	        this.name = name;
	        this.providers = new Map();
	    }
	    /**
	     *
	     * @param component Component being added
	     * @param overwrite When a component with the same name has already been registered,
	     * if overwrite is true: overwrite the existing component with the new component and create a new
	     * provider with the new component. It can be useful in tests where you want to use different mocks
	     * for different tests.
	     * if overwrite is false: throw an exception
	     */
	    ComponentContainer.prototype.addComponent = function (component) {
	        var provider = this.getProvider(component.name);
	        if (provider.isComponentSet()) {
	            throw new Error("Component " + component.name + " has already been registered with " + this.name);
	        }
	        provider.setComponent(component);
	    };
	    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
	        var provider = this.getProvider(component.name);
	        if (provider.isComponentSet()) {
	            // delete the existing provider from the container, so we can register the new component
	            this.providers.delete(component.name);
	        }
	        this.addComponent(component);
	    };
	    /**
	     * getProvider provides a type safe interface where it can only be called with a field name
	     * present in NameServiceMapping interface.
	     *
	     * Firebase SDKs providing services should extend NameServiceMapping interface to register
	     * themselves.
	     */
	    ComponentContainer.prototype.getProvider = function (name) {
	        if (this.providers.has(name)) {
	            return this.providers.get(name);
	        }
	        // create a Provider for a service that hasn't registered with Firebase
	        var provider = new Provider(name, this);
	        this.providers.set(name, provider);
	        return provider;
	    };
	    ComponentContainer.prototype.getProviders = function () {
	        return Array.from(this.providers.values());
	    };
	    return ComponentContainer;
	}();

	exports.Component = Component;
	exports.ComponentContainer = ComponentContainer;
	exports.Provider = Provider;
	//# sourceMappingURL=index.cjs.js.map

/***/ }),
/* 182 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	/*! *****************************************************************************
	Copyright (c) Microsoft Corporation. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0

	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.

	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */

	function __spreadArrays() {
	    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
	        s += arguments[i].length;
	    }for (var r = Array(s), k = 0, i = 0; i < il; i++) {
	        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
	            r[k] = a[j];
	        }
	    }return r;
	}

	/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _a;
	/**
	 * A container for all of the Logger instances
	 */
	var instances = [];
	(function (LogLevel) {
	    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
	    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
	    LogLevel[LogLevel["INFO"] = 2] = "INFO";
	    LogLevel[LogLevel["WARN"] = 3] = "WARN";
	    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
	    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
	})(exports.LogLevel || (exports.LogLevel = {}));
	var levelStringToEnum = {
	    'debug': exports.LogLevel.DEBUG,
	    'verbose': exports.LogLevel.VERBOSE,
	    'info': exports.LogLevel.INFO,
	    'warn': exports.LogLevel.WARN,
	    'error': exports.LogLevel.ERROR,
	    'silent': exports.LogLevel.SILENT
	};
	/**
	 * The default log level
	 */
	var defaultLogLevel = exports.LogLevel.INFO;
	/**
	 * By default, `console.debug` is not displayed in the developer console (in
	 * chrome). To avoid forcing users to have to opt-in to these logs twice
	 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
	 * logs to the `console.log` function.
	 */
	var ConsoleMethod = (_a = {}, _a[exports.LogLevel.DEBUG] = 'log', _a[exports.LogLevel.VERBOSE] = 'log', _a[exports.LogLevel.INFO] = 'info', _a[exports.LogLevel.WARN] = 'warn', _a[exports.LogLevel.ERROR] = 'error', _a);
	/**
	 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
	 * messages on to their corresponding console counterparts (if the log method
	 * is supported by the current log level)
	 */
	var defaultLogHandler = function defaultLogHandler(instance, logType) {
	    var args = [];
	    for (var _i = 2; _i < arguments.length; _i++) {
	        args[_i - 2] = arguments[_i];
	    }
	    if (logType < instance.logLevel) {
	        return;
	    }
	    var now = new Date().toISOString();
	    var method = ConsoleMethod[logType];
	    if (method) {
	        console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
	    } else {
	        throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
	    }
	};
	var Logger = /** @class */function () {
	    /**
	     * Gives you an instance of a Logger to capture messages according to
	     * Firebase's logging scheme.
	     *
	     * @param name The name that the logs will be associated with
	     */
	    function Logger(name) {
	        this.name = name;
	        /**
	         * The log level of the given Logger instance.
	         */
	        this._logLevel = defaultLogLevel;
	        /**
	         * The main (internal) log handler for the Logger instance.
	         * Can be set to a new function in internal package code but not by user.
	         */
	        this._logHandler = defaultLogHandler;
	        /**
	         * The optional, additional, user-defined log handler for the Logger instance.
	         */
	        this._userLogHandler = null;
	        /**
	         * Capture the current instance for later use
	         */
	        instances.push(this);
	    }
	    Object.defineProperty(Logger.prototype, "logLevel", {
	        get: function get() {
	            return this._logLevel;
	        },
	        set: function set(val) {
	            if (!(val in exports.LogLevel)) {
	                throw new TypeError("Invalid value \"" + val + "\" assigned to `logLevel`");
	            }
	            this._logLevel = val;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    // Workaround for setter/getter having to be the same type.
	    Logger.prototype.setLogLevel = function (val) {
	        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
	    };
	    Object.defineProperty(Logger.prototype, "logHandler", {
	        get: function get() {
	            return this._logHandler;
	        },
	        set: function set(val) {
	            if (typeof val !== 'function') {
	                throw new TypeError('Value assigned to `logHandler` must be a function');
	            }
	            this._logHandler = val;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    Object.defineProperty(Logger.prototype, "userLogHandler", {
	        get: function get() {
	            return this._userLogHandler;
	        },
	        set: function set(val) {
	            this._userLogHandler = val;
	        },
	        enumerable: false,
	        configurable: true
	    });
	    /**
	     * The functions below are all based on the `console` interface
	     */
	    Logger.prototype.debug = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));
	    };
	    Logger.prototype.log = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));
	    };
	    Logger.prototype.info = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));
	    };
	    Logger.prototype.warn = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));
	    };
	    Logger.prototype.error = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));
	        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));
	    };
	    return Logger;
	}();
	function setLogLevel(level) {
	    instances.forEach(function (inst) {
	        inst.setLogLevel(level);
	    });
	}
	function setUserLogHandler(logCallback, options) {
	    var _loop_1 = function _loop_1(instance) {
	        var customLogLevel = null;
	        if (options && options.level) {
	            customLogLevel = levelStringToEnum[options.level];
	        }
	        if (logCallback === null) {
	            instance.userLogHandler = null;
	        } else {
	            instance.userLogHandler = function (instance, level) {
	                var args = [];
	                for (var _i = 2; _i < arguments.length; _i++) {
	                    args[_i - 2] = arguments[_i];
	                }
	                var message = args.map(function (arg) {
	                    if (arg == null) {
	                        return null;
	                    } else if (typeof arg === 'string') {
	                        return arg;
	                    } else if (typeof arg === 'number' || typeof arg === 'boolean') {
	                        return arg.toString();
	                    } else if (arg instanceof Error) {
	                        return arg.message;
	                    } else {
	                        try {
	                            return JSON.stringify(arg);
	                        } catch (ignored) {
	                            return null;
	                        }
	                    }
	                }).filter(function (arg) {
	                    return arg;
	                }).join(' ');
	                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
	                    logCallback({
	                        level: exports.LogLevel[level].toLowerCase(),
	                        message: message,
	                        args: args,
	                        type: instance.name
	                    });
	                }
	            };
	        }
	    };
	    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
	        var instance = instances_1[_i];
	        _loop_1(instance);
	    }
	}

	exports.Logger = Logger;
	exports.setLogLevel = setLogLevel;
	exports.setUserLogHandler = setUserLogHandler;
	//# sourceMappingURL=index.cjs.js.map

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(184);

	//# sourceMappingURL=index.cjs.js.map

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	(function () {
	  var firebase = __webpack_require__(178).default; /*
	                                                   Copyright The Closure Library Authors.
	                                                   SPDX-License-Identifier: Apache-2.0
	                                                   */
	  var k,
	      aa = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
	    a != Array.prototype && a != Object.prototype && (a[b] = c.value);
	  };function ba(a) {
	    a = ["object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) && window, "object" == (typeof self === "undefined" ? "undefined" : _typeof(self)) && self, "object" == (typeof global === "undefined" ? "undefined" : _typeof(global)) && global, a];for (var b = 0; b < a.length; ++b) {
	      var c = a[b];if (c && c.Math == Math) return c;
	    }return globalThis;
	  }var ca = ba(this);
	  function da(a, b) {
	    if (b) {
	      var c = ca;a = a.split(".");for (var d = 0; d < a.length - 1; d++) {
	        var e = a[d];e in c || (c[e] = {});c = c[e];
	      }a = a[a.length - 1];d = c[a];b = b(d);b != d && null != b && aa(c, a, { configurable: !0, writable: !0, value: b });
	    }
	  }function ea(a) {
	    var b = 0;return function () {
	      return b < a.length ? { done: !1, value: a[b++] } : { done: !0 };
	    };
	  }function fa(a) {
	    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];return b ? b.call(a) : { next: ea(a) };
	  }
	  da("Promise", function (a) {
	    function b(g) {
	      this.b = 0;this.c = void 0;this.a = [];var h = this.f();try {
	        g(h.resolve, h.reject);
	      } catch (m) {
	        h.reject(m);
	      }
	    }function c() {
	      this.a = null;
	    }function d(g) {
	      return g instanceof b ? g : new b(function (h) {
	        h(g);
	      });
	    }if (a) return a;c.prototype.b = function (g) {
	      if (null == this.a) {
	        this.a = [];var h = this;this.c(function () {
	          h.g();
	        });
	      }this.a.push(g);
	    };var e = ca.setTimeout;c.prototype.c = function (g) {
	      e(g, 0);
	    };c.prototype.g = function () {
	      for (; this.a && this.a.length;) {
	        var g = this.a;this.a = [];for (var h = 0; h < g.length; ++h) {
	          var m = g[h];g[h] = null;try {
	            m();
	          } catch (p) {
	            this.f(p);
	          }
	        }
	      }this.a = null;
	    };c.prototype.f = function (g) {
	      this.c(function () {
	        throw g;
	      });
	    };b.prototype.f = function () {
	      function g(p) {
	        return function (v) {
	          m || (m = !0, p.call(h, v));
	        };
	      }var h = this,
	          m = !1;return { resolve: g(this.v), reject: g(this.g) };
	    };b.prototype.v = function (g) {
	      if (g === this) this.g(new TypeError("A Promise cannot resolve to itself"));else if (g instanceof b) this.o(g);else {
	        a: switch (typeof g === "undefined" ? "undefined" : _typeof(g)) {case "object":
	            var h = null != g;break a;case "function":
	            h = !0;break a;default:
	            h = !1;}h ? this.m(g) : this.h(g);
	      }
	    };
	    b.prototype.m = function (g) {
	      var h = void 0;try {
	        h = g.then;
	      } catch (m) {
	        this.g(m);return;
	      }"function" == typeof h ? this.u(h, g) : this.h(g);
	    };b.prototype.g = function (g) {
	      this.i(2, g);
	    };b.prototype.h = function (g) {
	      this.i(1, g);
	    };b.prototype.i = function (g, h) {
	      if (0 != this.b) throw Error("Cannot settle(" + g + ", " + h + "): Promise already settled in state" + this.b);this.b = g;this.c = h;this.l();
	    };b.prototype.l = function () {
	      if (null != this.a) {
	        for (var g = 0; g < this.a.length; ++g) {
	          f.b(this.a[g]);
	        }this.a = null;
	      }
	    };var f = new c();b.prototype.o = function (g) {
	      var h = this.f();
	      g.Pa(h.resolve, h.reject);
	    };b.prototype.u = function (g, h) {
	      var m = this.f();try {
	        g.call(h, m.resolve, m.reject);
	      } catch (p) {
	        m.reject(p);
	      }
	    };b.prototype.then = function (g, h) {
	      function m(A, Q) {
	        return "function" == typeof A ? function (xa) {
	          try {
	            p(A(xa));
	          } catch (yd) {
	            v(yd);
	          }
	        } : Q;
	      }var p,
	          v,
	          B = new b(function (A, Q) {
	        p = A;v = Q;
	      });this.Pa(m(g, p), m(h, v));return B;
	    };b.prototype.catch = function (g) {
	      return this.then(void 0, g);
	    };b.prototype.Pa = function (g, h) {
	      function m() {
	        switch (p.b) {case 1:
	            g(p.c);break;case 2:
	            h(p.c);break;default:
	            throw Error("Unexpected state: " + p.b);}
	      }var p = this;null == this.a ? f.b(m) : this.a.push(m);
	    };b.resolve = d;b.reject = function (g) {
	      return new b(function (h, m) {
	        m(g);
	      });
	    };b.race = function (g) {
	      return new b(function (h, m) {
	        for (var p = fa(g), v = p.next(); !v.done; v = p.next()) {
	          d(v.value).Pa(h, m);
	        }
	      });
	    };b.all = function (g) {
	      var h = fa(g),
	          m = h.next();return m.done ? d([]) : new b(function (p, v) {
	        function B(xa) {
	          return function (yd) {
	            A[xa] = yd;Q--;0 == Q && p(A);
	          };
	        }var A = [],
	            Q = 0;do {
	          A.push(void 0), Q++, d(m.value).Pa(B(A.length - 1), v), m = h.next();
	        } while (!m.done);
	      });
	    };return b;
	  });
	  var ha = ha || {},
	      l = this || self,
	      ia = /^[\w+/_-]+[=]{0,2}$/,
	      ja = null;function ka() {}
	  function la(a) {
	    var b = typeof a === "undefined" ? "undefined" : _typeof(a);if ("object" == b) {
	      if (a) {
	        if (a instanceof Array) return "array";if (a instanceof Object) return b;var c = Object.prototype.toString.call(a);if ("[object Window]" == c) return "object";if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
	      } else return "null";
	    } else if ("function" == b && "undefined" == typeof a.call) return "object";return b;
	  }function ma(a) {
	    var b = la(a);return "array" == b || "object" == b && "number" == typeof a.length;
	  }function na(a) {
	    return "function" == la(a);
	  }function n(a) {
	    var b = typeof a === "undefined" ? "undefined" : _typeof(a);return "object" == b && null != a || "function" == b;
	  }function oa(a) {
	    return Object.prototype.hasOwnProperty.call(a, pa) && a[pa] || (a[pa] = ++qa);
	  }var pa = "closure_uid_" + (1E9 * Math.random() >>> 0),
	      qa = 0;function ra(a, b, c) {
	    return a.call.apply(a.bind, arguments);
	  }
	  function sa(a, b, c) {
	    if (!a) throw Error();if (2 < arguments.length) {
	      var d = Array.prototype.slice.call(arguments, 2);return function () {
	        var e = Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e, d);return a.apply(b, e);
	      };
	    }return function () {
	      return a.apply(b, arguments);
	    };
	  }function q(a, b, c) {
	    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? q = ra : q = sa;return q.apply(null, arguments);
	  }
	  function ta(a, b) {
	    var c = Array.prototype.slice.call(arguments, 1);return function () {
	      var d = c.slice();d.push.apply(d, arguments);return a.apply(this, d);
	    };
	  }var ua = Date.now || function () {
	    return +new Date();
	  };function r(a, b) {
	    function c() {}c.prototype = b.prototype;a.$a = b.prototype;a.prototype = new c();a.prototype.constructor = a;
	  }; /*
	     Copyright 2017 Google Inc.
	     Licensed under the Apache License, Version 2.0 (the "License");
	     you may not use this file except in compliance with the License.
	     You may obtain a copy of the License at
	     http://www.apache.org/licenses/LICENSE-2.0
	     Unless required by applicable law or agreed to in writing, software
	     distributed under the License is distributed on an "AS IS" BASIS,
	     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     See the License for the specific language governing permissions and
	     limitations under the License.
	     */
	  function t(a, b, c) {
	    this.code = va + a;this.message = b || wa[a] || "";this.a = c || null;
	  }r(t, Error);t.prototype.w = function () {
	    var a = { code: this.code, message: this.message };this.a && (a.serverResponse = this.a);return a;
	  };t.prototype.toJSON = function () {
	    return this.w();
	  };function ya(a) {
	    var b = a && a.code;return b ? new t(b.substring(va.length), a.message, a.serverResponse) : null;
	  }
	  var va = "auth/",
	      wa = { "admin-restricted-operation": "This operation is restricted to administrators only.", "argument-error": "", "app-not-authorized": "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.", "app-not-installed": "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
	    "captcha-check-failed": "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.", "code-expired": "The SMS code has expired. Please re-send the verification code to try again.", "cordova-not-ready": "Cordova framework is not ready.", "cors-unsupported": "This browser is not supported.", "credential-already-in-use": "This credential is already associated with a different user account.", "custom-token-mismatch": "The custom token corresponds to a different audience.",
	    "requires-recent-login": "This operation is sensitive and requires recent authentication. Log in again before retrying this request.", "dynamic-link-not-activated": "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.", "email-change-needs-verification": "Multi-factor users must always have a verified email.", "email-already-in-use": "The email address is already in use by another account.", "expired-action-code": "The action code has expired. ", "cancelled-popup-request": "This operation has been cancelled due to another conflicting popup being opened.",
	    "internal-error": "An internal error has occurred.", "invalid-app-credential": "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.", "invalid-app-id": "The mobile app identifier is not registed for the current project.", "invalid-user-token": "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.", "invalid-auth-event": "An internal error has occurred.",
	    "invalid-verification-code": "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.", "invalid-continue-uri": "The continue URL provided in the request is invalid.", "invalid-cordova-configuration": "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
	    "invalid-custom-token": "The custom token format is incorrect. Please check the documentation.", "invalid-dynamic-link-domain": "The provided dynamic link domain is not configured or authorized for the current project.", "invalid-email": "The email address is badly formatted.", "invalid-api-key": "Your API key is invalid, please check you have copied it correctly.", "invalid-cert-hash": "The SHA-1 certificate hash provided is invalid.", "invalid-credential": "The supplied auth credential is malformed or has expired.",
	    "invalid-message-payload": "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.", "invalid-multi-factor-session": "The request does not contain a valid proof of first factor successful sign-in.", "invalid-oauth-provider": "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.", "invalid-oauth-client-id": "The OAuth client ID provided is either invalid or does not match the specified API key.",
	    "unauthorized-domain": "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.", "invalid-action-code": "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.", "wrong-password": "The password is invalid or the user does not have a password.", "invalid-persistence-type": "The specified persistence type is invalid. It can only be local, session or none.", "invalid-phone-number": "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
	    "invalid-provider-id": "The specified provider ID is invalid.", "invalid-recipient-email": "The email corresponding to this action failed to send as the provided recipient email address is invalid.", "invalid-sender": "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.", "invalid-verification-id": "The verification ID used to create the phone auth credential is invalid.", "invalid-tenant-id": "The Auth instance's tenant ID is invalid.",
	    "multi-factor-info-not-found": "The user does not have a second factor matching the identifier provided.", "multi-factor-auth-required": "Proof of ownership of a second factor is required to complete sign-in.", "missing-android-pkg-name": "An Android Package Name must be provided if the Android App is required to be installed.", "auth-domain-config-required": "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.", "missing-app-credential": "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
	    "missing-verification-code": "The phone auth credential was created with an empty SMS verification code.", "missing-continue-uri": "A continue URL must be provided in the request.", "missing-iframe-start": "An internal error has occurred.", "missing-ios-bundle-id": "An iOS Bundle ID must be provided if an App Store ID is provided.", "missing-multi-factor-info": "No second factor identifier is provided.", "missing-multi-factor-session": "The request is missing proof of first factor successful sign-in.", "missing-or-invalid-nonce": "The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",
	    "missing-phone-number": "To send verification codes, provide a phone number for the recipient.", "missing-verification-id": "The phone auth credential was created with an empty verification ID.", "app-deleted": "This instance of FirebaseApp has been deleted.", "account-exists-with-different-credential": "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.", "network-request-failed": "A network error (such as timeout, interrupted connection or unreachable host) has occurred.",
	    "no-auth-event": "An internal error has occurred.", "no-such-provider": "User was not linked to an account with the given provider.", "null-user": "A null user object was provided as the argument for an operation which requires a non-null user object.", "operation-not-allowed": "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.", "operation-not-supported-in-this-environment": 'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
	    "popup-blocked": "Unable to establish a connection with the popup. It may have been blocked by the browser.", "popup-closed-by-user": "The popup has been closed by the user before finalizing the operation.", "provider-already-linked": "User can only be linked to one identity for the given provider.", "quota-exceeded": "The project's quota for this operation has been exceeded.", "redirect-cancelled-by-user": "The redirect operation has been cancelled by the user before finalizing.", "redirect-operation-pending": "A redirect sign-in operation is already pending.",
	    "rejected-credential": "The request contains malformed or mismatching credentials.", "second-factor-already-in-use": "The second factor is already enrolled on this account.", "maximum-second-factor-count-exceeded": "The maximum allowed number of second factors on a user has been exceeded.", "tenant-id-mismatch": "The provided tenant ID does not match the Auth instance's tenant ID", timeout: "The operation has timed out.", "user-token-expired": "The user's credential is no longer valid. The user must sign in again.",
	    "too-many-requests": "We have blocked all requests from this device due to unusual activity. Try again later.", "unauthorized-continue-uri": "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.", "unsupported-first-factor": "Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.", "unsupported-persistence-type": "The current environment does not support the specified persistence type.", "unsupported-tenant-operation": "This operation is not supported in a multi-tenant context.",
	    "unverified-email": "The operation requires a verified email.", "user-cancelled": "The user did not grant your application the permissions it requested.", "user-not-found": "There is no user record corresponding to this identifier. The user may have been deleted.", "user-disabled": "The user account has been disabled by an administrator.", "user-mismatch": "The supplied credentials do not correspond to the previously signed in user.", "user-signed-out": "", "weak-password": "The password must be 6 characters long or more.",
	    "web-storage-unsupported": "This browser is not supported or 3rd party cookies and data may be disabled." };var za = { kd: { Sa: "https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/", Ya: "https://staging-securetoken.sandbox.googleapis.com/v1/token", Va: "https://staging-identitytoolkit.sandbox.googleapis.com/v2/", id: "b" }, rd: { Sa: "https://www.googleapis.com/identitytoolkit/v3/relyingparty/", Ya: "https://securetoken.googleapis.com/v1/token", Va: "https://identitytoolkit.googleapis.com/v2/", id: "p" }, td: { Sa: "https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",
	      Ya: "https://staging-securetoken.sandbox.googleapis.com/v1/token", Va: "https://staging-identitytoolkit.sandbox.googleapis.com/v2/", id: "s" }, ud: { Sa: "https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/", Ya: "https://test-securetoken.sandbox.googleapis.com/v1/token", Va: "https://test-identitytoolkit.sandbox.googleapis.com/v2/", id: "t" } };
	  function Aa(a) {
	    for (var b in za) {
	      if (za[b].id === a) return a = za[b], { firebaseEndpoint: a.Sa, secureTokenEndpoint: a.Ya, identityPlatformEndpoint: a.Va };
	    }return null;
	  }var Ba;Ba = Aa("__EID__") ? "__EID__" : void 0;function Ca(a) {
	    if (!a) return !1;try {
	      return !!a.$goog_Thenable;
	    } catch (b) {
	      return !1;
	    }
	  };function u(a) {
	    if (Error.captureStackTrace) Error.captureStackTrace(this, u);else {
	      var b = Error().stack;b && (this.stack = b);
	    }a && (this.message = String(a));
	  }r(u, Error);u.prototype.name = "CustomError";function Da(a, b) {
	    a = a.split("%s");for (var c = "", d = a.length - 1, e = 0; e < d; e++) {
	      c += a[e] + (e < b.length ? b[e] : "%s");
	    }u.call(this, c + a[d]);
	  }r(Da, u);Da.prototype.name = "AssertionError";function Ea(a, b) {
	    throw new Da("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1));
	  };function Fa(a, b) {
	    this.c = a;this.f = b;this.b = 0;this.a = null;
	  }Fa.prototype.get = function () {
	    if (0 < this.b) {
	      this.b--;var a = this.a;this.a = a.next;a.next = null;
	    } else a = this.c();return a;
	  };function Ga(a, b) {
	    a.f(b);100 > a.b && (a.b++, b.next = a.a, a.a = b);
	  };function Ha() {
	    this.b = this.a = null;
	  }var Ja = new Fa(function () {
	    return new Ia();
	  }, function (a) {
	    a.reset();
	  });Ha.prototype.add = function (a, b) {
	    var c = Ja.get();c.set(a, b);this.b ? this.b.next = c : this.a = c;this.b = c;
	  };function Ka() {
	    var a = La,
	        b = null;a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);return b;
	  }function Ia() {
	    this.next = this.b = this.a = null;
	  }Ia.prototype.set = function (a, b) {
	    this.a = a;this.b = b;this.next = null;
	  };Ia.prototype.reset = function () {
	    this.next = this.b = this.a = null;
	  };var Ma = Array.prototype.indexOf ? function (a, b) {
	    return Array.prototype.indexOf.call(a, b, void 0);
	  } : function (a, b) {
	    if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);for (var c = 0; c < a.length; c++) {
	      if (c in a && a[c] === b) return c;
	    }return -1;
	  },
	      w = Array.prototype.forEach ? function (a, b, c) {
	    Array.prototype.forEach.call(a, b, c);
	  } : function (a, b, c) {
	    for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
	      f in e && b.call(c, e[f], f, a);
	    }
	  };
	  function Na(a, b) {
	    for (var c = "string" === typeof a ? a.split("") : a, d = a.length - 1; 0 <= d; --d) {
	      d in c && b.call(void 0, c[d], d, a);
	    }
	  }
	  var Oa = Array.prototype.filter ? function (a, b) {
	    return Array.prototype.filter.call(a, b, void 0);
	  } : function (a, b) {
	    for (var c = a.length, d = [], e = 0, f = "string" === typeof a ? a.split("") : a, g = 0; g < c; g++) {
	      if (g in f) {
	        var h = f[g];b.call(void 0, h, g, a) && (d[e++] = h);
	      }
	    }return d;
	  },
	      Pa = Array.prototype.map ? function (a, b) {
	    return Array.prototype.map.call(a, b, void 0);
	  } : function (a, b) {
	    for (var c = a.length, d = Array(c), e = "string" === typeof a ? a.split("") : a, f = 0; f < c; f++) {
	      f in e && (d[f] = b.call(void 0, e[f], f, a));
	    }return d;
	  },
	      Qa = Array.prototype.some ? function (a, b) {
	    return Array.prototype.some.call(a, b, void 0);
	  } : function (a, b) {
	    for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {
	      if (e in d && b.call(void 0, d[e], e, a)) return !0;
	    }return !1;
	  };function Ra(a) {
	    a: {
	      var b = Sa;for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {
	        if (e in d && b.call(void 0, d[e], e, a)) {
	          b = e;break a;
	        }
	      }b = -1;
	    }return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
	  }function Ta(a, b) {
	    return 0 <= Ma(a, b);
	  }
	  function Ua(a, b) {
	    b = Ma(a, b);var c;(c = 0 <= b) && Array.prototype.splice.call(a, b, 1);return c;
	  }function Va(a, b) {
	    var c = 0;Na(a, function (d, e) {
	      b.call(void 0, d, e, a) && 1 == Array.prototype.splice.call(a, e, 1).length && c++;
	    });
	  }function Wa(a) {
	    return Array.prototype.concat.apply([], arguments);
	  }function Xa(a) {
	    var b = a.length;if (0 < b) {
	      for (var c = Array(b), d = 0; d < b; d++) {
	        c[d] = a[d];
	      }return c;
	    }return [];
	  };var Ya = String.prototype.trim ? function (a) {
	    return a.trim();
	  } : function (a) {
	    return (/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]
	    );
	  },
	      Za = /&/g,
	      $a = /</g,
	      ab = />/g,
	      bb = /"/g,
	      cb = /'/g,
	      db = /\x00/g,
	      eb = /[\x00&<>"']/;function x(a, b) {
	    return -1 != a.indexOf(b);
	  }function fb(a, b) {
	    return a < b ? -1 : a > b ? 1 : 0;
	  };var gb;a: {
	    var hb = l.navigator;if (hb) {
	      var ib = hb.userAgent;if (ib) {
	        gb = ib;break a;
	      }
	    }gb = "";
	  }function y(a) {
	    return x(gb, a);
	  };function jb(a, b) {
	    for (var c in a) {
	      b.call(void 0, a[c], c, a);
	    }
	  }function kb(a) {
	    for (var b in a) {
	      return !1;
	    }return !0;
	  }function lb(a) {
	    var b = {},
	        c;for (c in a) {
	      b[c] = a[c];
	    }return b;
	  }var mb = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function z(a, b) {
	    for (var c, d, e = 1; e < arguments.length; e++) {
	      d = arguments[e];for (c in d) {
	        a[c] = d[c];
	      }for (var f = 0; f < mb.length; f++) {
	        c = mb[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
	      }
	    }
	  };function nb(a, b) {
	    a: {
	      try {
	        var c = a && a.ownerDocument,
	            d = c && (c.defaultView || c.parentWindow);d = d || l;if (d.Element && d.Location) {
	          var e = d;break a;
	        }
	      } catch (g) {}e = null;
	    }if (e && "undefined" != typeof e[b] && (!a || !(a instanceof e[b]) && (a instanceof e.Location || a instanceof e.Element))) {
	      if (n(a)) try {
	        var f = a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);
	      } catch (g) {
	        f = "<object could not be stringified>";
	      } else f = void 0 === a ? "undefined" : null === a ? "null" : typeof a === "undefined" ? "undefined" : _typeof(a);Ea("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, f);
	    }
	  };function ob(a, b) {
	    this.a = a === pb && b || "";this.b = qb;
	  }ob.prototype.sa = !0;ob.prototype.ra = function () {
	    return this.a;
	  };ob.prototype.toString = function () {
	    return "Const{" + this.a + "}";
	  };function rb(a) {
	    if (a instanceof ob && a.constructor === ob && a.b === qb) return a.a;Ea("expected object of type Const, got '" + a + "'");return "type_error:Const";
	  }var qb = {},
	      pb = {},
	      sb = new ob(pb, "");function tb(a, b) {
	    this.a = a === ub && b || "";this.b = vb;
	  }tb.prototype.sa = !0;tb.prototype.ra = function () {
	    return this.a.toString();
	  };tb.prototype.toString = function () {
	    return "TrustedResourceUrl{" + this.a + "}";
	  };function wb(a) {
	    if (a instanceof tb && a.constructor === tb && a.b === vb) return a.a;Ea("expected object of type TrustedResourceUrl, got '" + a + "' of type " + la(a));return "type_error:TrustedResourceUrl";
	  }
	  function xb(a, b) {
	    var c = rb(a);if (!yb.test(c)) throw Error("Invalid TrustedResourceUrl format: " + c);a = c.replace(zb, function (d, e) {
	      if (!Object.prototype.hasOwnProperty.call(b, e)) throw Error('Found marker, "' + e + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b));d = b[e];return d instanceof ob ? rb(d) : encodeURIComponent(String(d));
	    });return new tb(ub, a);
	  }
	  var zb = /%{(\w+)}/g,
	      yb = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,
	      vb = {},
	      ub = {};function Ab(a, b) {
	    this.a = a === Bb && b || "";this.b = Cb;
	  }Ab.prototype.sa = !0;Ab.prototype.ra = function () {
	    return this.a.toString();
	  };Ab.prototype.toString = function () {
	    return "SafeUrl{" + this.a + "}";
	  };function Db(a) {
	    if (a instanceof Ab && a.constructor === Ab && a.b === Cb) return a.a;Ea("expected object of type SafeUrl, got '" + a + "' of type " + la(a));return "type_error:SafeUrl";
	  }var Eb = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
	  function Fb(a) {
	    if (a instanceof Ab) return a;a = "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) && a.sa ? a.ra() : String(a);Eb.test(a) || (a = "about:invalid#zClosurez");return new Ab(Bb, a);
	  }var Cb = {},
	      Bb = {};function Gb() {
	    this.a = "";this.b = Hb;
	  }Gb.prototype.sa = !0;Gb.prototype.ra = function () {
	    return this.a.toString();
	  };Gb.prototype.toString = function () {
	    return "SafeHtml{" + this.a + "}";
	  };function Ib(a) {
	    if (a instanceof Gb && a.constructor === Gb && a.b === Hb) return a.a;Ea("expected object of type SafeHtml, got '" + a + "' of type " + la(a));return "type_error:SafeHtml";
	  }var Hb = {};function Jb(a) {
	    var b = new Gb();b.a = a;return b;
	  }Jb("<!DOCTYPE html>");var Kb = Jb("");Jb("<br>");function Lb(a) {
	    var b = new tb(ub, rb(sb));nb(a, "HTMLIFrameElement");a.src = wb(b).toString();
	  }function Mb(a, b) {
	    nb(a, "HTMLScriptElement");a.src = wb(b);if (null === ja) b: {
	      b = l.document;if ((b = b.querySelector && b.querySelector("script[nonce]")) && (b = b.nonce || b.getAttribute("nonce")) && ia.test(b)) {
	        ja = b;break b;
	      }ja = "";
	    }b = ja;b && a.setAttribute("nonce", b);
	  };function Nb(a, b) {
	    for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
	      d += c.shift() + e.shift();
	    }return d + c.join("%s");
	  }function Ob(a) {
	    eb.test(a) && (-1 != a.indexOf("&") && (a = a.replace(Za, "&amp;")), -1 != a.indexOf("<") && (a = a.replace($a, "&lt;")), -1 != a.indexOf(">") && (a = a.replace(ab, "&gt;")), -1 != a.indexOf('"') && (a = a.replace(bb, "&quot;")), -1 != a.indexOf("'") && (a = a.replace(cb, "&#39;")), -1 != a.indexOf("\x00") && (a = a.replace(db, "&#0;")));return a;
	  };function Pb(a) {
	    Pb[" "](a);return a;
	  }Pb[" "] = ka;function Qb(a, b) {
	    var c = Rb;return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
	  };var Sb = y("Opera"),
	      Tb = y("Trident") || y("MSIE"),
	      Ub = y("Edge"),
	      Vb = Ub || Tb,
	      Wb = y("Gecko") && !(x(gb.toLowerCase(), "webkit") && !y("Edge")) && !(y("Trident") || y("MSIE")) && !y("Edge"),
	      Xb = x(gb.toLowerCase(), "webkit") && !y("Edge");function Yb() {
	    var a = l.document;return a ? a.documentMode : void 0;
	  }var Zb;
	  a: {
	    var $b = "",
	        ac = function () {
	      var a = gb;if (Wb) return (/rv:([^\);]+)(\)|;)/.exec(a)
	      );if (Ub) return (/Edge\/([\d\.]+)/.exec(a)
	      );if (Tb) return (/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a)
	      );if (Xb) return (/WebKit\/(\S+)/.exec(a)
	      );if (Sb) return (/(?:Version)[ \/]?(\S+)/.exec(a)
	      );
	    }();ac && ($b = ac ? ac[1] : "");if (Tb) {
	      var bc = Yb();if (null != bc && bc > parseFloat($b)) {
	        Zb = String(bc);break a;
	      }
	    }Zb = $b;
	  }var Rb = {};
	  function cc(a) {
	    return Qb(a, function () {
	      for (var b = 0, c = Ya(String(Zb)).split("."), d = Ya(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {
	        var g = c[f] || "",
	            h = d[f] || "";do {
	          g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];if (0 == g[0].length && 0 == h[0].length) break;b = fb(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == h[1].length ? 0 : parseInt(h[1], 10)) || fb(0 == g[2].length, 0 == h[2].length) || fb(g[2], h[2]);g = g[3];h = h[3];
	        } while (0 == b);
	      }return 0 <= b;
	    });
	  }var dc;
	  dc = l.document && Tb ? Yb() : void 0;try {
	    new self.OffscreenCanvas(0, 0).getContext("2d");
	  } catch (a) {}var ec = !Tb || 9 <= Number(dc);function fc(a) {
	    var b = document;return "string" === typeof a ? b.getElementById(a) : a;
	  }function gc(a, b) {
	    jb(b, function (c, d) {
	      c && "object" == (typeof c === "undefined" ? "undefined" : _typeof(c)) && c.sa && (c = c.ra());"style" == d ? a.style.cssText = c : "class" == d ? a.className = c : "for" == d ? a.htmlFor = c : hc.hasOwnProperty(d) ? a.setAttribute(hc[d], c) : 0 == d.lastIndexOf("aria-", 0) || 0 == d.lastIndexOf("data-", 0) ? a.setAttribute(d, c) : a[d] = c;
	    });
	  }
	  var hc = { cellpadding: "cellPadding", cellspacing: "cellSpacing", colspan: "colSpan", frameborder: "frameBorder", height: "height", maxlength: "maxLength", nonce: "nonce", role: "role", rowspan: "rowSpan", type: "type", usemap: "useMap", valign: "vAlign", width: "width" };
	  function ic(a, b, c) {
	    var d = arguments,
	        e = document,
	        f = String(d[0]),
	        g = d[1];if (!ec && g && (g.name || g.type)) {
	      f = ["<", f];g.name && f.push(' name="', Ob(g.name), '"');if (g.type) {
	        f.push(' type="', Ob(g.type), '"');var h = {};z(h, g);delete h.type;g = h;
	      }f.push(">");f = f.join("");
	    }f = jc(e, f);g && ("string" === typeof g ? f.className = g : Array.isArray(g) ? f.className = g.join(" ") : gc(f, g));2 < d.length && kc(e, f, d);return f;
	  }
	  function kc(a, b, c) {
	    function d(g) {
	      g && b.appendChild("string" === typeof g ? a.createTextNode(g) : g);
	    }for (var e = 2; e < c.length; e++) {
	      var f = c[e];!ma(f) || n(f) && 0 < f.nodeType ? d(f) : w(lc(f) ? Xa(f) : f, d);
	    }
	  }function jc(a, b) {
	    b = String(b);"application/xhtml+xml" === a.contentType && (b = b.toLowerCase());return a.createElement(b);
	  }function lc(a) {
	    if (a && "number" == typeof a.length) {
	      if (n(a)) return "function" == typeof a.item || "string" == typeof a.item;if (na(a)) return "function" == typeof a.item;
	    }return !1;
	  };function mc(a) {
	    l.setTimeout(function () {
	      throw a;
	    }, 0);
	  }var nc;
	  function oc() {
	    var a = l.MessageChannel;"undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !y("Presto") && (a = function a() {
	      var e = jc(document, "IFRAME");e.style.display = "none";Lb(e);document.documentElement.appendChild(e);var f = e.contentWindow;e = f.document;e.open();e.write(Ib(Kb));e.close();var g = "callImmediate" + Math.random(),
	          h = "file:" == f.location.protocol ? "*" : f.location.protocol + "//" + f.location.host;e = q(function (m) {
	        if (("*" == h || m.origin == h) && m.data == g) this.port1.onmessage();
	      }, this);f.addEventListener("message", e, !1);this.port1 = {};this.port2 = { postMessage: function postMessage() {
	          f.postMessage(g, h);
	        } };
	    });if ("undefined" !== typeof a && !y("Trident") && !y("MSIE")) {
	      var b = new a(),
	          c = {},
	          d = c;b.port1.onmessage = function () {
	        if (void 0 !== c.next) {
	          c = c.next;var e = c.Fb;c.Fb = null;e();
	        }
	      };return function (e) {
	        d.next = { Fb: e };d = d.next;b.port2.postMessage(0);
	      };
	    }return function (e) {
	      l.setTimeout(e, 0);
	    };
	  };function pc(a, b) {
	    qc || rc();sc || (qc(), sc = !0);La.add(a, b);
	  }var qc;function rc() {
	    if (l.Promise && l.Promise.resolve) {
	      var a = l.Promise.resolve(void 0);qc = function qc() {
	        a.then(tc);
	      };
	    } else qc = function qc() {
	      var b = tc;!na(l.setImmediate) || l.Window && l.Window.prototype && !y("Edge") && l.Window.prototype.setImmediate == l.setImmediate ? (nc || (nc = oc()), nc(b)) : l.setImmediate(b);
	    };
	  }var sc = !1,
	      La = new Ha();function tc() {
	    for (var a; a = Ka();) {
	      try {
	        a.a.call(a.b);
	      } catch (b) {
	        mc(b);
	      }Ga(Ja, a);
	    }sc = !1;
	  };function C(a, b) {
	    this.a = uc;this.i = void 0;this.f = this.b = this.c = null;this.g = this.h = !1;if (a != ka) try {
	      var c = this;a.call(b, function (d) {
	        vc(c, wc, d);
	      }, function (d) {
	        if (!(d instanceof xc)) try {
	          if (d instanceof Error) throw d;throw Error("Promise rejected.");
	        } catch (e) {}vc(c, yc, d);
	      });
	    } catch (d) {
	      vc(this, yc, d);
	    }
	  }var uc = 0,
	      wc = 2,
	      yc = 3;function zc() {
	    this.next = this.f = this.b = this.g = this.a = null;this.c = !1;
	  }zc.prototype.reset = function () {
	    this.f = this.b = this.g = this.a = null;this.c = !1;
	  };var Ac = new Fa(function () {
	    return new zc();
	  }, function (a) {
	    a.reset();
	  });
	  function Bc(a, b, c) {
	    var d = Ac.get();d.g = a;d.b = b;d.f = c;return d;
	  }function D(a) {
	    if (a instanceof C) return a;var b = new C(ka);vc(b, wc, a);return b;
	  }function E(a) {
	    return new C(function (b, c) {
	      c(a);
	    });
	  }function Cc(a, b, c) {
	    Dc(a, b, c, null) || pc(ta(b, a));
	  }function Ec(a) {
	    return new C(function (b, c) {
	      var d = a.length,
	          e = [];if (d) for (var f = function f(p, v) {
	        d--;e[p] = v;0 == d && b(e);
	      }, g = function g(p) {
	        c(p);
	      }, h = 0, m; h < a.length; h++) {
	        m = a[h], Cc(m, ta(f, h), g);
	      } else b(e);
	    });
	  }
	  function Fc(a) {
	    return new C(function (b) {
	      var c = a.length,
	          d = [];if (c) for (var e = function e(h, m, p) {
	        c--;d[h] = m ? { Ob: !0, value: p } : { Ob: !1, reason: p };0 == c && b(d);
	      }, f = 0, g; f < a.length; f++) {
	        g = a[f], Cc(g, ta(e, f, !0), ta(e, f, !1));
	      } else b(d);
	    });
	  }C.prototype.then = function (a, b, c) {
	    return Gc(this, na(a) ? a : null, na(b) ? b : null, c);
	  };C.prototype.$goog_Thenable = !0;k = C.prototype;k.na = function (a, b) {
	    a = Bc(a, a, b);a.c = !0;Hc(this, a);return this;
	  };k.s = function (a, b) {
	    return Gc(this, null, a, b);
	  };
	  k.cancel = function (a) {
	    if (this.a == uc) {
	      var b = new xc(a);pc(function () {
	        Ic(this, b);
	      }, this);
	    }
	  };function Ic(a, b) {
	    if (a.a == uc) if (a.c) {
	      var c = a.c;if (c.b) {
	        for (var d = 0, e = null, f = null, g = c.b; g && (g.c || (d++, g.a == a && (e = g), !(e && 1 < d))); g = g.next) {
	          e || (f = g);
	        }e && (c.a == uc && 1 == d ? Ic(c, b) : (f ? (d = f, d.next == c.f && (c.f = d), d.next = d.next.next) : Jc(c), Kc(c, e, yc, b)));
	      }a.c = null;
	    } else vc(a, yc, b);
	  }function Hc(a, b) {
	    a.b || a.a != wc && a.a != yc || Lc(a);a.f ? a.f.next = b : a.b = b;a.f = b;
	  }
	  function Gc(a, b, c, d) {
	    var e = Bc(null, null, null);e.a = new C(function (f, g) {
	      e.g = b ? function (h) {
	        try {
	          var m = b.call(d, h);f(m);
	        } catch (p) {
	          g(p);
	        }
	      } : f;e.b = c ? function (h) {
	        try {
	          var m = c.call(d, h);void 0 === m && h instanceof xc ? g(h) : f(m);
	        } catch (p) {
	          g(p);
	        }
	      } : g;
	    });e.a.c = a;Hc(a, e);return e.a;
	  }k.Zc = function (a) {
	    this.a = uc;vc(this, wc, a);
	  };k.$c = function (a) {
	    this.a = uc;vc(this, yc, a);
	  };
	  function vc(a, b, c) {
	    a.a == uc && (a === c && (b = yc, c = new TypeError("Promise cannot resolve to itself")), a.a = 1, Dc(c, a.Zc, a.$c, a) || (a.i = c, a.a = b, a.c = null, Lc(a), b != yc || c instanceof xc || Mc(a, c)));
	  }function Dc(a, b, c, d) {
	    if (a instanceof C) return Hc(a, Bc(b || ka, c || null, d)), !0;if (Ca(a)) return a.then(b, c, d), !0;if (n(a)) try {
	      var e = a.then;if (na(e)) return Nc(a, e, b, c, d), !0;
	    } catch (f) {
	      return c.call(d, f), !0;
	    }return !1;
	  }
	  function Nc(a, b, c, d, e) {
	    function f(m) {
	      h || (h = !0, d.call(e, m));
	    }function g(m) {
	      h || (h = !0, c.call(e, m));
	    }var h = !1;try {
	      b.call(a, g, f);
	    } catch (m) {
	      f(m);
	    }
	  }function Lc(a) {
	    a.h || (a.h = !0, pc(a.fc, a));
	  }function Jc(a) {
	    var b = null;a.b && (b = a.b, a.b = b.next, b.next = null);a.b || (a.f = null);return b;
	  }k.fc = function () {
	    for (var a; a = Jc(this);) {
	      Kc(this, a, this.a, this.i);
	    }this.h = !1;
	  };
	  function Kc(a, b, c, d) {
	    if (c == yc && b.b && !b.c) for (; a && a.g; a = a.c) {
	      a.g = !1;
	    }if (b.a) b.a.c = null, Oc(b, c, d);else try {
	      b.c ? b.g.call(b.f) : Oc(b, c, d);
	    } catch (e) {
	      Pc.call(null, e);
	    }Ga(Ac, b);
	  }function Oc(a, b, c) {
	    b == wc ? a.g.call(a.f, c) : a.b && a.b.call(a.f, c);
	  }function Mc(a, b) {
	    a.g = !0;pc(function () {
	      a.g && Pc.call(null, b);
	    });
	  }var Pc = mc;function xc(a) {
	    u.call(this, a);
	  }r(xc, u);xc.prototype.name = "cancel";function Qc() {
	    0 != Rc && (Sc[oa(this)] = this);this.xa = this.xa;this.oa = this.oa;
	  }var Rc = 0,
	      Sc = {};Qc.prototype.xa = !1;function Tc(a) {
	    if (!a.xa && (a.xa = !0, a.Da(), 0 != Rc)) {
	      var b = oa(a);if (0 != Rc && a.oa && 0 < a.oa.length) throw Error(a + " did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete Sc[b];
	    }
	  }Qc.prototype.Da = function () {
	    if (this.oa) for (; this.oa.length;) {
	      this.oa.shift()();
	    }
	  };var Uc = Object.freeze || function (a) {
	    return a;
	  };var Vc = !Tb || 9 <= Number(dc),
	      Wc = Tb && !cc("9"),
	      Xc = function () {
	    if (!l.addEventListener || !Object.defineProperty) return !1;var a = !1,
	        b = Object.defineProperty({}, "passive", { get: function get() {
	        a = !0;
	      } });try {
	      l.addEventListener("test", ka, b), l.removeEventListener("test", ka, b);
	    } catch (c) {}return a;
	  }();function F(a, b) {
	    this.type = a;this.b = this.target = b;this.defaultPrevented = !1;
	  }F.prototype.preventDefault = function () {
	    this.defaultPrevented = !0;
	  };function Yc(a, b) {
	    F.call(this, a ? a.type : "");this.relatedTarget = this.b = this.target = null;this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;this.key = "";this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;this.pointerId = 0;this.pointerType = "";this.a = null;if (a) {
	      var c = this.type = a.type,
	          d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;this.target = a.target || a.srcElement;this.b = b;if (b = a.relatedTarget) {
	        if (Wb) {
	          a: {
	            try {
	              Pb(b.nodeName);var e = !0;break a;
	            } catch (f) {}e = !1;
	          }e || (b = null);
	        }
	      } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);this.relatedTarget = b;d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);this.button = a.button;this.key = a.key || "";this.ctrlKey = a.ctrlKey;this.altKey = a.altKey;this.shiftKey = a.shiftKey;this.metaKey = a.metaKey;this.pointerId = a.pointerId || 0;this.pointerType = "string" === typeof a.pointerType ? a.pointerType : Zc[a.pointerType] || "";this.a = a;a.defaultPrevented && this.preventDefault();
	    }
	  }r(Yc, F);var Zc = Uc({ 2: "touch", 3: "pen", 4: "mouse" });Yc.prototype.preventDefault = function () {
	    Yc.$a.preventDefault.call(this);var a = this.a;if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Wc) try {
	      if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
	    } catch (b) {}
	  };Yc.prototype.g = function () {
	    return this.a;
	  };var $c = "closure_listenable_" + (1E6 * Math.random() | 0),
	      ad = 0;function bd(a, b, c, d, e) {
	    this.listener = a;this.proxy = null;this.src = b;this.type = c;this.capture = !!d;this.Ua = e;this.key = ++ad;this.va = this.Oa = !1;
	  }function cd(a) {
	    a.va = !0;a.listener = null;a.proxy = null;a.src = null;a.Ua = null;
	  };function dd(a) {
	    this.src = a;this.a = {};this.b = 0;
	  }dd.prototype.add = function (a, b, c, d, e) {
	    var f = a.toString();a = this.a[f];a || (a = this.a[f] = [], this.b++);var g = ed(a, b, d, e);-1 < g ? (b = a[g], c || (b.Oa = !1)) : (b = new bd(b, this.src, f, !!d, e), b.Oa = c, a.push(b));return b;
	  };function fd(a, b) {
	    var c = b.type;c in a.a && Ua(a.a[c], b) && (cd(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
	  }function ed(a, b, c, d) {
	    for (var e = 0; e < a.length; ++e) {
	      var f = a[e];if (!f.va && f.listener == b && f.capture == !!c && f.Ua == d) return e;
	    }return -1;
	  };var gd = "closure_lm_" + (1E6 * Math.random() | 0),
	      hd = {},
	      id = 0;function jd(a, b, c, d, e) {
	    if (d && d.once) kd(a, b, c, d, e);else if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
	      jd(a, b[f], c, d, e);
	    } else c = ld(c), a && a[$c] ? md(a, b, c, n(d) ? !!d.capture : !!d, e) : nd(a, b, c, !1, d, e);
	  }
	  function nd(a, b, c, d, e, f) {
	    if (!b) throw Error("Invalid event type");var g = n(e) ? !!e.capture : !!e,
	        h = od(a);h || (a[gd] = h = new dd(a));c = h.add(b, c, d, g, f);if (!c.proxy) {
	      d = pd();c.proxy = d;d.src = a;d.listener = c;if (a.addEventListener) Xc || (e = g), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(qd(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");id++;
	    }
	  }
	  function pd() {
	    var a = rd,
	        b = Vc ? function (c) {
	      return a.call(b.src, b.listener, c);
	    } : function (c) {
	      c = a.call(b.src, b.listener, c);if (!c) return c;
	    };return b;
	  }function kd(a, b, c, d, e) {
	    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
	      kd(a, b[f], c, d, e);
	    } else c = ld(c), a && a[$c] ? sd(a, b, c, n(d) ? !!d.capture : !!d, e) : nd(a, b, c, !0, d, e);
	  }
	  function G(a, b, c, d, e) {
	    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
	      G(a, b[f], c, d, e);
	    } else (d = n(d) ? !!d.capture : !!d, c = ld(c), a && a[$c]) ? (a = a.v, b = String(b).toString(), b in a.a && (f = a.a[b], c = ed(f, c, d, e), -1 < c && (cd(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = od(a)) && (b = a.a[b.toString()], a = -1, b && (a = ed(b, c, d, e)), (c = -1 < a ? b[a] : null) && td(c));
	  }
	  function td(a) {
	    if ("number" !== typeof a && a && !a.va) {
	      var b = a.src;if (b && b[$c]) fd(b.v, a);else {
	        var c = a.type,
	            d = a.proxy;b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(qd(c), d) : b.addListener && b.removeListener && b.removeListener(d);id--;(c = od(b)) ? (fd(c, a), 0 == c.b && (c.src = null, b[gd] = null)) : cd(a);
	      }
	    }
	  }function qd(a) {
	    return a in hd ? hd[a] : hd[a] = "on" + a;
	  }
	  function ud(a, b, c, d) {
	    var e = !0;if (a = od(a)) if (b = a.a[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) {
	      var f = b[a];f && f.capture == c && !f.va && (f = vd(f, d), e = e && !1 !== f);
	    }return e;
	  }function vd(a, b) {
	    var c = a.listener,
	        d = a.Ua || a.src;a.Oa && td(a);return c.call(d, b);
	  }
	  function rd(a, b) {
	    if (a.va) return !0;if (!Vc) {
	      if (!b) a: {
	        b = ["window", "event"];for (var c = l, d = 0; d < b.length; d++) {
	          if (c = c[b[d]], null == c) {
	            b = null;break a;
	          }
	        }b = c;
	      }d = b;b = new Yc(d, this);c = !0;if (!(0 > d.keyCode || void 0 != d.returnValue)) {
	        a: {
	          var e = !1;if (0 == d.keyCode) try {
	            d.keyCode = -1;break a;
	          } catch (g) {
	            e = !0;
	          }if (e || void 0 == d.returnValue) d.returnValue = !0;
	        }d = [];for (e = b.b; e; e = e.parentNode) {
	          d.push(e);
	        }a = a.type;for (e = d.length - 1; 0 <= e; e--) {
	          b.b = d[e];var f = ud(d[e], a, !0, b);c = c && f;
	        }for (e = 0; e < d.length; e++) {
	          b.b = d[e], f = ud(d[e], a, !1, b), c = c && f;
	        }
	      }return c;
	    }return vd(a, new Yc(b, this));
	  }function od(a) {
	    a = a[gd];return a instanceof dd ? a : null;
	  }var wd = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);function ld(a) {
	    if (na(a)) return a;a[wd] || (a[wd] = function (b) {
	      return a.handleEvent(b);
	    });return a[wd];
	  };function H() {
	    Qc.call(this);this.v = new dd(this);this.$b = this;this.fb = null;
	  }r(H, Qc);H.prototype[$c] = !0;H.prototype.addEventListener = function (a, b, c, d) {
	    jd(this, a, b, c, d);
	  };H.prototype.removeEventListener = function (a, b, c, d) {
	    G(this, a, b, c, d);
	  };
	  H.prototype.dispatchEvent = function (a) {
	    var b,
	        c = this.fb;if (c) for (b = []; c; c = c.fb) {
	      b.push(c);
	    }c = this.$b;var d = a.type || a;if ("string" === typeof a) a = new F(a, c);else if (a instanceof F) a.target = a.target || c;else {
	      var e = a;a = new F(d, c);z(a, e);
	    }e = !0;if (b) for (var f = b.length - 1; 0 <= f; f--) {
	      var g = a.b = b[f];e = xd(g, d, !0, a) && e;
	    }g = a.b = c;e = xd(g, d, !0, a) && e;e = xd(g, d, !1, a) && e;if (b) for (f = 0; f < b.length; f++) {
	      g = a.b = b[f], e = xd(g, d, !1, a) && e;
	    }return e;
	  };
	  H.prototype.Da = function () {
	    H.$a.Da.call(this);if (this.v) {
	      var a = this.v,
	          b = 0,
	          c;for (c in a.a) {
	        for (var d = a.a[c], e = 0; e < d.length; e++) {
	          ++b, cd(d[e]);
	        }delete a.a[c];a.b--;
	      }
	    }this.fb = null;
	  };function md(a, b, c, d, e) {
	    a.v.add(String(b), c, !1, d, e);
	  }function sd(a, b, c, d, e) {
	    a.v.add(String(b), c, !0, d, e);
	  }
	  function xd(a, b, c, d) {
	    b = a.v.a[String(b)];if (!b) return !0;b = b.concat();for (var e = !0, f = 0; f < b.length; ++f) {
	      var g = b[f];if (g && !g.va && g.capture == c) {
	        var h = g.listener,
	            m = g.Ua || g.src;g.Oa && fd(a.v, g);e = !1 !== h.call(m, d) && e;
	      }
	    }return e && !d.defaultPrevented;
	  };function zd(a, b, c) {
	    if (na(a)) c && (a = q(a, c));else if (a && "function" == typeof a.handleEvent) a = q(a.handleEvent, a);else throw Error("Invalid listener argument");return 2147483647 < Number(b) ? -1 : l.setTimeout(a, b || 0);
	  }function Ad(a) {
	    var b = null;return new C(function (c, d) {
	      b = zd(function () {
	        c(void 0);
	      }, a);-1 == b && d(Error("Failed to schedule timer."));
	    }).s(function (c) {
	      l.clearTimeout(b);throw c;
	    });
	  };function Bd(a) {
	    if (a.V && "function" == typeof a.V) return a.V();if ("string" === typeof a) return a.split("");if (ma(a)) {
	      for (var b = [], c = a.length, d = 0; d < c; d++) {
	        b.push(a[d]);
	      }return b;
	    }b = [];c = 0;for (d in a) {
	      b[c++] = a[d];
	    }return b;
	  }function Cd(a) {
	    if (a.Y && "function" == typeof a.Y) return a.Y();if (!a.V || "function" != typeof a.V) {
	      if (ma(a) || "string" === typeof a) {
	        var b = [];a = a.length;for (var c = 0; c < a; c++) {
	          b.push(c);
	        }return b;
	      }b = [];c = 0;for (var d in a) {
	        b[c++] = d;
	      }return b;
	    }
	  }
	  function Dd(a, b) {
	    if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (ma(a) || "string" === typeof a) w(a, b, void 0);else for (var c = Cd(a), d = Bd(a), e = d.length, f = 0; f < e; f++) {
	      b.call(void 0, d[f], c && c[f], a);
	    }
	  };function Ed(a, b) {
	    this.b = {};this.a = [];this.c = 0;var c = arguments.length;if (1 < c) {
	      if (c % 2) throw Error("Uneven number of arguments");for (var d = 0; d < c; d += 2) {
	        this.set(arguments[d], arguments[d + 1]);
	      }
	    } else if (a) if (a instanceof Ed) for (c = a.Y(), d = 0; d < c.length; d++) {
	      this.set(c[d], a.get(c[d]));
	    } else for (d in a) {
	      this.set(d, a[d]);
	    }
	  }k = Ed.prototype;k.V = function () {
	    Fd(this);for (var a = [], b = 0; b < this.a.length; b++) {
	      a.push(this.b[this.a[b]]);
	    }return a;
	  };k.Y = function () {
	    Fd(this);return this.a.concat();
	  };
	  k.clear = function () {
	    this.b = {};this.c = this.a.length = 0;
	  };function Fd(a) {
	    if (a.c != a.a.length) {
	      for (var b = 0, c = 0; b < a.a.length;) {
	        var d = a.a[b];Gd(a.b, d) && (a.a[c++] = d);b++;
	      }a.a.length = c;
	    }if (a.c != a.a.length) {
	      var e = {};for (c = b = 0; b < a.a.length;) {
	        d = a.a[b], Gd(e, d) || (a.a[c++] = d, e[d] = 1), b++;
	      }a.a.length = c;
	    }
	  }k.get = function (a, b) {
	    return Gd(this.b, a) ? this.b[a] : b;
	  };k.set = function (a, b) {
	    Gd(this.b, a) || (this.c++, this.a.push(a));this.b[a] = b;
	  };
	  k.forEach = function (a, b) {
	    for (var c = this.Y(), d = 0; d < c.length; d++) {
	      var e = c[d],
	          f = this.get(e);a.call(b, f, e, this);
	    }
	  };function Gd(a, b) {
	    return Object.prototype.hasOwnProperty.call(a, b);
	  };var Hd = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/\\#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function Id(a, b) {
	    if (a) {
	      a = a.split("&");for (var c = 0; c < a.length; c++) {
	        var d = a[c].indexOf("="),
	            e = null;if (0 <= d) {
	          var f = a[c].substring(0, d);e = a[c].substring(d + 1);
	        } else f = a[c];b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
	      }
	    }
	  };function Jd(a, b) {
	    this.a = this.l = this.f = "";this.g = null;this.h = this.c = "";this.i = !1;var c;a instanceof Jd ? (this.i = void 0 !== b ? b : a.i, Kd(this, a.f), this.l = a.l, this.a = a.a, Ld(this, a.g), this.c = a.c, Md(this, Nd(a.b)), this.h = a.h) : a && (c = String(a).match(Hd)) ? (this.i = !!b, Kd(this, c[1] || "", !0), this.l = Od(c[2] || ""), this.a = Od(c[3] || "", !0), Ld(this, c[4]), this.c = Od(c[5] || "", !0), Md(this, c[6] || "", !0), this.h = Od(c[7] || "")) : (this.i = !!b, this.b = new Pd(null, this.i));
	  }
	  Jd.prototype.toString = function () {
	    var a = [],
	        b = this.f;b && a.push(Qd(b, Rd, !0), ":");var c = this.a;if (c || "file" == b) a.push("//"), (b = this.l) && a.push(Qd(b, Rd, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.g, null != c && a.push(":", String(c));if (c = this.c) this.a && "/" != c.charAt(0) && a.push("/"), a.push(Qd(c, "/" == c.charAt(0) ? Sd : Td, !0));(c = this.b.toString()) && a.push("?", c);(c = this.h) && a.push("#", Qd(c, Ud));return a.join("");
	  };
	  Jd.prototype.resolve = function (a) {
	    var b = new Jd(this),
	        c = !!a.f;c ? Kd(b, a.f) : c = !!a.l;c ? b.l = a.l : c = !!a.a;c ? b.a = a.a : c = null != a.g;var d = a.c;if (c) Ld(b, a.g);else if (c = !!a.c) {
	      if ("/" != d.charAt(0)) if (this.a && !this.c) d = "/" + d;else {
	        var e = b.c.lastIndexOf("/");-1 != e && (d = b.c.substr(0, e + 1) + d);
	      }e = d;if (".." == e || "." == e) d = "";else if (x(e, "./") || x(e, "/.")) {
	        d = 0 == e.lastIndexOf("/", 0);e = e.split("/");for (var f = [], g = 0; g < e.length;) {
	          var h = e[g++];"." == h ? d && g == e.length && f.push("") : ".." == h ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && g == e.length && f.push("")) : (f.push(h), d = !0);
	        }d = f.join("/");
	      } else d = e;
	    }c ? b.c = d : c = "" !== a.b.toString();c ? Md(b, Nd(a.b)) : c = !!a.h;c && (b.h = a.h);return b;
	  };function Kd(a, b, c) {
	    a.f = c ? Od(b, !0) : b;a.f && (a.f = a.f.replace(/:$/, ""));
	  }function Ld(a, b) {
	    if (b) {
	      b = Number(b);if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);a.g = b;
	    } else a.g = null;
	  }function Md(a, b, c) {
	    b instanceof Pd ? (a.b = b, Vd(a.b, a.i)) : (c || (b = Qd(b, Wd)), a.b = new Pd(b, a.i));
	  }function I(a, b, c) {
	    a.b.set(b, c);
	  }function Xd(a, b) {
	    return a.b.get(b);
	  }
	  function J(a) {
	    return a instanceof Jd ? new Jd(a) : new Jd(a, void 0);
	  }function Yd(a, b, c, d) {
	    var e = new Jd(null, void 0);a && Kd(e, a);b && (e.a = b);c && Ld(e, c);d && (e.c = d);return e;
	  }function Od(a, b) {
	    return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
	  }function Qd(a, b, c) {
	    return "string" === typeof a ? (a = encodeURI(a).replace(b, Zd), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
	  }function Zd(a) {
	    a = a.charCodeAt(0);return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
	  }
	  var Rd = /[#\/\?@]/g,
	      Td = /[#\?:]/g,
	      Sd = /[#\?]/g,
	      Wd = /[#\?@]/g,
	      Ud = /#/g;function Pd(a, b) {
	    this.b = this.a = null;this.c = a || null;this.f = !!b;
	  }function $d(a) {
	    a.a || (a.a = new Ed(), a.b = 0, a.c && Id(a.c, function (b, c) {
	      a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
	    }));
	  }function ae(a) {
	    var b = Cd(a);if ("undefined" == typeof b) throw Error("Keys are undefined");var c = new Pd(null, void 0);a = Bd(a);for (var d = 0; d < b.length; d++) {
	      var e = b[d],
	          f = a[d];Array.isArray(f) ? be(c, e, f) : c.add(e, f);
	    }return c;
	  }k = Pd.prototype;
	  k.add = function (a, b) {
	    $d(this);this.c = null;a = ce(this, a);var c = this.a.get(a);c || this.a.set(a, c = []);c.push(b);this.b += 1;return this;
	  };function de(a, b) {
	    $d(a);b = ce(a, b);Gd(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, Gd(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Fd(a)));
	  }k.clear = function () {
	    this.a = this.c = null;this.b = 0;
	  };function ee(a, b) {
	    $d(a);b = ce(a, b);return Gd(a.a.b, b);
	  }k.forEach = function (a, b) {
	    $d(this);this.a.forEach(function (c, d) {
	      w(c, function (e) {
	        a.call(b, e, d, this);
	      }, this);
	    }, this);
	  };
	  k.Y = function () {
	    $d(this);for (var a = this.a.V(), b = this.a.Y(), c = [], d = 0; d < b.length; d++) {
	      for (var e = a[d], f = 0; f < e.length; f++) {
	        c.push(b[d]);
	      }
	    }return c;
	  };k.V = function (a) {
	    $d(this);var b = [];if ("string" === typeof a) ee(this, a) && (b = Wa(b, this.a.get(ce(this, a))));else {
	      a = this.a.V();for (var c = 0; c < a.length; c++) {
	        b = Wa(b, a[c]);
	      }
	    }return b;
	  };k.set = function (a, b) {
	    $d(this);this.c = null;a = ce(this, a);ee(this, a) && (this.b -= this.a.get(a).length);this.a.set(a, [b]);this.b += 1;return this;
	  };
	  k.get = function (a, b) {
	    if (!a) return b;a = this.V(a);return 0 < a.length ? String(a[0]) : b;
	  };function be(a, b, c) {
	    de(a, b);0 < c.length && (a.c = null, a.a.set(ce(a, b), Xa(c)), a.b += c.length);
	  }k.toString = function () {
	    if (this.c) return this.c;if (!this.a) return "";for (var a = [], b = this.a.Y(), c = 0; c < b.length; c++) {
	      var d = b[c],
	          e = encodeURIComponent(String(d));d = this.V(d);for (var f = 0; f < d.length; f++) {
	        var g = e;"" !== d[f] && (g += "=" + encodeURIComponent(String(d[f])));a.push(g);
	      }
	    }return this.c = a.join("&");
	  };
	  function Nd(a) {
	    var b = new Pd();b.c = a.c;a.a && (b.a = new Ed(a.a), b.b = a.b);return b;
	  }function ce(a, b) {
	    b = String(b);a.f && (b = b.toLowerCase());return b;
	  }function Vd(a, b) {
	    b && !a.f && ($d(a), a.c = null, a.a.forEach(function (c, d) {
	      var e = d.toLowerCase();d != e && (de(this, d), be(this, e, c));
	    }, a));a.f = b;
	  };function fe(a) {
	    var b = [];ge(new he(), a, b);return b.join("");
	  }function he() {}
	  function ge(a, b, c) {
	    if (null == b) c.push("null");else {
	      if ("object" == (typeof b === "undefined" ? "undefined" : _typeof(b))) {
	        if (Array.isArray(b)) {
	          var d = b;b = d.length;c.push("[");for (var e = "", f = 0; f < b; f++) {
	            c.push(e), ge(a, d[f], c), e = ",";
	          }c.push("]");return;
	        }if (b instanceof String || b instanceof Number || b instanceof Boolean) b = b.valueOf();else {
	          c.push("{");e = "";for (d in b) {
	            Object.prototype.hasOwnProperty.call(b, d) && (f = b[d], "function" != typeof f && (c.push(e), ie(d, c), c.push(":"), ge(a, f, c), e = ","));
	          }c.push("}");return;
	        }
	      }switch (typeof b === "undefined" ? "undefined" : _typeof(b)) {case "string":
	          ie(b, c);break;case "number":
	          c.push(isFinite(b) && !isNaN(b) ? String(b) : "null");break;case "boolean":
	          c.push(String(b));break;case "function":
	          c.push("null");break;default:
	          throw Error("Unknown type: " + (typeof b === "undefined" ? "undefined" : _typeof(b)));}
	    }
	  }var je = { '"': '\\"', "\\": "\\\\", "/": "\\/", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "\t": "\\t", "\x0B": "\\u000b" },
	      ke = /\uffff/.test("\uFFFF") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;
	  function ie(a, b) {
	    b.push('"', a.replace(ke, function (c) {
	      var d = je[c];d || (d = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1), je[c] = d);return d;
	    }), '"');
	  };function le() {
	    var a = K();return Tb && !!dc && 11 == dc || /Edge\/\d+/.test(a);
	  }function me() {
	    return l.window && l.window.location.href || self && self.location && self.location.href || "";
	  }function ne(a, b) {
	    b = b || l.window;var c = "about:blank";a && (c = Db(Fb(a)));b.location.href = c;
	  }function oe(a, b) {
	    var c = [],
	        d;for (d in a) {
	      d in b ? _typeof(a[d]) != _typeof(b[d]) ? c.push(d) : "object" == _typeof(a[d]) && null != a[d] && null != b[d] ? 0 < oe(a[d], b[d]).length && c.push(d) : a[d] !== b[d] && c.push(d) : c.push(d);
	    }for (d in b) {
	      d in a || c.push(d);
	    }return c;
	  }
	  function pe() {
	    var a = K();a = qe(a) != re ? null : (a = a.match(/\sChrome\/(\d+)/i)) && 2 == a.length ? parseInt(a[1], 10) : null;return a && 30 > a ? !1 : !Tb || !dc || 9 < dc;
	  }function se(a) {
	    a = (a || K()).toLowerCase();return a.match(/android/) || a.match(/webos/) || a.match(/iphone|ipad|ipod/) || a.match(/blackberry/) || a.match(/windows phone/) || a.match(/iemobile/) ? !0 : !1;
	  }function te(a) {
	    a = a || l.window;try {
	      a.close();
	    } catch (b) {}
	  }
	  function ue(a, b, c) {
	    var d = Math.floor(1E9 * Math.random()).toString();b = b || 500;c = c || 600;var e = (window.screen.availHeight - c) / 2,
	        f = (window.screen.availWidth - b) / 2;b = { width: b, height: c, top: 0 < e ? e : 0, left: 0 < f ? f : 0, location: !0, resizable: !0, statusbar: !0, toolbar: !1 };c = K().toLowerCase();d && (b.target = d, x(c, "crios/") && (b.target = "_blank"));qe(K()) == ve && (a = a || "http://localhost", b.scrollbars = !0);c = a || "";(a = b) || (a = {});d = window;b = c instanceof Ab ? c : Fb("undefined" != typeof c.href ? c.href : String(c));c = a.target || c.target;e = [];
	    for (g in a) {
	      switch (g) {case "width":case "height":case "top":case "left":
	          e.push(g + "=" + a[g]);break;case "target":case "noopener":case "noreferrer":
	          break;default:
	          e.push(g + "=" + (a[g] ? 1 : 0));}
	    }var g = e.join(",");if ((y("iPhone") && !y("iPod") && !y("iPad") || y("iPad") || y("iPod")) && d.navigator && d.navigator.standalone && c && "_self" != c) g = jc(document, "A"), nb(g, "HTMLAnchorElement"), b instanceof Ab || b instanceof Ab || (b = "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && b.sa ? b.ra() : String(b), Eb.test(b) || (b = "about:invalid#zClosurez"), b = new Ab(Bb, b)), g.href = Db(b), g.setAttribute("target", c), a.noreferrer && g.setAttribute("rel", "noreferrer"), a = document.createEvent("MouseEvent"), a.initMouseEvent("click", !0, !0, d, 1), g.dispatchEvent(a), g = {};else if (a.noreferrer) {
	      if (g = d.open("", c, g), a = Db(b), g && (Vb && x(a, ";") && (a = "'" + a.replace(/'/g, "%27") + "'"), g.opener = null, a = Jb('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url=' + Ob(a) + '">'), d = g.document)) d.write(Ib(a)), d.close();
	    } else (g = d.open(Db(b), c, g)) && a.noopener && (g.opener = null);if (g) try {
	      g.focus();
	    } catch (h) {}return g;
	  }
	  function we(a) {
	    return new C(function (b) {
	      function c() {
	        Ad(2E3).then(function () {
	          if (!a || a.closed) b();else return c();
	        });
	      }return c();
	    });
	  }var xe = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
	      ye = /^[^@]+@[^@]+$/;function ze() {
	    var a = null;return new C(function (b) {
	      "complete" == l.document.readyState ? b() : (a = function a() {
	        b();
	      }, kd(window, "load", a));
	    }).s(function (b) {
	      G(window, "load", a);throw b;
	    });
	  }
	  function Ae() {
	    return Be(void 0) ? ze().then(function () {
	      return new C(function (a, b) {
	        var c = l.document,
	            d = setTimeout(function () {
	          b(Error("Cordova framework is not ready."));
	        }, 1E3);c.addEventListener("deviceready", function () {
	          clearTimeout(d);a();
	        }, !1);
	      });
	    }) : E(Error("Cordova must run in an Android or iOS file scheme."));
	  }function Be(a) {
	    a = a || K();return !("file:" !== Ce() && "ionic:" !== Ce() || !a.toLowerCase().match(/iphone|ipad|ipod|android/));
	  }function De() {
	    var a = l.window;try {
	      return !(!a || a == a.top);
	    } catch (b) {
	      return !1;
	    }
	  }
	  function Ee() {
	    return "undefined" !== typeof l.WorkerGlobalScope && "function" === typeof l.importScripts;
	  }function Fe() {
	    return firebase.INTERNAL.hasOwnProperty("reactNative") ? "ReactNative" : firebase.INTERNAL.hasOwnProperty("node") ? "Node" : Ee() ? "Worker" : "Browser";
	  }function Ge() {
	    var a = Fe();return "ReactNative" === a || "Node" === a;
	  }function He() {
	    for (var a = 50, b = []; 0 < a;) {
	      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
	    }return b.join("");
	  }
	  var ve = "Firefox",
	      re = "Chrome";
	  function qe(a) {
	    var b = a.toLowerCase();if (x(b, "opera/") || x(b, "opr/") || x(b, "opios/")) return "Opera";if (x(b, "iemobile")) return "IEMobile";if (x(b, "msie") || x(b, "trident/")) return "IE";if (x(b, "edge/")) return "Edge";if (x(b, "firefox/")) return ve;if (x(b, "silk/")) return "Silk";if (x(b, "blackberry")) return "Blackberry";if (x(b, "webos")) return "Webos";if (!x(b, "safari/") || x(b, "chrome/") || x(b, "crios/") || x(b, "android")) {
	      if (!x(b, "chrome/") && !x(b, "crios/") || x(b, "edge/")) {
	        if (x(b, "android")) return "Android";if ((a = a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/)) && 2 == a.length) return a[1];
	      } else return re;
	    } else return "Safari";return "Other";
	  }var Ie = { ld: "FirebaseCore-web", nd: "FirebaseUI-web" };function Je(a, b) {
	    b = b || [];var c = [],
	        d = {},
	        e;for (e in Ie) {
	      d[Ie[e]] = !0;
	    }for (e = 0; e < b.length; e++) {
	      "undefined" !== typeof d[b[e]] && (delete d[b[e]], c.push(b[e]));
	    }c.sort();b = c;b.length || (b = ["FirebaseCore-web"]);c = Fe();"Browser" === c ? (d = K(), c = qe(d)) : "Worker" === c && (d = K(), c = qe(d) + "-" + c);return c + "/JsCore/" + a + "/" + b.join(",");
	  }function K() {
	    return l.navigator && l.navigator.userAgent || "";
	  }
	  function L(a, b) {
	    a = a.split(".");b = b || l;for (var c = 0; c < a.length && "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && null != b; c++) {
	      b = b[a[c]];
	    }c != a.length && (b = void 0);return b;
	  }function Ke() {
	    try {
	      var a = l.localStorage,
	          b = Le();if (a) return a.setItem(b, "1"), a.removeItem(b), le() ? !!l.indexedDB : !0;
	    } catch (c) {
	      return Ee() && !!l.indexedDB;
	    }return !1;
	  }function Me() {
	    return (Ne() || "chrome-extension:" === Ce() || Be()) && !Ge() && Ke() && !Ee();
	  }function Ne() {
	    return "http:" === Ce() || "https:" === Ce();
	  }function Ce() {
	    return l.location && l.location.protocol || null;
	  }
	  function Oe(a) {
	    a = a || K();return se(a) || qe(a) == ve ? !1 : !0;
	  }function Pe(a) {
	    return "undefined" === typeof a ? null : fe(a);
	  }function Qe(a) {
	    var b = {},
	        c;for (c in a) {
	      a.hasOwnProperty(c) && null !== a[c] && void 0 !== a[c] && (b[c] = a[c]);
	    }return b;
	  }function Re(a) {
	    if (null !== a) return JSON.parse(a);
	  }function Le(a) {
	    return a ? a : Math.floor(1E9 * Math.random()).toString();
	  }function Se(a) {
	    a = a || K();return "Safari" == qe(a) || a.toLowerCase().match(/iphone|ipad|ipod/) ? !1 : !0;
	  }
	  function Te() {
	    var a = l.___jsl;if (a && a.H) for (var b in a.H) {
	      if (a.H[b].r = a.H[b].r || [], a.H[b].L = a.H[b].L || [], a.H[b].r = a.H[b].L.concat(), a.CP) for (var c = 0; c < a.CP.length; c++) {
	        a.CP[c] = null;
	      }
	    }
	  }function Ue(a, b) {
	    if (a > b) throw Error("Short delay should be less than long delay!");this.a = a;this.c = b;a = K();b = Fe();this.b = se(a) || "ReactNative" === b;
	  }
	  Ue.prototype.get = function () {
	    var a = l.navigator;return (a && "boolean" === typeof a.onLine && (Ne() || "chrome-extension:" === Ce() || "undefined" !== typeof a.connection) ? a.onLine : 1) ? this.b ? this.c : this.a : Math.min(5E3, this.a);
	  };function Ve() {
	    var a = l.document;return a && "undefined" !== typeof a.visibilityState ? "visible" == a.visibilityState : !0;
	  }
	  function We() {
	    var a = l.document,
	        _b = null;return Ve() || !a ? D() : new C(function (c) {
	      _b = function b() {
	        Ve() && (a.removeEventListener("visibilitychange", _b, !1), c());
	      };a.addEventListener("visibilitychange", _b, !1);
	    }).s(function (c) {
	      a.removeEventListener("visibilitychange", _b, !1);throw c;
	    });
	  }function Xe(a) {
	    "undefined" !== typeof console && "function" === typeof console.warn && console.warn(a);
	  }
	  function Ye(a) {
	    try {
	      var b = new Date(parseInt(a, 10));if (!isNaN(b.getTime()) && !/[^0-9]/.test(a)) return b.toUTCString();
	    } catch (c) {}return null;
	  }function Ze() {
	    return !(!L("fireauth.oauthhelper", l) && !L("fireauth.iframe", l));
	  }function $e() {
	    var a = l.navigator;return a && a.serviceWorker && a.serviceWorker.controller || null;
	  }function af() {
	    var a = l.navigator;return a && a.serviceWorker ? D().then(function () {
	      return a.serviceWorker.ready;
	    }).then(function (b) {
	      return b.active || null;
	    }).s(function () {
	      return null;
	    }) : D(null);
	  };var bf = {};function cf(a) {
	    bf[a] || (bf[a] = !0, Xe(a));
	  };var df;try {
	    var ef = {};Object.defineProperty(ef, "abcd", { configurable: !0, enumerable: !0, value: 1 });Object.defineProperty(ef, "abcd", { configurable: !0, enumerable: !0, value: 2 });df = 2 == ef.abcd;
	  } catch (a) {
	    df = !1;
	  }function M(a, b, c) {
	    df ? Object.defineProperty(a, b, { configurable: !0, enumerable: !0, value: c }) : a[b] = c;
	  }function N(a, b) {
	    if (b) for (var c in b) {
	      b.hasOwnProperty(c) && M(a, c, b[c]);
	    }
	  }function ff(a) {
	    var b = {};N(b, a);return b;
	  }function gf(a) {
	    var b = {},
	        c;for (c in a) {
	      a.hasOwnProperty(c) && (b[c] = a[c]);
	    }return b;
	  }
	  function hf(a, b) {
	    if (!b || !b.length) return !0;if (!a) return !1;for (var c = 0; c < b.length; c++) {
	      var d = a[b[c]];if (void 0 === d || null === d || "" === d) return !1;
	    }return !0;
	  }function jf(a) {
	    var b = a;if ("object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) && null != a) {
	      b = "length" in a ? [] : {};for (var c in a) {
	        M(b, c, jf(a[c]));
	      }
	    }return b;
	  }; /*
	     Copyright 2019 Google Inc.
	     Licensed under the Apache License, Version 2.0 (the "License");
	     you may not use this file except in compliance with the License.
	     You may obtain a copy of the License at
	     http://www.apache.org/licenses/LICENSE-2.0
	     Unless required by applicable law or agreed to in writing, software
	     distributed under the License is distributed on an "AS IS" BASIS,
	     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     See the License for the specific language governing permissions and
	     limitations under the License.
	     */
	  function kf(a) {
	    var b = a && (a[lf] ? "phone" : null);if (b && a && a[mf]) {
	      M(this, "uid", a[mf]);M(this, "displayName", a[nf] || null);var c = null;a[of] && (c = new Date(a[of]).toUTCString());M(this, "enrollmentTime", c);M(this, "factorId", b);
	    } else throw new t("internal-error", "Internal assert: invalid MultiFactorInfo object");
	  }kf.prototype.w = function () {
	    return { uid: this.uid, displayName: this.displayName, factorId: this.factorId, enrollmentTime: this.enrollmentTime };
	  };function pf(a) {
	    try {
	      var b = new qf(a);
	    } catch (c) {
	      b = null;
	    }return b;
	  }
	  var nf = "displayName",
	      of = "enrolledAt",
	      mf = "mfaEnrollmentId",
	      lf = "phoneInfo";function qf(a) {
	    kf.call(this, a);M(this, "phoneNumber", a[lf]);
	  }r(qf, kf);qf.prototype.w = function () {
	    var a = qf.$a.w.call(this);a.phoneNumber = this.phoneNumber;return a;
	  };function rf(a) {
	    var b = {},
	        c = a[sf],
	        d = a[tf],
	        e = a[uf];a = pf(a[vf]);if (!e || e != wf && e != xf && !c || e == xf && !d || e == yf && !a) throw Error("Invalid checkActionCode response!");e == xf ? (b[zf] = c || null, b[Af] = c || null, b[Bf] = d) : (b[zf] = d || null, b[Af] = d || null, b[Bf] = c || null);b[Cf] = a || null;M(this, Df, e);M(this, Ef, jf(b));
	  }
	  var yf = "REVERT_SECOND_FACTOR_ADDITION",
	      wf = "EMAIL_SIGNIN",
	      xf = "VERIFY_AND_CHANGE_EMAIL",
	      sf = "email",
	      vf = "mfaInfo",
	      tf = "newEmail",
	      uf = "requestType",
	      Bf = "email",
	      zf = "fromEmail",
	      Cf = "multiFactorInfo",
	      Af = "previousEmail",
	      Ef = "data",
	      Df = "operation";function Ff(a) {
	    a = J(a);var b = Xd(a, Gf) || null,
	        c = Xd(a, Hf) || null,
	        d = Xd(a, If) || null;d = d ? Jf[d] || null : null;if (!b || !c || !d) throw new t("argument-error", Gf + ", " + Hf + "and " + If + " are required in a valid action code URL.");N(this, { apiKey: b, operation: d, code: c, continueUrl: Xd(a, Kf) || null, languageCode: Xd(a, Lf) || null, tenantId: Xd(a, Mf) || null });
	  }
	  var Gf = "apiKey",
	      Hf = "oobCode",
	      Kf = "continueUrl",
	      Lf = "languageCode",
	      If = "mode",
	      Mf = "tenantId",
	      Jf = { recoverEmail: "RECOVER_EMAIL", resetPassword: "PASSWORD_RESET", revertSecondFactorAddition: yf, signIn: wf, verifyAndChangeEmail: xf, verifyEmail: "VERIFY_EMAIL" };function Nf(a) {
	    try {
	      return new Ff(a);
	    } catch (b) {
	      return null;
	    }
	  };function Of(a) {
	    var b = a[Pf];if ("undefined" === typeof b) throw new t("missing-continue-uri");if ("string" !== typeof b || "string" === typeof b && !b.length) throw new t("invalid-continue-uri");this.h = b;this.b = this.a = null;this.g = !1;var c = a[Qf];if (c && "object" === (typeof c === "undefined" ? "undefined" : _typeof(c))) {
	      b = c[Rf];var d = c[Sf];c = c[Tf];if ("string" === typeof b && b.length) {
	        this.a = b;if ("undefined" !== typeof d && "boolean" !== typeof d) throw new t("argument-error", Sf + " property must be a boolean when specified.");this.g = !!d;if ("undefined" !== typeof c && ("string" !== typeof c || "string" === typeof c && !c.length)) throw new t("argument-error", Tf + " property must be a non empty string when specified.");this.b = c || null;
	      } else {
	        if ("undefined" !== typeof b) throw new t("argument-error", Rf + " property must be a non empty string when specified.");if ("undefined" !== typeof d || "undefined" !== typeof c) throw new t("missing-android-pkg-name");
	      }
	    } else if ("undefined" !== typeof c) throw new t("argument-error", Qf + " property must be a non null object when specified.");this.f = null;if ((b = a[Uf]) && "object" === (typeof b === "undefined" ? "undefined" : _typeof(b))) {
	      if (b = b[Vf], "string" === typeof b && b.length) this.f = b;else {
	        if ("undefined" !== typeof b) throw new t("argument-error", Vf + " property must be a non empty string when specified.");
	      }
	    } else if ("undefined" !== typeof b) throw new t("argument-error", Uf + " property must be a non null object when specified.");b = a[Wf];if ("undefined" !== typeof b && "boolean" !== typeof b) throw new t("argument-error", Wf + " property must be a boolean when specified.");this.c = !!b;a = a[Xf];if ("undefined" !== typeof a && ("string" !== typeof a || "string" === typeof a && !a.length)) throw new t("argument-error", Xf + " property must be a non empty string when specified.");this.i = a || null;
	  }var Qf = "android",
	      Xf = "dynamicLinkDomain",
	      Wf = "handleCodeInApp",
	      Uf = "iOS",
	      Pf = "url",
	      Sf = "installApp",
	      Tf = "minimumVersion",
	      Rf = "packageName",
	      Vf = "bundleId";
	  function Yf(a) {
	    var b = {};b.continueUrl = a.h;b.canHandleCodeInApp = a.c;if (b.androidPackageName = a.a) b.androidMinimumVersion = a.b, b.androidInstallApp = a.g;b.iOSBundleId = a.f;b.dynamicLinkDomain = a.i;for (var c in b) {
	      null === b[c] && delete b[c];
	    }return b;
	  };function Zf(a) {
	    return Pa(a, function (b) {
	      b = b.toString(16);return 1 < b.length ? b : "0" + b;
	    }).join("");
	  };var $f = null;function ag(a) {
	    var b = "";bg(a, function (c) {
	      b += String.fromCharCode(c);
	    });return b;
	  }function bg(a, b) {
	    function c(m) {
	      for (; d < a.length;) {
	        var p = a.charAt(d++),
	            v = $f[p];if (null != v) return v;if (!/^[\s\xa0]*$/.test(p)) throw Error("Unknown base64 encoding at char: " + p);
	      }return m;
	    }cg();for (var d = 0;;) {
	      var e = c(-1),
	          f = c(0),
	          g = c(64),
	          h = c(64);if (64 === h && -1 === e) break;b(e << 2 | f >> 4);64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));
	    }
	  }
	  function cg() {
	    if (!$f) {
	      $f = {};for (var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = ["+/=", "+/", "-_=", "-_.", "-_"], c = 0; 5 > c; c++) {
	        for (var d = a.concat(b[c].split("")), e = 0; e < d.length; e++) {
	          var f = d[e];void 0 === $f[f] && ($f[f] = e);
	        }
	      }
	    }
	  };function dg(a) {
	    var b = eg(a);if (!(b && b.sub && b.iss && b.aud && b.exp)) throw Error("Invalid JWT");this.g = a;this.c = b.exp;this.h = b.sub;ua();this.a = b.provider_id || b.firebase && b.firebase.sign_in_provider || null;this.f = b.firebase && b.firebase.tenant || null;this.b = !!b.is_anonymous || "anonymous" == this.a;
	  }dg.prototype.S = function () {
	    return this.f;
	  };dg.prototype.i = function () {
	    return this.b;
	  };dg.prototype.toString = function () {
	    return this.g;
	  };function fg(a) {
	    try {
	      return new dg(a);
	    } catch (b) {
	      return null;
	    }
	  }
	  function eg(a) {
	    if (!a) return null;a = a.split(".");if (3 != a.length) return null;a = a[1];for (var b = (4 - a.length % 4) % 4, c = 0; c < b; c++) {
	      a += ".";
	    }try {
	      return JSON.parse(ag(a));
	    } catch (d) {}return null;
	  };var gg = "oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),
	      hg = ["client_id", "response_type", "scope", "redirect_uri", "state"],
	      ig = { md: { Ja: "locale", ua: 700, ta: 600, fa: "facebook.com", Wa: hg }, od: { Ja: null, ua: 500, ta: 750, fa: "github.com", Wa: hg }, pd: { Ja: "hl", ua: 515, ta: 680, fa: "google.com", Wa: hg }, vd: { Ja: "lang", ua: 485, ta: 705, fa: "twitter.com", Wa: gg }, jd: { Ja: "locale", ua: 640, ta: 600, fa: "apple.com", Wa: [] } };
	  function jg(a) {
	    for (var b in ig) {
	      if (ig[b].fa == a) return ig[b];
	    }return null;
	  };function kg(a) {
	    var b = {};b["facebook.com"] = lg;b["google.com"] = mg;b["github.com"] = ng;b["twitter.com"] = og;var c = a && a[pg];try {
	      if (c) return b[c] ? new b[c](a) : new qg(a);if ("undefined" !== typeof a[rg]) return new sg(a);
	    } catch (d) {}return null;
	  }var rg = "idToken",
	      pg = "providerId";
	  function sg(a) {
	    var b = a[pg];if (!b && a[rg]) {
	      var c = fg(a[rg]);c && c.a && (b = c.a);
	    }if (!b) throw Error("Invalid additional user info!");if ("anonymous" == b || "custom" == b) b = null;c = !1;"undefined" !== typeof a.isNewUser ? c = !!a.isNewUser : "identitytoolkit#SignupNewUserResponse" === a.kind && (c = !0);M(this, "providerId", b);M(this, "isNewUser", c);
	  }function qg(a) {
	    sg.call(this, a);a = Re(a.rawUserInfo || "{}");M(this, "profile", jf(a || {}));
	  }r(qg, sg);
	  function lg(a) {
	    qg.call(this, a);if ("facebook.com" != this.providerId) throw Error("Invalid provider ID!");
	  }r(lg, qg);function ng(a) {
	    qg.call(this, a);if ("github.com" != this.providerId) throw Error("Invalid provider ID!");M(this, "username", this.profile && this.profile.login || null);
	  }r(ng, qg);function mg(a) {
	    qg.call(this, a);if ("google.com" != this.providerId) throw Error("Invalid provider ID!");
	  }r(mg, qg);
	  function og(a) {
	    qg.call(this, a);if ("twitter.com" != this.providerId) throw Error("Invalid provider ID!");M(this, "username", a.screenName || null);
	  }r(og, qg);function tg(a) {
	    var b = J(a),
	        c = Xd(b, "link"),
	        d = Xd(J(c), "link");b = Xd(b, "deep_link_id");return Xd(J(b), "link") || b || d || c || a;
	  };function ug(a, b) {
	    if (!a && !b) throw new t("internal-error", "Internal assert: no raw session string available");if (a && b) throw new t("internal-error", "Internal assert: unable to determine the session type");this.a = a || null;this.b = b || null;this.type = this.a ? vg : wg;
	  }var vg = "enroll",
	      wg = "signin";ug.prototype.Ha = function () {
	    return this.a ? D(this.a) : D(this.b);
	  };ug.prototype.w = function () {
	    return this.type == vg ? { multiFactorSession: { idToken: this.a } } : { multiFactorSession: { pendingCredential: this.b } };
	  };function xg() {}xg.prototype.ja = function () {};xg.prototype.b = function () {};xg.prototype.c = function () {};xg.prototype.w = function () {};function yg(a, b) {
	    return a.then(function (c) {
	      if (c[zg]) {
	        var d = fg(c[zg]);if (!d || b != d.h) throw new t("user-mismatch");return c;
	      }throw new t("user-mismatch");
	    }).s(function (c) {
	      throw c && c.code && c.code == va + "user-not-found" ? new t("user-mismatch") : c;
	    });
	  }
	  function Ag(a, b) {
	    if (b) this.a = b;else throw new t("internal-error", "failed to construct a credential");M(this, "providerId", a);M(this, "signInMethod", a);
	  }Ag.prototype.ja = function (a) {
	    return Bg(a, Cg(this));
	  };Ag.prototype.b = function (a, b) {
	    var c = Cg(this);c.idToken = b;return Dg(a, c);
	  };Ag.prototype.c = function (a, b) {
	    return yg(Eg(a, Cg(this)), b);
	  };function Cg(a) {
	    return { pendingToken: a.a, requestUri: "http://localhost" };
	  }Ag.prototype.w = function () {
	    return { providerId: this.providerId, signInMethod: this.signInMethod, pendingToken: this.a };
	  };
	  function Fg(a) {
	    if (a && a.providerId && a.signInMethod && 0 == a.providerId.indexOf("saml.") && a.pendingToken) try {
	      return new Ag(a.providerId, a.pendingToken);
	    } catch (b) {}return null;
	  }
	  function Gg(a, b, c) {
	    this.a = null;if (b.idToken || b.accessToken) b.idToken && M(this, "idToken", b.idToken), b.accessToken && M(this, "accessToken", b.accessToken), b.nonce && !b.pendingToken && M(this, "nonce", b.nonce), b.pendingToken && (this.a = b.pendingToken);else if (b.oauthToken && b.oauthTokenSecret) M(this, "accessToken", b.oauthToken), M(this, "secret", b.oauthTokenSecret);else throw new t("internal-error", "failed to construct a credential");M(this, "providerId", a);M(this, "signInMethod", c);
	  }
	  Gg.prototype.ja = function (a) {
	    return Bg(a, Hg(this));
	  };Gg.prototype.b = function (a, b) {
	    var c = Hg(this);c.idToken = b;return Dg(a, c);
	  };Gg.prototype.c = function (a, b) {
	    var c = Hg(this);return yg(Eg(a, c), b);
	  };
	  function Hg(a) {
	    var b = {};a.idToken && (b.id_token = a.idToken);a.accessToken && (b.access_token = a.accessToken);a.secret && (b.oauth_token_secret = a.secret);b.providerId = a.providerId;a.nonce && !a.a && (b.nonce = a.nonce);b = { postBody: ae(b).toString(), requestUri: "http://localhost" };a.a && (delete b.postBody, b.pendingToken = a.a);return b;
	  }
	  Gg.prototype.w = function () {
	    var a = { providerId: this.providerId, signInMethod: this.signInMethod };this.idToken && (a.oauthIdToken = this.idToken);this.accessToken && (a.oauthAccessToken = this.accessToken);this.secret && (a.oauthTokenSecret = this.secret);this.nonce && (a.nonce = this.nonce);this.a && (a.pendingToken = this.a);return a;
	  };
	  function Ig(a) {
	    if (a && a.providerId && a.signInMethod) {
	      var b = { idToken: a.oauthIdToken, accessToken: a.oauthTokenSecret ? null : a.oauthAccessToken, oauthTokenSecret: a.oauthTokenSecret, oauthToken: a.oauthTokenSecret && a.oauthAccessToken, nonce: a.nonce, pendingToken: a.pendingToken };try {
	        return new Gg(a.providerId, b, a.signInMethod);
	      } catch (c) {}
	    }return null;
	  }function Jg(a, b) {
	    this.Pc = b || [];N(this, { providerId: a, isOAuthProvider: !0 });this.Hb = {};this.ob = (jg(a) || {}).Ja || null;this.nb = null;
	  }
	  Jg.prototype.Ka = function (a) {
	    this.Hb = lb(a);return this;
	  };function Kg(a) {
	    if ("string" !== typeof a || 0 != a.indexOf("saml.")) throw new t("argument-error", 'SAML provider IDs must be prefixed with "saml."');Jg.call(this, a, []);
	  }r(Kg, Jg);function Lg(a) {
	    Jg.call(this, a, hg);this.a = [];
	  }r(Lg, Jg);Lg.prototype.Ca = function (a) {
	    Ta(this.a, a) || this.a.push(a);return this;
	  };Lg.prototype.Pb = function () {
	    return Xa(this.a);
	  };
	  Lg.prototype.credential = function (a, b) {
	    var c;n(a) ? c = { idToken: a.idToken || null, accessToken: a.accessToken || null, nonce: a.rawNonce || null } : c = { idToken: a || null, accessToken: b || null };if (!c.idToken && !c.accessToken) throw new t("argument-error", "credential failed: must provide the ID token and/or the access token.");return new Gg(this.providerId, c, this.providerId);
	  };function Mg() {
	    Lg.call(this, "facebook.com");
	  }r(Mg, Lg);M(Mg, "PROVIDER_ID", "facebook.com");M(Mg, "FACEBOOK_SIGN_IN_METHOD", "facebook.com");
	  function Ng(a) {
	    if (!a) throw new t("argument-error", "credential failed: expected 1 argument (the OAuth access token).");var b = a;n(a) && (b = a.accessToken);return new Mg().credential({ accessToken: b });
	  }function Og() {
	    Lg.call(this, "github.com");
	  }r(Og, Lg);M(Og, "PROVIDER_ID", "github.com");M(Og, "GITHUB_SIGN_IN_METHOD", "github.com");
	  function Pg(a) {
	    if (!a) throw new t("argument-error", "credential failed: expected 1 argument (the OAuth access token).");var b = a;n(a) && (b = a.accessToken);return new Og().credential({ accessToken: b });
	  }function Qg() {
	    Lg.call(this, "google.com");this.Ca("profile");
	  }r(Qg, Lg);M(Qg, "PROVIDER_ID", "google.com");M(Qg, "GOOGLE_SIGN_IN_METHOD", "google.com");function Rg(a, b) {
	    var c = a;n(a) && (c = a.idToken, b = a.accessToken);return new Qg().credential({ idToken: c, accessToken: b });
	  }function Sg() {
	    Jg.call(this, "twitter.com", gg);
	  }
	  r(Sg, Jg);M(Sg, "PROVIDER_ID", "twitter.com");M(Sg, "TWITTER_SIGN_IN_METHOD", "twitter.com");function Tg(a, b) {
	    var c = a;n(c) || (c = { oauthToken: a, oauthTokenSecret: b });if (!c.oauthToken || !c.oauthTokenSecret) throw new t("argument-error", "credential failed: expected 2 arguments (the OAuth access token and secret).");return new Gg("twitter.com", c, "twitter.com");
	  }
	  function Ug(a, b, c) {
	    this.a = a;this.f = b;M(this, "providerId", "password");M(this, "signInMethod", c === Vg.EMAIL_LINK_SIGN_IN_METHOD ? Vg.EMAIL_LINK_SIGN_IN_METHOD : Vg.EMAIL_PASSWORD_SIGN_IN_METHOD);
	  }Ug.prototype.ja = function (a) {
	    return this.signInMethod == Vg.EMAIL_LINK_SIGN_IN_METHOD ? O(a, Wg, { email: this.a, oobCode: this.f }) : O(a, Xg, { email: this.a, password: this.f });
	  };
	  Ug.prototype.b = function (a, b) {
	    return this.signInMethod == Vg.EMAIL_LINK_SIGN_IN_METHOD ? O(a, Yg, { idToken: b, email: this.a, oobCode: this.f }) : O(a, Zg, { idToken: b, email: this.a, password: this.f });
	  };Ug.prototype.c = function (a, b) {
	    return yg(this.ja(a), b);
	  };Ug.prototype.w = function () {
	    return { email: this.a, password: this.f, signInMethod: this.signInMethod };
	  };function $g(a) {
	    return a && a.email && a.password ? new Ug(a.email, a.password, a.signInMethod) : null;
	  }function Vg() {
	    N(this, { providerId: "password", isOAuthProvider: !1 });
	  }
	  function ah(a, b) {
	    b = bh(b);if (!b) throw new t("argument-error", "Invalid email link!");return new Ug(a, b.code, Vg.EMAIL_LINK_SIGN_IN_METHOD);
	  }function bh(a) {
	    a = tg(a);return (a = Nf(a)) && a.operation === wf ? a : null;
	  }N(Vg, { PROVIDER_ID: "password" });N(Vg, { EMAIL_LINK_SIGN_IN_METHOD: "emailLink" });N(Vg, { EMAIL_PASSWORD_SIGN_IN_METHOD: "password" });function ch(a) {
	    if (!(a.cb && a.bb || a.La && a.ea)) throw new t("internal-error");this.a = a;M(this, "providerId", "phone");this.fa = "phone";M(this, "signInMethod", "phone");
	  }
	  ch.prototype.ja = function (a) {
	    return a.eb(dh(this));
	  };ch.prototype.b = function (a, b) {
	    var c = dh(this);c.idToken = b;return O(a, eh, c);
	  };ch.prototype.c = function (a, b) {
	    var c = dh(this);c.operation = "REAUTH";a = O(a, fh, c);return yg(a, b);
	  };ch.prototype.w = function () {
	    var a = { providerId: "phone" };this.a.cb && (a.verificationId = this.a.cb);this.a.bb && (a.verificationCode = this.a.bb);this.a.La && (a.temporaryProof = this.a.La);this.a.ea && (a.phoneNumber = this.a.ea);return a;
	  };
	  function gh(a) {
	    if (a && "phone" === a.providerId && (a.verificationId && a.verificationCode || a.temporaryProof && a.phoneNumber)) {
	      var b = {};w(["verificationId", "verificationCode", "temporaryProof", "phoneNumber"], function (c) {
	        a[c] && (b[c] = a[c]);
	      });return new ch(b);
	    }return null;
	  }function dh(a) {
	    return a.a.La && a.a.ea ? { temporaryProof: a.a.La, phoneNumber: a.a.ea } : { sessionInfo: a.a.cb, code: a.a.bb };
	  }
	  function hh(a) {
	    try {
	      this.a = a || firebase.auth();
	    } catch (b) {
	      throw new t("argument-error", "Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");
	    }N(this, { providerId: "phone", isOAuthProvider: !1 });
	  }
	  hh.prototype.eb = function (a, b) {
	    var c = this.a.a;return D(b.verify()).then(function (d) {
	      if ("string" !== typeof d) throw new t("argument-error", "An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");switch (b.type) {case "recaptcha":
	          var e = n(a) ? a.session : null,
	              f = n(a) ? a.phoneNumber : a,
	              g;e && e.type == vg ? g = e.Ha().then(function (h) {
	            return ih(c, { idToken: h, phoneEnrollmentInfo: { phoneNumber: f, recaptchaToken: d } });
	          }) : e && e.type == wg ? g = e.Ha().then(function (h) {
	            return jh(c, { mfaPendingCredential: h, mfaEnrollmentId: a.multiFactorHint && a.multiFactorHint.uid || a.multiFactorUid, phoneSignInInfo: { recaptchaToken: d } });
	          }) : g = kh(c, { phoneNumber: f, recaptchaToken: d });return g.then(function (h) {
	            "function" === typeof b.reset && b.reset();return h;
	          }, function (h) {
	            "function" === typeof b.reset && b.reset();throw h;
	          });default:
	          throw new t("argument-error", 'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');}
	    });
	  };
	  function lh(a, b) {
	    if (!a) throw new t("missing-verification-id");if (!b) throw new t("missing-verification-code");return new ch({ cb: a, bb: b });
	  }N(hh, { PROVIDER_ID: "phone" });N(hh, { PHONE_SIGN_IN_METHOD: "phone" });
	  function mh(a) {
	    if (a.temporaryProof && a.phoneNumber) return new ch({ La: a.temporaryProof, ea: a.phoneNumber });var b = a && a.providerId;if (!b || "password" === b) return null;var c = a && a.oauthAccessToken,
	        d = a && a.oauthTokenSecret,
	        e = a && a.nonce,
	        f = a && a.oauthIdToken,
	        g = a && a.pendingToken;try {
	      switch (b) {case "google.com":
	          return Rg(f, c);case "facebook.com":
	          return Ng(c);case "github.com":
	          return Pg(c);case "twitter.com":
	          return Tg(c, d);default:
	          return c || d || f || g ? g ? 0 == b.indexOf("saml.") ? new Ag(b, g) : new Gg(b, { pendingToken: g, idToken: a.oauthIdToken,
	            accessToken: a.oauthAccessToken }, b) : new Lg(b).credential({ idToken: f, accessToken: c, rawNonce: e }) : null;}
	    } catch (h) {
	      return null;
	    }
	  }function nh(a) {
	    if (!a.isOAuthProvider) throw new t("invalid-oauth-provider");
	  };function oh(a, b, c, d, e, f, g) {
	    this.c = a;this.b = b || null;this.g = c || null;this.f = d || null;this.i = f || null;this.h = g || null;this.a = e || null;if (this.g || this.a) {
	      if (this.g && this.a) throw new t("invalid-auth-event");if (this.g && !this.f) throw new t("invalid-auth-event");
	    } else throw new t("invalid-auth-event");
	  }oh.prototype.getUid = function () {
	    var a = [];a.push(this.c);this.b && a.push(this.b);this.f && a.push(this.f);this.h && a.push(this.h);return a.join("-");
	  };oh.prototype.S = function () {
	    return this.h;
	  };
	  oh.prototype.w = function () {
	    return { type: this.c, eventId: this.b, urlResponse: this.g, sessionId: this.f, postBody: this.i, tenantId: this.h, error: this.a && this.a.w() };
	  };function ph(a) {
	    a = a || {};return a.type ? new oh(a.type, a.eventId, a.urlResponse, a.sessionId, a.error && ya(a.error), a.postBody, a.tenantId) : null;
	  }; /*
	     Copyright 2018 Google Inc.
	     Licensed under the Apache License, Version 2.0 (the "License");
	     you may not use this file except in compliance with the License.
	     You may obtain a copy of the License at
	     http://www.apache.org/licenses/LICENSE-2.0
	     Unless required by applicable law or agreed to in writing, software
	     distributed under the License is distributed on an "AS IS" BASIS,
	     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     See the License for the specific language governing permissions and
	     limitations under the License.
	     */
	  function qh() {
	    this.b = null;this.a = [];
	  }var rh = null;function sh(a) {
	    var b = rh;b.a.push(a);b.b || (b.b = function (c) {
	      for (var d = 0; d < b.a.length; d++) {
	        b.a[d](c);
	      }
	    }, a = L("universalLinks.subscribe", l), "function" === typeof a && a(null, b.b));
	  };function th(a) {
	    var b = "unauthorized-domain",
	        c = void 0,
	        d = J(a);a = d.a;d = d.f;"chrome-extension" == d ? c = Nb("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : "http" == d || "https" == d ? c = Nb("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : b = "operation-not-supported-in-this-environment";
	    t.call(this, b, c);
	  }r(th, t);function uh(a, b, c) {
	    t.call(this, a, c);a = b || {};a.Ib && M(this, "email", a.Ib);a.ea && M(this, "phoneNumber", a.ea);a.credential && M(this, "credential", a.credential);a.Yb && M(this, "tenantId", a.Yb);
	  }r(uh, t);uh.prototype.w = function () {
	    var a = { code: this.code, message: this.message };this.email && (a.email = this.email);this.phoneNumber && (a.phoneNumber = this.phoneNumber);this.tenantId && (a.tenantId = this.tenantId);var b = this.credential && this.credential.w();b && z(a, b);return a;
	  };uh.prototype.toJSON = function () {
	    return this.w();
	  };
	  function vh(a) {
	    if (a.code) {
	      var b = a.code || "";0 == b.indexOf(va) && (b = b.substring(va.length));var c = { credential: mh(a), Yb: a.tenantId };if (a.email) c.Ib = a.email;else if (a.phoneNumber) c.ea = a.phoneNumber;else if (!c.credential) return new t(b, a.message || void 0);return new uh(b, c, a.message);
	    }return null;
	  };function wh() {}wh.prototype.c = null;function xh(a) {
	    return a.c || (a.c = a.b());
	  };var yh;function zh() {}r(zh, wh);zh.prototype.a = function () {
	    var a = Ah(this);return a ? new ActiveXObject(a) : new XMLHttpRequest();
	  };zh.prototype.b = function () {
	    var a = {};Ah(this) && (a[0] = !0, a[1] = !0);return a;
	  };
	  function Ah(a) {
	    if (!a.f && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
	      for (var b = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], c = 0; c < b.length; c++) {
	        var d = b[c];try {
	          return new ActiveXObject(d), a.f = d;
	        } catch (e) {}
	      }throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
	    }return a.f;
	  }yh = new zh();function Bh() {}r(Bh, wh);Bh.prototype.a = function () {
	    var a = new XMLHttpRequest();if ("withCredentials" in a) return a;if ("undefined" != typeof XDomainRequest) return new Ch();throw Error("Unsupported browser");
	  };Bh.prototype.b = function () {
	    return {};
	  };
	  function Ch() {
	    this.a = new XDomainRequest();this.readyState = 0;this.onreadystatechange = null;this.responseType = this.responseText = this.response = "";this.status = -1;this.statusText = "";this.a.onload = q(this.pc, this);this.a.onerror = q(this.Rb, this);this.a.onprogress = q(this.qc, this);this.a.ontimeout = q(this.uc, this);
	  }k = Ch.prototype;k.open = function (a, b, c) {
	    if (null != c && !c) throw Error("Only async requests are supported.");this.a.open(a, b);
	  };
	  k.send = function (a) {
	    if (a) {
	      if ("string" == typeof a) this.a.send(a);else throw Error("Only string data is supported");
	    } else this.a.send();
	  };k.abort = function () {
	    this.a.abort();
	  };k.setRequestHeader = function () {};k.getResponseHeader = function (a) {
	    return "content-type" == a.toLowerCase() ? this.a.contentType : "";
	  };k.pc = function () {
	    this.status = 200;this.response = this.responseText = this.a.responseText;Dh(this, 4);
	  };k.Rb = function () {
	    this.status = 500;this.response = this.responseText = "";Dh(this, 4);
	  };k.uc = function () {
	    this.Rb();
	  };
	  k.qc = function () {
	    this.status = 200;Dh(this, 1);
	  };function Dh(a, b) {
	    a.readyState = b;if (a.onreadystatechange) a.onreadystatechange();
	  }k.getAllResponseHeaders = function () {
	    return "content-type: " + this.a.contentType;
	  };function Eh(a, b, c) {
	    this.reset(a, b, c, void 0, void 0);
	  }Eh.prototype.a = null;var Fh = 0;Eh.prototype.reset = function (a, b, c, d, e) {
	    "number" == typeof e || Fh++;d || ua();delete this.a;
	  };function Gh(a) {
	    this.f = a;this.b = this.c = this.a = null;
	  }function Hh(a, b) {
	    this.name = a;this.value = b;
	  }Hh.prototype.toString = function () {
	    return this.name;
	  };var Ih = new Hh("SEVERE", 1E3),
	      Jh = new Hh("WARNING", 900),
	      Kh = new Hh("CONFIG", 700),
	      Lh = new Hh("FINE", 500);function Mh(a) {
	    if (a.c) return a.c;if (a.a) return Mh(a.a);Ea("Root logger has no level set.");return null;
	  }Gh.prototype.log = function (a, b, c) {
	    if (a.value >= Mh(this).value) for (na(b) && (b = b()), a = new Eh(a, String(b), this.f), c && (a.a = c), c = this; c;) {
	      c = c.a;
	    }
	  };var Nh = {},
	      Oh = null;
	  function Ph(a) {
	    Oh || (Oh = new Gh(""), Nh[""] = Oh, Oh.c = Kh);var b;if (!(b = Nh[a])) {
	      b = new Gh(a);var c = a.lastIndexOf("."),
	          d = a.substr(c + 1);c = Ph(a.substr(0, c));c.b || (c.b = {});c.b[d] = b;b.a = c;Nh[a] = b;
	    }return b;
	  };function Qh(a, b) {
	    a && a.log(Lh, b, void 0);
	  };function Rh(a) {
	    this.f = a;
	  }r(Rh, wh);Rh.prototype.a = function () {
	    return new Sh(this.f);
	  };Rh.prototype.b = function (a) {
	    return function () {
	      return a;
	    };
	  }({});function Sh(a) {
	    H.call(this);this.o = a;this.readyState = Th;this.status = 0;this.responseType = this.responseText = this.response = this.statusText = "";this.onreadystatechange = null;this.i = new Headers();this.b = null;this.m = "GET";this.g = "";this.a = !1;this.h = Ph("goog.net.FetchXmlHttp");this.l = this.c = this.f = null;
	  }r(Sh, H);var Th = 0;k = Sh.prototype;
	  k.open = function (a, b) {
	    if (this.readyState != Th) throw this.abort(), Error("Error reopening a connection");this.m = a;this.g = b;this.readyState = 1;Uh(this);
	  };k.send = function (a) {
	    if (1 != this.readyState) throw this.abort(), Error("need to call open() first. ");this.a = !0;var b = { headers: this.i, method: this.m, credentials: void 0, cache: void 0 };a && (b.body = a);this.o.fetch(new Request(this.g, b)).then(this.tc.bind(this), this.Ta.bind(this));
	  };
	  k.abort = function () {
	    this.response = this.responseText = "";this.i = new Headers();this.status = 0;this.c && this.c.cancel("Request was aborted.");1 <= this.readyState && this.a && 4 != this.readyState && (this.a = !1, Vh(this, !1));this.readyState = Th;
	  };
	  k.tc = function (a) {
	    this.a && (this.f = a, this.b || (this.b = a.headers, this.readyState = 2, Uh(this)), this.a && (this.readyState = 3, Uh(this), this.a && ("arraybuffer" === this.responseType ? a.arrayBuffer().then(this.rc.bind(this), this.Ta.bind(this)) : "undefined" !== typeof l.ReadableStream && "body" in a ? (this.response = this.responseText = "", this.c = a.body.getReader(), this.l = new TextDecoder(), Wh(this)) : a.text().then(this.sc.bind(this), this.Ta.bind(this)))));
	  };function Wh(a) {
	    a.c.read().then(a.oc.bind(a)).catch(a.Ta.bind(a));
	  }
	  k.oc = function (a) {
	    if (this.a) {
	      var b = this.l.decode(a.value ? a.value : new Uint8Array(0), { stream: !a.done });b && (this.response = this.responseText += b);a.done ? Vh(this, !0) : Uh(this);3 == this.readyState && Wh(this);
	    }
	  };k.sc = function (a) {
	    this.a && (this.response = this.responseText = a, Vh(this, !0));
	  };k.rc = function (a) {
	    this.a && (this.response = a, Vh(this, !0));
	  };k.Ta = function (a) {
	    var b = this.h;b && b.log(Jh, "Failed to fetch url " + this.g, a instanceof Error ? a : Error(a));this.a && Vh(this, !0);
	  };
	  function Vh(a, b) {
	    b && a.f && (a.status = a.f.status, a.statusText = a.f.statusText);a.readyState = 4;a.f = null;a.c = null;a.l = null;Uh(a);
	  }k.setRequestHeader = function (a, b) {
	    this.i.append(a, b);
	  };k.getResponseHeader = function (a) {
	    return this.b ? this.b.get(a.toLowerCase()) || "" : ((a = this.h) && a.log(Jh, "Attempting to get response header but no headers have been received for url: " + this.g, void 0), "");
	  };
	  k.getAllResponseHeaders = function () {
	    if (!this.b) {
	      var a = this.h;a && a.log(Jh, "Attempting to get all response headers but no headers have been received for url: " + this.g, void 0);return "";
	    }a = [];for (var b = this.b.entries(), c = b.next(); !c.done;) {
	      c = c.value, a.push(c[0] + ": " + c[1]), c = b.next();
	    }return a.join("\r\n");
	  };function Uh(a) {
	    a.onreadystatechange && a.onreadystatechange.call(a);
	  };function Xh(a) {
	    H.call(this);this.headers = new Ed();this.O = a || null;this.c = !1;this.A = this.a = null;this.h = this.P = this.l = "";this.f = this.N = this.i = this.G = !1;this.g = 0;this.o = null;this.m = Yh;this.u = this.R = !1;
	  }r(Xh, H);var Yh = "";Xh.prototype.b = Ph("goog.net.XhrIo");var Zh = /^https?$/i,
	      $h = ["POST", "PUT"];
	  function ai(a, b, c, d, e) {
	    if (a.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + a.l + "; newUri=" + b);c = c ? c.toUpperCase() : "GET";a.l = b;a.h = "";a.P = c;a.G = !1;a.c = !0;a.a = a.O ? a.O.a() : yh.a();a.A = a.O ? xh(a.O) : xh(yh);a.a.onreadystatechange = q(a.Ub, a);try {
	      Qh(a.b, bi(a, "Opening Xhr")), a.N = !0, a.a.open(c, String(b), !0), a.N = !1;
	    } catch (g) {
	      Qh(a.b, bi(a, "Error opening Xhr: " + g.message));ci(a, g);return;
	    }b = d || "";var f = new Ed(a.headers);e && Dd(e, function (g, h) {
	      f.set(h, g);
	    });e = Ra(f.Y());d = l.FormData && b instanceof l.FormData;!Ta($h, c) || e || d || f.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");f.forEach(function (g, h) {
	      this.a.setRequestHeader(h, g);
	    }, a);a.m && (a.a.responseType = a.m);"withCredentials" in a.a && a.a.withCredentials !== a.R && (a.a.withCredentials = a.R);try {
	      di(a), 0 < a.g && (a.u = ei(a.a), Qh(a.b, bi(a, "Will abort after " + a.g + "ms if incomplete, xhr2 " + a.u)), a.u ? (a.a.timeout = a.g, a.a.ontimeout = q(a.Ma, a)) : a.o = zd(a.Ma, a.g, a)), Qh(a.b, bi(a, "Sending request")), a.i = !0, a.a.send(b), a.i = !1;
	    } catch (g) {
	      Qh(a.b, bi(a, "Send error: " + g.message)), ci(a, g);
	    }
	  }function ei(a) {
	    return Tb && cc(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout;
	  }function Sa(a) {
	    return "content-type" == a.toLowerCase();
	  }k = Xh.prototype;k.Ma = function () {
	    "undefined" != typeof ha && this.a && (this.h = "Timed out after " + this.g + "ms, aborting", Qh(this.b, bi(this, this.h)), this.dispatchEvent("timeout"), this.abort(8));
	  };function ci(a, b) {
	    a.c = !1;a.a && (a.f = !0, a.a.abort(), a.f = !1);a.h = b;fi(a);gi(a);
	  }
	  function fi(a) {
	    a.G || (a.G = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
	  }k.abort = function () {
	    this.a && this.c && (Qh(this.b, bi(this, "Aborting")), this.c = !1, this.f = !0, this.a.abort(), this.f = !1, this.dispatchEvent("complete"), this.dispatchEvent("abort"), gi(this));
	  };k.Da = function () {
	    this.a && (this.c && (this.c = !1, this.f = !0, this.a.abort(), this.f = !1), gi(this, !0));Xh.$a.Da.call(this);
	  };k.Ub = function () {
	    this.xa || (this.N || this.i || this.f ? hi(this) : this.Ic());
	  };k.Ic = function () {
	    hi(this);
	  };
	  function hi(a) {
	    if (a.c && "undefined" != typeof ha) if (a.A[1] && 4 == ii(a) && 2 == ji(a)) Qh(a.b, bi(a, "Local request error detected and ignored"));else if (a.i && 4 == ii(a)) zd(a.Ub, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == ii(a)) {
	      Qh(a.b, bi(a, "Request complete"));a.c = !1;try {
	        var b = ji(a);a: switch (b) {case 200:case 201:case 202:case 204:case 206:case 304:case 1223:
	            var c = !0;break a;default:
	            c = !1;}var d;if (!(d = c)) {
	          var e;if (e = 0 === b) {
	            var f = String(a.l).match(Hd)[1] || null;if (!f && l.self && l.self.location) {
	              var g = l.self.location.protocol;
	              f = g.substr(0, g.length - 1);
	            }e = !Zh.test(f ? f.toLowerCase() : "");
	          }d = e;
	        }if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
	          try {
	            var h = 2 < ii(a) ? a.a.statusText : "";
	          } catch (m) {
	            Qh(a.b, "Can not get status: " + m.message), h = "";
	          }a.h = h + " [" + ji(a) + "]";fi(a);
	        }
	      } finally {
	        gi(a);
	      }
	    }
	  }function gi(a, b) {
	    if (a.a) {
	      di(a);var c = a.a,
	          d = a.A[0] ? ka : null;a.a = null;a.A = null;b || a.dispatchEvent("ready");try {
	        c.onreadystatechange = d;
	      } catch (e) {
	        (a = a.b) && a.log(Ih, "Problem encountered resetting onreadystatechange: " + e.message, void 0);
	      }
	    }
	  }
	  function di(a) {
	    a.a && a.u && (a.a.ontimeout = null);a.o && (l.clearTimeout(a.o), a.o = null);
	  }function ii(a) {
	    return a.a ? a.a.readyState : 0;
	  }function ji(a) {
	    try {
	      return 2 < ii(a) ? a.a.status : -1;
	    } catch (b) {
	      return -1;
	    }
	  }function ki(a) {
	    try {
	      return a.a ? a.a.responseText : "";
	    } catch (b) {
	      return Qh(a.b, "Can not get responseText: " + b.message), "";
	    }
	  }
	  k.getResponse = function () {
	    try {
	      if (!this.a) return null;if ("response" in this.a) return this.a.response;switch (this.m) {case Yh:case "text":
	          return this.a.responseText;case "arraybuffer":
	          if ("mozResponseArrayBuffer" in this.a) return this.a.mozResponseArrayBuffer;}var a = this.b;a && a.log(Ih, "Response type " + this.m + " is not supported on this browser", void 0);return null;
	    } catch (b) {
	      return Qh(this.b, "Can not get response: " + b.message), null;
	    }
	  };function bi(a, b) {
	    return b + " [" + a.P + " " + a.l + " " + ji(a) + "]";
	  }; /*
	     Portions of this code are from MochiKit, received by
	     The Closure Authors under the MIT license. All other code is Copyright
	     2005-2009 The Closure Authors. All Rights Reserved.
	     */
	  function li(a) {
	    var b = mi;this.g = [];this.u = b;this.o = a || null;this.f = this.a = !1;this.c = void 0;this.m = this.A = this.i = !1;this.h = 0;this.b = null;this.l = 0;
	  }li.prototype.cancel = function (a) {
	    if (this.a) this.c instanceof li && this.c.cancel();else {
	      if (this.b) {
	        var b = this.b;delete this.b;a ? b.cancel(a) : (b.l--, 0 >= b.l && b.cancel());
	      }this.u ? this.u.call(this.o, this) : this.m = !0;this.a || (a = new ni(this), oi(this), pi(this, !1, a));
	    }
	  };li.prototype.v = function (a, b) {
	    this.i = !1;pi(this, a, b);
	  };function pi(a, b, c) {
	    a.a = !0;a.c = c;a.f = !b;qi(a);
	  }
	  function oi(a) {
	    if (a.a) {
	      if (!a.m) throw new ri(a);a.m = !1;
	    }
	  }function si(a, b) {
	    ti(a, null, b, void 0);
	  }function ti(a, b, c, d) {
	    a.g.push([b, c, d]);a.a && qi(a);
	  }li.prototype.then = function (a, b, c) {
	    var d,
	        e,
	        f = new C(function (g, h) {
	      d = g;e = h;
	    });ti(this, d, function (g) {
	      g instanceof ni ? f.cancel() : e(g);
	    });return f.then(a, b, c);
	  };li.prototype.$goog_Thenable = !0;function ui(a) {
	    return Qa(a.g, function (b) {
	      return na(b[1]);
	    });
	  }
	  function qi(a) {
	    if (a.h && a.a && ui(a)) {
	      var b = a.h,
	          c = vi[b];c && (l.clearTimeout(c.a), delete vi[b]);a.h = 0;
	    }a.b && (a.b.l--, delete a.b);b = a.c;for (var d = c = !1; a.g.length && !a.i;) {
	      var e = a.g.shift(),
	          f = e[0],
	          g = e[1];e = e[2];if (f = a.f ? g : f) try {
	        var h = f.call(e || a.o, b);void 0 !== h && (a.f = a.f && (h == b || h instanceof Error), a.c = b = h);if (Ca(b) || "function" === typeof l.Promise && b instanceof l.Promise) d = !0, a.i = !0;
	      } catch (m) {
	        b = m, a.f = !0, ui(a) || (c = !0);
	      }
	    }a.c = b;d && (h = q(a.v, a, !0), d = q(a.v, a, !1), b instanceof li ? (ti(b, h, d), b.A = !0) : b.then(h, d));c && (b = new wi(b), vi[b.a] = b, a.h = b.a);
	  }function ri() {
	    u.call(this);
	  }r(ri, u);ri.prototype.message = "Deferred has already fired";ri.prototype.name = "AlreadyCalledError";function ni() {
	    u.call(this);
	  }r(ni, u);ni.prototype.message = "Deferred was canceled";ni.prototype.name = "CanceledError";function wi(a) {
	    this.a = l.setTimeout(q(this.c, this), 0);this.b = a;
	  }wi.prototype.c = function () {
	    delete vi[this.a];throw this.b;
	  };var vi = {};function xi(a) {
	    var b = {},
	        c = b.document || document,
	        d = wb(a).toString(),
	        e = jc(document, "SCRIPT"),
	        f = { Vb: e, Ma: void 0 },
	        g = new li(f),
	        h = null,
	        m = null != b.timeout ? b.timeout : 5E3;0 < m && (h = window.setTimeout(function () {
	      yi(e, !0);var p = new zi(Ai, "Timeout reached for loading script " + d);oi(g);pi(g, !1, p);
	    }, m), f.Ma = h);e.onload = e.onreadystatechange = function () {
	      e.readyState && "loaded" != e.readyState && "complete" != e.readyState || (yi(e, b.wd || !1, h), oi(g), pi(g, !0, null));
	    };e.onerror = function () {
	      yi(e, !0, h);var p = new zi(Bi, "Error while loading script " + d);oi(g);pi(g, !1, p);
	    };f = b.attributes || {};z(f, { type: "text/javascript", charset: "UTF-8" });gc(e, f);Mb(e, a);Ci(c).appendChild(e);return g;
	  }function Ci(a) {
	    var b;return (b = (a || document).getElementsByTagName("HEAD")) && 0 != b.length ? b[0] : a.documentElement;
	  }function mi() {
	    if (this && this.Vb) {
	      var a = this.Vb;a && "SCRIPT" == a.tagName && yi(a, !0, this.Ma);
	    }
	  }
	  function yi(a, b, c) {
	    null != c && l.clearTimeout(c);a.onload = ka;a.onerror = ka;a.onreadystatechange = ka;b && window.setTimeout(function () {
	      a && a.parentNode && a.parentNode.removeChild(a);
	    }, 0);
	  }var Bi = 0,
	      Ai = 1;function zi(a, b) {
	    var c = "Jsloader error (code #" + a + ")";b && (c += ": " + b);u.call(this, c);this.code = a;
	  }r(zi, u);function Di(a) {
	    this.f = a;
	  }r(Di, wh);Di.prototype.a = function () {
	    return new this.f();
	  };Di.prototype.b = function () {
	    return {};
	  };
	  function Ei(a, b, c) {
	    this.c = a;a = b || {};this.l = a.secureTokenEndpoint || "https://securetoken.googleapis.com/v1/token";this.v = a.secureTokenTimeout || Fi;this.g = lb(a.secureTokenHeaders || Gi);this.h = a.firebaseEndpoint || "https://www.googleapis.com/identitytoolkit/v3/relyingparty/";this.i = a.identityPlatformEndpoint || "https://identitytoolkit.googleapis.com/v2/";this.m = a.firebaseTimeout || Hi;this.a = lb(a.firebaseHeaders || Ii);c && (this.a["X-Client-Version"] = c, this.g["X-Client-Version"] = c);c = "Node" == Fe();c = l.XMLHttpRequest || c && firebase.INTERNAL.node && firebase.INTERNAL.node.XMLHttpRequest;if (!c && !Ee()) throw new t("internal-error", "The XMLHttpRequest compatibility library was not found.");this.f = void 0;Ee() ? this.f = new Rh(self) : Ge() ? this.f = new Di(c) : this.f = new Bh();this.b = null;
	  }var Ji,
	      zg = "idToken",
	      Fi = new Ue(3E4, 6E4),
	      Gi = { "Content-Type": "application/x-www-form-urlencoded" },
	      Hi = new Ue(3E4, 6E4),
	      Ii = { "Content-Type": "application/json" };function Ki(a, b) {
	    b ? a.a["X-Firebase-Locale"] = b : delete a.a["X-Firebase-Locale"];
	  }
	  function Li(a, b) {
	    b && (a.l = Mi("https://securetoken.googleapis.com/v1/token", b), a.h = Mi("https://www.googleapis.com/identitytoolkit/v3/relyingparty/", b), a.i = Mi("https://identitytoolkit.googleapis.com/v2/", b));
	  }function Mi(a, b) {
	    a = J(a);b = J(b.url);a.c = a.a + a.c;Kd(a, b.f);a.a = b.a;Ld(a, b.g);return a.toString();
	  }function Ni(a, b) {
	    b ? (a.a["X-Client-Version"] = b, a.g["X-Client-Version"] = b) : (delete a.a["X-Client-Version"], delete a.g["X-Client-Version"]);
	  }Ei.prototype.S = function () {
	    return this.b;
	  };
	  function Oi(a, b, c, d, e, f, g) {
	    pe() || Ee() ? a = q(a.u, a) : (Ji || (Ji = new C(function (h, m) {
	      Pi(h, m);
	    })), a = q(a.o, a));a(b, c, d, e, f, g);
	  }
	  Ei.prototype.u = function (a, b, c, d, e, f) {
	    if (Ee() && ("undefined" === typeof l.fetch || "undefined" === typeof l.Headers || "undefined" === typeof l.Request)) throw new t("operation-not-supported-in-this-environment", "fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");var g = new Xh(this.f);if (f) {
	      g.g = Math.max(0, f);var h = setTimeout(function () {
	        g.dispatchEvent("timeout");
	      }, f);
	    }md(g, "complete", function () {
	      h && clearTimeout(h);var m = null;try {
	        m = JSON.parse(ki(this)) || null;
	      } catch (p) {
	        m = null;
	      }b && b(m);
	    });sd(g, "ready", function () {
	      h && clearTimeout(h);Tc(this);
	    });sd(g, "timeout", function () {
	      h && clearTimeout(h);Tc(this);b && b(null);
	    });ai(g, a, c, d, e);
	  };var Qi = new ob(pb, "https://apis.google.com/js/client.js?onload=%{onload}"),
	      Ri = "__fcb" + Math.floor(1E6 * Math.random()).toString();
	  function Pi(a, b) {
	    if (((window.gapi || {}).client || {}).request) a();else {
	      l[Ri] = function () {
	        ((window.gapi || {}).client || {}).request ? a() : b(Error("CORS_UNSUPPORTED"));
	      };var c = xb(Qi, { onload: Ri });si(xi(c), function () {
	        b(Error("CORS_UNSUPPORTED"));
	      });
	    }
	  }
	  Ei.prototype.o = function (a, b, c, d, e) {
	    var f = this;Ji.then(function () {
	      window.gapi.client.setApiKey(f.c);var g = window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({ path: a, method: c, body: d, headers: e, authType: "none", callback: function callback(h) {
	          window.gapi.auth.setToken(g);b && b(h);
	        } });
	    }).s(function (g) {
	      b && b({ error: { message: g && g.message || "CORS_UNSUPPORTED" } });
	    });
	  };
	  function Si(a, b) {
	    return new C(function (c, d) {
	      "refresh_token" == b.grant_type && b.refresh_token || "authorization_code" == b.grant_type && b.code ? Oi(a, a.l + "?key=" + encodeURIComponent(a.c), function (e) {
	        e ? e.error ? d(Ti(e)) : e.access_token && e.refresh_token ? c(e) : d(new t("internal-error")) : d(new t("network-request-failed"));
	      }, "POST", ae(b).toString(), a.g, a.v.get()) : d(new t("internal-error"));
	    });
	  }
	  function Ui(a, b, c, d, e, f, g) {
	    var h = J(b + c);I(h, "key", a.c);g && I(h, "cb", ua().toString());var m = "GET" == d;if (m) for (var p in e) {
	      e.hasOwnProperty(p) && I(h, p, e[p]);
	    }return new C(function (v, B) {
	      Oi(a, h.toString(), function (A) {
	        A ? A.error ? B(Ti(A, f || {})) : v(A) : B(new t("network-request-failed"));
	      }, d, m ? void 0 : fe(Qe(e)), a.a, a.m.get());
	    });
	  }function Vi(a) {
	    a = a.email;if ("string" !== typeof a || !ye.test(a)) throw new t("invalid-email");
	  }function Wi(a) {
	    "email" in a && Vi(a);
	  }
	  function Xi(a, b) {
	    return O(a, Yi, { identifier: b, continueUri: Ne() ? me() : "http://localhost" }).then(function (c) {
	      return c.signinMethods || [];
	    });
	  }function Zi(a) {
	    return O(a, $i, {}).then(function (b) {
	      return b.authorizedDomains || [];
	    });
	  }function P(a) {
	    if (!a[zg]) {
	      if (a.mfaPendingCredential) throw new t("multi-factor-auth-required", null, lb(a));throw new t("internal-error");
	    }
	  }
	  function aj(a) {
	    if (a.phoneNumber || a.temporaryProof) {
	      if (!a.phoneNumber || !a.temporaryProof) throw new t("internal-error");
	    } else {
	      if (!a.sessionInfo) throw new t("missing-verification-id");if (!a.code) throw new t("missing-verification-code");
	    }
	  }Ei.prototype.yb = function () {
	    return O(this, bj, {});
	  };Ei.prototype.Ab = function (a, b) {
	    return O(this, cj, { idToken: a, email: b });
	  };Ei.prototype.Bb = function (a, b) {
	    return O(this, Zg, { idToken: a, password: b });
	  };var dj = { displayName: "DISPLAY_NAME", photoUrl: "PHOTO_URL" };k = Ei.prototype;
	  k.Cb = function (a, b) {
	    var c = { idToken: a },
	        d = [];jb(dj, function (e, f) {
	      var g = b[f];null === g ? d.push(e) : f in b && (c[f] = g);
	    });d.length && (c.deleteAttribute = d);return O(this, cj, c);
	  };k.ub = function (a, b) {
	    a = { requestType: "PASSWORD_RESET", email: a };z(a, b);return O(this, ej, a);
	  };k.vb = function (a, b) {
	    a = { requestType: "EMAIL_SIGNIN", email: a };z(a, b);return O(this, fj, a);
	  };k.tb = function (a, b) {
	    a = { requestType: "VERIFY_EMAIL", idToken: a };z(a, b);return O(this, gj, a);
	  };
	  k.Db = function (a, b, c) {
	    a = { requestType: "VERIFY_AND_CHANGE_EMAIL", idToken: a, newEmail: b };z(a, c);return O(this, hj, a);
	  };function kh(a, b) {
	    return O(a, ij, b);
	  }k.eb = function (a) {
	    return O(this, jj, a);
	  };function ih(a, b) {
	    return O(a, kj, b).then(function (c) {
	      return c.phoneSessionInfo.sessionInfo;
	    });
	  }
	  function lj(a) {
	    if (!a.phoneVerificationInfo) throw new t("internal-error");if (!a.phoneVerificationInfo.sessionInfo) throw new t("missing-verification-id");if (!a.phoneVerificationInfo.code) throw new t("missing-verification-code");
	  }function jh(a, b) {
	    return O(a, mj, b).then(function (c) {
	      return c.phoneResponseInfo.sessionInfo;
	    });
	  }function nj(a, b, c) {
	    return O(a, oj, { idToken: b, deleteProvider: c });
	  }function pj(a) {
	    if (!a.requestUri || !a.sessionId && !a.postBody && !a.pendingToken) throw new t("internal-error");
	  }
	  function qj(a, b) {
	    b.oauthIdToken && b.providerId && 0 == b.providerId.indexOf("oidc.") && !b.pendingToken && (a.sessionId ? b.nonce = a.sessionId : a.postBody && (a = new Pd(a.postBody), ee(a, "nonce") && (b.nonce = a.get("nonce"))));return b;
	  }
	  function rj(a) {
	    var b = null;a.needConfirmation ? (a.code = "account-exists-with-different-credential", b = vh(a)) : "FEDERATED_USER_ID_ALREADY_LINKED" == a.errorMessage ? (a.code = "credential-already-in-use", b = vh(a)) : "EMAIL_EXISTS" == a.errorMessage ? (a.code = "email-already-in-use", b = vh(a)) : a.errorMessage && (b = sj(a.errorMessage));if (b) throw b;P(a);
	  }function Bg(a, b) {
	    b.returnIdpCredential = !0;return O(a, tj, b);
	  }function Dg(a, b) {
	    b.returnIdpCredential = !0;return O(a, uj, b);
	  }
	  function Eg(a, b) {
	    b.returnIdpCredential = !0;b.autoCreate = !1;return O(a, vj, b);
	  }function wj(a) {
	    if (!a.oobCode) throw new t("invalid-action-code");
	  }k.mb = function (a, b) {
	    return O(this, xj, { oobCode: a, newPassword: b });
	  };k.Qa = function (a) {
	    return O(this, yj, { oobCode: a });
	  };k.ib = function (a) {
	    return O(this, zj, { oobCode: a });
	  };
	  var zj = { endpoint: "setAccountInfo", B: wj, Z: "email", C: !0 },
	      yj = { endpoint: "resetPassword", B: wj, F: function F(a) {
	      var b = a.requestType;if (!b || !a.email && "EMAIL_SIGNIN" != b && "VERIFY_AND_CHANGE_EMAIL" != b) throw new t("internal-error");
	    }, C: !0 },
	      Aj = { endpoint: "signupNewUser", B: function B(a) {
	      Vi(a);if (!a.password) throw new t("weak-password");
	    }, F: P, U: !0, C: !0 },
	      Yi = { endpoint: "createAuthUri", C: !0 },
	      Bj = { endpoint: "deleteAccount", M: ["idToken"] },
	      oj = { endpoint: "setAccountInfo", M: ["idToken", "deleteProvider"], B: function B(a) {
	      if ("array" != la(a.deleteProvider)) throw new t("internal-error");
	    } },
	      Wg = { endpoint: "emailLinkSignin", M: ["email", "oobCode"], B: Vi, F: P, U: !0, C: !0 },
	      Yg = { endpoint: "emailLinkSignin", M: ["idToken", "email", "oobCode"], B: Vi, F: P, U: !0 },
	      Cj = { endpoint: "accounts/mfaEnrollment:finalize", M: ["idToken", "phoneVerificationInfo"], B: lj, F: P, C: !0, Na: !0 },
	      Dj = { endpoint: "accounts/mfaSignIn:finalize", M: ["mfaPendingCredential", "phoneVerificationInfo"], B: lj, F: P, C: !0, Na: !0 },
	      Ej = { endpoint: "getAccountInfo" },
	      fj = { endpoint: "getOobConfirmationCode", M: ["requestType"],
	    B: function B(a) {
	      if ("EMAIL_SIGNIN" != a.requestType) throw new t("internal-error");Vi(a);
	    }, Z: "email", C: !0 },
	      gj = { endpoint: "getOobConfirmationCode", M: ["idToken", "requestType"], B: function B(a) {
	      if ("VERIFY_EMAIL" != a.requestType) throw new t("internal-error");
	    }, Z: "email", C: !0 },
	      hj = { endpoint: "getOobConfirmationCode", M: ["idToken", "newEmail", "requestType"], B: function B(a) {
	      if ("VERIFY_AND_CHANGE_EMAIL" != a.requestType) throw new t("internal-error");
	    }, Z: "email", C: !0 },
	      ej = { endpoint: "getOobConfirmationCode", M: ["requestType"], B: function B(a) {
	      if ("PASSWORD_RESET" != a.requestType) throw new t("internal-error");Vi(a);
	    }, Z: "email", C: !0 },
	      $i = { kb: !0, endpoint: "getProjectConfig", Tb: "GET" },
	      Fj = { kb: !0, endpoint: "getRecaptchaParam", Tb: "GET", F: function F(a) {
	      if (!a.recaptchaSiteKey) throw new t("internal-error");
	    } },
	      xj = { endpoint: "resetPassword", B: wj, Z: "email", C: !0 },
	      ij = { endpoint: "sendVerificationCode", M: ["phoneNumber", "recaptchaToken"], Z: "sessionInfo", C: !0 },
	      cj = { endpoint: "setAccountInfo", M: ["idToken"], B: Wi, U: !0 },
	      Zg = { endpoint: "setAccountInfo", M: ["idToken"], B: function B(a) {
	      Wi(a);if (!a.password) throw new t("weak-password");
	    }, F: P, U: !0 },
	      bj = { endpoint: "signupNewUser", F: P, U: !0, C: !0 },
	      kj = { endpoint: "accounts/mfaEnrollment:start", M: ["idToken", "phoneEnrollmentInfo"], B: function B(a) {
	      if (!a.phoneEnrollmentInfo) throw new t("internal-error");if (!a.phoneEnrollmentInfo.phoneNumber) throw new t("missing-phone-number");if (!a.phoneEnrollmentInfo.recaptchaToken) throw new t("missing-app-credential");
	    }, F: function F(a) {
	      if (!a.phoneSessionInfo || !a.phoneSessionInfo.sessionInfo) throw new t("internal-error");
	    }, C: !0, Na: !0 },
	      mj = { endpoint: "accounts/mfaSignIn:start",
	    M: ["mfaPendingCredential", "mfaEnrollmentId", "phoneSignInInfo"], B: function B(a) {
	      if (!a.phoneSignInInfo || !a.phoneSignInInfo.recaptchaToken) throw new t("missing-app-credential");
	    }, F: function F(a) {
	      if (!a.phoneResponseInfo || !a.phoneResponseInfo.sessionInfo) throw new t("internal-error");
	    }, C: !0, Na: !0 },
	      tj = { endpoint: "verifyAssertion", B: pj, Xa: qj, F: rj, U: !0, C: !0 },
	      vj = { endpoint: "verifyAssertion", B: pj, Xa: qj, F: function F(a) {
	      if (a.errorMessage && "USER_NOT_FOUND" == a.errorMessage) throw new t("user-not-found");if (a.errorMessage) throw sj(a.errorMessage);
	      P(a);
	    }, U: !0, C: !0 },
	      uj = { endpoint: "verifyAssertion", B: function B(a) {
	      pj(a);if (!a.idToken) throw new t("internal-error");
	    }, Xa: qj, F: rj, U: !0 },
	      Gj = { endpoint: "verifyCustomToken", B: function B(a) {
	      if (!a.token) throw new t("invalid-custom-token");
	    }, F: P, U: !0, C: !0 },
	      Xg = { endpoint: "verifyPassword", B: function B(a) {
	      Vi(a);if (!a.password) throw new t("wrong-password");
	    }, F: P, U: !0, C: !0 },
	      jj = { endpoint: "verifyPhoneNumber", B: aj, F: P, C: !0 },
	      eh = { endpoint: "verifyPhoneNumber", B: function B(a) {
	      if (!a.idToken) throw new t("internal-error");aj(a);
	    },
	    F: function F(a) {
	      if (a.temporaryProof) throw a.code = "credential-already-in-use", vh(a);P(a);
	    } },
	      fh = { Gb: { USER_NOT_FOUND: "user-not-found" }, endpoint: "verifyPhoneNumber", B: aj, F: P, C: !0 },
	      Hj = { endpoint: "accounts/mfaEnrollment:withdraw", M: ["idToken", "mfaEnrollmentId"], F: function F(a) {
	      if (!!a[zg] ^ !!a.refreshToken) throw new t("internal-error");
	    }, C: !0, Na: !0 };
	  function O(a, b, c) {
	    if (!hf(c, b.M)) return E(new t("internal-error"));var d = !!b.Na,
	        e = b.Tb || "POST",
	        f;return D(c).then(b.B).then(function () {
	      b.U && (c.returnSecureToken = !0);b.C && a.b && "undefined" === typeof c.tenantId && (c.tenantId = a.b);return d ? Ui(a, a.i, b.endpoint, e, c, b.Gb, b.kb || !1) : Ui(a, a.h, b.endpoint, e, c, b.Gb, b.kb || !1);
	    }).then(function (g) {
	      f = g;return b.Xa ? b.Xa(c, f) : f;
	    }).then(b.F).then(function () {
	      if (!b.Z) return f;if (!(b.Z in f)) throw new t("internal-error");return f[b.Z];
	    });
	  }
	  function sj(a) {
	    return Ti({ error: { errors: [{ message: a }], code: 400, message: a } });
	  }
	  function Ti(a, b) {
	    var c = (a.error && a.error.errors && a.error.errors[0] || {}).reason || "";var d = { keyInvalid: "invalid-api-key", ipRefererBlocked: "app-not-authorized" };if (c = d[c] ? new t(d[c]) : null) return c;c = a.error && a.error.message || "";d = { INVALID_CUSTOM_TOKEN: "invalid-custom-token", CREDENTIAL_MISMATCH: "custom-token-mismatch", MISSING_CUSTOM_TOKEN: "internal-error", INVALID_IDENTIFIER: "invalid-email", MISSING_CONTINUE_URI: "internal-error", INVALID_EMAIL: "invalid-email", INVALID_PASSWORD: "wrong-password", USER_DISABLED: "user-disabled",
	      MISSING_PASSWORD: "internal-error", EMAIL_EXISTS: "email-already-in-use", PASSWORD_LOGIN_DISABLED: "operation-not-allowed", INVALID_IDP_RESPONSE: "invalid-credential", INVALID_PENDING_TOKEN: "invalid-credential", FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use", MISSING_OR_INVALID_NONCE: "missing-or-invalid-nonce", INVALID_MESSAGE_PAYLOAD: "invalid-message-payload", INVALID_RECIPIENT_EMAIL: "invalid-recipient-email", INVALID_SENDER: "invalid-sender", EMAIL_NOT_FOUND: "user-not-found", RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
	      EXPIRED_OOB_CODE: "expired-action-code", INVALID_OOB_CODE: "invalid-action-code", MISSING_OOB_CODE: "internal-error", INVALID_PROVIDER_ID: "invalid-provider-id", CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login", INVALID_ID_TOKEN: "invalid-user-token", TOKEN_EXPIRED: "user-token-expired", USER_NOT_FOUND: "user-token-expired", CORS_UNSUPPORTED: "cors-unsupported", DYNAMIC_LINK_NOT_ACTIVATED: "dynamic-link-not-activated", INVALID_APP_ID: "invalid-app-id", TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests", WEAK_PASSWORD: "weak-password",
	      OPERATION_NOT_ALLOWED: "operation-not-allowed", USER_CANCELLED: "user-cancelled", CAPTCHA_CHECK_FAILED: "captcha-check-failed", INVALID_APP_CREDENTIAL: "invalid-app-credential", INVALID_CODE: "invalid-verification-code", INVALID_PHONE_NUMBER: "invalid-phone-number", INVALID_SESSION_INFO: "invalid-verification-id", INVALID_TEMPORARY_PROOF: "invalid-credential", MISSING_APP_CREDENTIAL: "missing-app-credential", MISSING_CODE: "missing-verification-code", MISSING_PHONE_NUMBER: "missing-phone-number", MISSING_SESSION_INFO: "missing-verification-id",
	      QUOTA_EXCEEDED: "quota-exceeded", SESSION_EXPIRED: "code-expired", REJECTED_CREDENTIAL: "rejected-credential", INVALID_CONTINUE_URI: "invalid-continue-uri", MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name", MISSING_IOS_BUNDLE_ID: "missing-ios-bundle-id", UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri", INVALID_DYNAMIC_LINK_DOMAIN: "invalid-dynamic-link-domain", INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id", INVALID_CERT_HASH: "invalid-cert-hash", UNSUPPORTED_TENANT_OPERATION: "unsupported-tenant-operation",
	      INVALID_TENANT_ID: "invalid-tenant-id", TENANT_ID_MISMATCH: "tenant-id-mismatch", ADMIN_ONLY_OPERATION: "admin-restricted-operation", INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session", MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found", MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session", MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info", EMAIL_CHANGE_NEEDS_VERIFICATION: "email-change-needs-verification", SECOND_FACTOR_EXISTS: "second-factor-already-in-use", SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",
	      UNSUPPORTED_FIRST_FACTOR: "unsupported-first-factor", UNVERIFIED_EMAIL: "unverified-email" };z(d, b || {});b = (b = c.match(/^[^\s]+\s*:\s*([\s\S]*)$/)) && 1 < b.length ? b[1] : void 0;for (var e in d) {
	      if (0 === c.indexOf(e)) return new t(d[e], b);
	    }!b && a && (b = Pe(a));return new t("internal-error", b);
	  };function Ij(a) {
	    this.b = a;this.a = null;this.qb = Jj(this);
	  }
	  function Jj(a) {
	    return Kj().then(function () {
	      return new C(function (b, c) {
	        L("gapi.iframes.getContext")().open({ where: document.body, url: a.b, messageHandlersFilter: L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"), attributes: { style: { position: "absolute", top: "-100px", width: "1px", height: "1px" } }, dontclear: !0 }, function (d) {
	          function e() {
	            clearTimeout(f);b();
	          }a.a = d;a.a.restyle({ setHideOnLeave: !1 });var f = setTimeout(function () {
	            c(Error("Network Error"));
	          }, Lj.get());d.ping(e).then(e, function () {
	            c(Error("Network Error"));
	          });
	        });
	      });
	    });
	  }
	  function Mj(a, b) {
	    return a.qb.then(function () {
	      return new C(function (c) {
	        a.a.send(b.type, b, c, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
	      });
	    });
	  }function Nj(a, b) {
	    a.qb.then(function () {
	      a.a.register("authEvent", b, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
	    });
	  }var Oj = new ob(pb, "https://apis.google.com/js/api.js?onload=%{onload}"),
	      Pj = new Ue(3E4, 6E4),
	      Lj = new Ue(5E3, 15E3),
	      Qj = null;
	  function Kj() {
	    return Qj ? Qj : Qj = new C(function (a, b) {
	      function c() {
	        Te();L("gapi.load")("gapi.iframes", { callback: a, ontimeout: function ontimeout() {
	            Te();b(Error("Network Error"));
	          }, timeout: Pj.get() });
	      }if (L("gapi.iframes.Iframe")) a();else if (L("gapi.load")) c();else {
	        var d = "__iframefcb" + Math.floor(1E6 * Math.random()).toString();l[d] = function () {
	          L("gapi.load") ? c() : b(Error("Network Error"));
	        };d = xb(Oj, { onload: d });D(xi(d)).s(function () {
	          b(Error("Network Error"));
	        });
	      }
	    }).s(function (a) {
	      Qj = null;throw a;
	    });
	  };function Rj(a, b, c, d) {
	    this.l = a;this.h = b;this.i = c;this.g = d;this.f = null;this.g ? (a = J(this.g.url), a = Yd(a.f, a.a, a.g, "/emulator/auth/iframe")) : a = Yd("https", this.l, null, "/__/auth/iframe");this.a = a;I(this.a, "apiKey", this.h);I(this.a, "appName", this.i);this.b = null;this.c = [];
	  }Rj.prototype.toString = function () {
	    this.f ? I(this.a, "v", this.f) : de(this.a.b, "v");this.b ? I(this.a, "eid", this.b) : de(this.a.b, "eid");this.c.length ? I(this.a, "fw", this.c.join(",")) : de(this.a.b, "fw");return this.a.toString();
	  };
	  function Sj(a, b, c, d, e, f) {
	    this.u = a;this.o = b;this.c = c;this.v = d;this.m = f;this.i = this.g = this.l = null;this.a = e;this.h = this.f = null;
	  }Sj.prototype.xb = function (a) {
	    this.h = a;return this;
	  };
	  Sj.prototype.toString = function () {
	    if (this.m) {
	      var a = J(this.m.url);a = Yd(a.f, a.a, a.g, "/emulator/auth/handler");
	    } else a = Yd("https", this.u, null, "/__/auth/handler");I(a, "apiKey", this.o);I(a, "appName", this.c);I(a, "authType", this.v);if (this.a.isOAuthProvider) {
	      var b = this.a;try {
	        var c = firebase.app(this.c).auth().ka();
	      } catch (h) {
	        c = null;
	      }b.nb = c;I(a, "providerId", this.a.providerId);c = this.a;b = Qe(c.Hb);for (var d in b) {
	        b[d] = b[d].toString();
	      }d = c.Pc;b = lb(b);for (var e = 0; e < d.length; e++) {
	        var f = d[e];f in b && delete b[f];
	      }c.ob && c.nb && !b[c.ob] && (b[c.ob] = c.nb);kb(b) || I(a, "customParameters", Pe(b));
	    }"function" === typeof this.a.Pb && (c = this.a.Pb(), c.length && I(a, "scopes", c.join(",")));this.l ? I(a, "redirectUrl", this.l) : de(a.b, "redirectUrl");this.g ? I(a, "eventId", this.g) : de(a.b, "eventId");this.i ? I(a, "v", this.i) : de(a.b, "v");if (this.b) for (var g in this.b) {
	      this.b.hasOwnProperty(g) && !Xd(a, g) && I(a, g, this.b[g]);
	    }this.h ? I(a, "tid", this.h) : de(a.b, "tid");this.f ? I(a, "eid", this.f) : de(a.b, "eid");g = Tj(this.c);g.length && I(a, "fw", g.join(","));return a.toString();
	  };
	  function Tj(a) {
	    try {
	      return firebase.app(a).auth().Ga();
	    } catch (b) {
	      return [];
	    }
	  }function Uj(a, b, c, d, e, f) {
	    this.o = a;this.g = b;this.b = c;this.f = f;this.c = d || null;this.i = e || null;this.l = this.u = this.A = null;this.h = [];this.v = this.a = null;
	  }
	  function Vj(a) {
	    var b = me();return Zi(a).then(function (c) {
	      a: {
	        var d = J(b),
	            e = d.f;d = d.a;for (var f = 0; f < c.length; f++) {
	          var g = c[f];var h = d;var m = e;0 == g.indexOf("chrome-extension://") ? h = J(g).a == h && "chrome-extension" == m : "http" != m && "https" != m ? h = !1 : xe.test(g) ? h = h == g : (g = g.split(".").join("\\."), h = new RegExp("^(.+\\." + g + "|" + g + ")$", "i").test(h));if (h) {
	            c = !0;break a;
	          }
	        }c = !1;
	      }if (!c) throw new th(me());
	    });
	  }
	  function Wj(a) {
	    if (a.v) return a.v;a.v = ze().then(function () {
	      if (!a.u) {
	        var b = a.c,
	            c = a.i,
	            d = Tj(a.b),
	            e = new Rj(a.o, a.g, a.b, a.f);e.f = b;e.b = c;e.c = Xa(d || []);a.u = e.toString();
	      }a.m = new Ij(a.u);Xj(a);
	    });return a.v;
	  }k = Uj.prototype;k.Nb = function (a, b, c) {
	    var d = new t("popup-closed-by-user"),
	        e = new t("web-storage-unsupported"),
	        f = this,
	        g = !1;return this.la().then(function () {
	      Yj(f).then(function (h) {
	        h || (a && te(a), b(e), g = !0);
	      });
	    }).s(function () {}).then(function () {
	      if (!g) return we(a);
	    }).then(function () {
	      if (!g) return Ad(c).then(function () {
	        b(d);
	      });
	    });
	  };
	  k.Wb = function () {
	    var a = K();return !Oe(a) && !Se(a);
	  };k.Sb = function () {
	    return !1;
	  };
	  k.Lb = function (a, b, c, d, e, f, g, h) {
	    if (!a) return E(new t("popup-blocked"));if (g && !Oe()) return this.la().s(function (p) {
	      te(a);e(p);
	    }), d(), D();this.a || (this.a = Vj(Zj(this)));var m = this;return this.a.then(function () {
	      var p = m.la().s(function (v) {
	        te(a);e(v);throw v;
	      });d();return p;
	    }).then(function () {
	      nh(c);if (!g) {
	        var p = ak(m.o, m.g, m.b, b, c, null, f, m.c, void 0, m.i, h, m.f);ne(p, a);
	      }
	    }).s(function (p) {
	      "auth/network-request-failed" == p.code && (m.a = null);throw p;
	    });
	  };
	  function Zj(a) {
	    a.l || (a.A = a.c ? Je(a.c, Tj(a.b)) : null, a.l = new Ei(a.g, Aa(a.i), a.A), a.f && Li(a.l, a.f));return a.l;
	  }k.Mb = function (a, b, c, d) {
	    this.a || (this.a = Vj(Zj(this)));var e = this;return this.a.then(function () {
	      nh(b);var f = ak(e.o, e.g, e.b, a, b, me(), c, e.c, void 0, e.i, d, e.f);ne(f);
	    }).s(function (f) {
	      "auth/network-request-failed" == f.code && (e.a = null);throw f;
	    });
	  };k.la = function () {
	    var a = this;return Wj(this).then(function () {
	      return a.m.qb;
	    }).s(function () {
	      a.a = null;throw new t("network-request-failed");
	    });
	  };k.Zb = function () {
	    return !0;
	  };
	  function ak(a, b, c, d, e, f, g, h, m, p, v, B) {
	    a = new Sj(a, b, c, d, e, B);a.l = f;a.g = g;a.i = h;a.b = lb(m || null);a.f = p;return a.xb(v).toString();
	  }function Xj(a) {
	    if (!a.m) throw Error("IfcHandler must be initialized!");Nj(a.m, function (b) {
	      var c = {};if (b && b.authEvent) {
	        var d = !1;b = ph(b.authEvent);for (c = 0; c < a.h.length; c++) {
	          d = a.h[c](b) || d;
	        }c = {};c.status = d ? "ACK" : "ERROR";return D(c);
	      }c.status = "ERROR";return D(c);
	    });
	  }
	  function Yj(a) {
	    var b = { type: "webStorageSupport" };return Wj(a).then(function () {
	      return Mj(a.m, b);
	    }).then(function (c) {
	      if (c && c.length && "undefined" !== typeof c[0].webStorageSupport) return c[0].webStorageSupport;throw Error();
	    });
	  }k.Ea = function (a) {
	    this.h.push(a);
	  };k.Ra = function (a) {
	    Va(this.h, function (b) {
	      return b == a;
	    });
	  };function bk(a) {
	    this.a = a || firebase.INTERNAL.reactNative && firebase.INTERNAL.reactNative.AsyncStorage;if (!this.a) throw new t("internal-error", "The React Native compatibility library was not found.");this.type = "asyncStorage";
	  }k = bk.prototype;k.get = function (a) {
	    return D(this.a.getItem(a)).then(function (b) {
	      return b && Re(b);
	    });
	  };k.set = function (a, b) {
	    return D(this.a.setItem(a, Pe(b)));
	  };k.T = function (a) {
	    return D(this.a.removeItem(a));
	  };k.ca = function () {};k.ia = function () {};function ck(a) {
	    this.b = a;this.a = {};this.f = q(this.c, this);
	  }var dk = [];function ek() {
	    var a = Ee() ? self : null;w(dk, function (c) {
	      c.b == a && (b = c);
	    });if (!b) {
	      var b = new ck(a);dk.push(b);
	    }return b;
	  }
	  ck.prototype.c = function (a) {
	    var b = a.data.eventType,
	        c = a.data.eventId,
	        d = this.a[b];if (d && 0 < d.length) {
	      a.ports[0].postMessage({ status: "ack", eventId: c, eventType: b, response: null });var e = [];w(d, function (f) {
	        e.push(D().then(function () {
	          return f(a.origin, a.data.data);
	        }));
	      });Fc(e).then(function (f) {
	        var g = [];w(f, function (h) {
	          g.push({ fulfilled: h.Ob, value: h.value, reason: h.reason ? h.reason.message : void 0 });
	        });w(g, function (h) {
	          for (var m in h) {
	            "undefined" === typeof h[m] && delete h[m];
	          }
	        });a.ports[0].postMessage({ status: "done", eventId: c,
	          eventType: b, response: g });
	      });
	    }
	  };function fk(a, b, c) {
	    kb(a.a) && a.b.addEventListener("message", a.f);"undefined" === typeof a.a[b] && (a.a[b] = []);a.a[b].push(c);
	  };function gk(a) {
	    this.a = a;
	  }gk.prototype.postMessage = function (a, b) {
	    this.a.postMessage(a, b);
	  };function hk(a) {
	    this.c = a;this.b = !1;this.a = [];
	  }
	  function ik(a, b, c, d) {
	    var e,
	        f = c || {},
	        g,
	        h,
	        m,
	        p = null;if (a.b) return E(Error("connection_unavailable"));var v = d ? 800 : 50,
	        B = "undefined" !== typeof MessageChannel ? new MessageChannel() : null;return new C(function (A, Q) {
	      B ? (e = Math.floor(Math.random() * Math.pow(10, 20)).toString(), B.port1.start(), h = setTimeout(function () {
	        Q(Error("unsupported_event"));
	      }, v), g = function g(xa) {
	        xa.data.eventId === e && ("ack" === xa.data.status ? (clearTimeout(h), m = setTimeout(function () {
	          Q(Error("timeout"));
	        }, 3E3)) : "done" === xa.data.status ? (clearTimeout(m), "undefined" !== typeof xa.data.response ? A(xa.data.response) : Q(Error("unknown_error"))) : (clearTimeout(h), clearTimeout(m), Q(Error("invalid_response"))));
	      }, p = { messageChannel: B, onMessage: g }, a.a.push(p), B.port1.addEventListener("message", g), a.c.postMessage({ eventType: b, eventId: e, data: f }, [B.port2])) : Q(Error("connection_unavailable"));
	    }).then(function (A) {
	      jk(a, p);return A;
	    }).s(function (A) {
	      jk(a, p);throw A;
	    });
	  }
	  function jk(a, b) {
	    if (b) {
	      var c = b.messageChannel,
	          d = b.onMessage;c && (c.port1.removeEventListener("message", d), c.port1.close());Va(a.a, function (e) {
	        return e == b;
	      });
	    }
	  }hk.prototype.close = function () {
	    for (; 0 < this.a.length;) {
	      jk(this, this.a[0]);
	    }this.b = !0;
	  };function kk() {
	    if (!lk()) throw new t("web-storage-unsupported");this.c = {};this.a = [];this.b = 0;this.m = l.indexedDB;this.type = "indexedDB";this.g = this.l = this.f = this.i = null;this.o = !1;this.h = null;var a = this;Ee() && self ? (this.l = ek(), fk(this.l, "keyChanged", function (b, c) {
	      return mk(a).then(function (d) {
	        0 < d.length && w(a.a, function (e) {
	          e(d);
	        });return { keyProcessed: Ta(d, c.key) };
	      });
	    }), fk(this.l, "ping", function () {
	      return D(["keyChanged"]);
	    })) : af().then(function (b) {
	      if (a.h = b) a.g = new hk(new gk(b)), ik(a.g, "ping", null, !0).then(function (c) {
	        c[0].fulfilled && Ta(c[0].value, "keyChanged") && (a.o = !0);
	      }).s(function () {});
	    });
	  }var nk;function ok(a) {
	    return new C(function (b, c) {
	      var d = a.m.deleteDatabase("firebaseLocalStorageDb");d.onsuccess = function () {
	        b();
	      };d.onerror = function (e) {
	        c(Error(e.target.error));
	      };
	    });
	  }
	  function pk(a) {
	    return new C(function (b, c) {
	      var d = a.m.open("firebaseLocalStorageDb", 1);d.onerror = function (e) {
	        try {
	          e.preventDefault();
	        } catch (f) {}c(Error(e.target.error));
	      };d.onupgradeneeded = function (e) {
	        e = e.target.result;try {
	          e.createObjectStore("firebaseLocalStorage", { keyPath: "fbase_key" });
	        } catch (f) {
	          c(f);
	        }
	      };d.onsuccess = function (e) {
	        e = e.target.result;e.objectStoreNames.contains("firebaseLocalStorage") ? b(e) : ok(a).then(function () {
	          return pk(a);
	        }).then(function (f) {
	          b(f);
	        }).s(function (f) {
	          c(f);
	        });
	      };
	    });
	  }
	  function qk(a) {
	    a.v || (a.v = pk(a));return a.v;
	  }function lk() {
	    try {
	      return !!l.indexedDB;
	    } catch (a) {
	      return !1;
	    }
	  }function rk(a) {
	    return a.objectStore("firebaseLocalStorage");
	  }function sk(a, b) {
	    return a.transaction(["firebaseLocalStorage"], b ? "readwrite" : "readonly");
	  }function tk(a) {
	    return new C(function (b, c) {
	      a.onsuccess = function (d) {
	        d && d.target ? b(d.target.result) : b();
	      };a.onerror = function (d) {
	        c(d.target.error);
	      };
	    });
	  }k = kk.prototype;
	  k.set = function (a, b) {
	    var c = !1,
	        d,
	        e = this;return qk(this).then(function (f) {
	      d = f;f = rk(sk(d, !0));return tk(f.get(a));
	    }).then(function (f) {
	      var g = rk(sk(d, !0));if (f) return f.value = b, tk(g.put(f));e.b++;c = !0;f = {};f.fbase_key = a;f.value = b;return tk(g.add(f));
	    }).then(function () {
	      e.c[a] = b;return uk(e, a);
	    }).na(function () {
	      c && e.b--;
	    });
	  };function uk(a, b) {
	    return a.g && a.h && $e() === a.h ? ik(a.g, "keyChanged", { key: b }, a.o).then(function () {}).s(function () {}) : D();
	  }
	  k.get = function (a) {
	    return qk(this).then(function (b) {
	      return tk(rk(sk(b, !1)).get(a));
	    }).then(function (b) {
	      return b && b.value;
	    });
	  };k.T = function (a) {
	    var b = !1,
	        c = this;return qk(this).then(function (d) {
	      b = !0;c.b++;return tk(rk(sk(d, !0))["delete"](a));
	    }).then(function () {
	      delete c.c[a];return uk(c, a);
	    }).na(function () {
	      b && c.b--;
	    });
	  };
	  function mk(a) {
	    return qk(a).then(function (b) {
	      var c = rk(sk(b, !1));return c.getAll ? tk(c.getAll()) : new C(function (d, e) {
	        var f = [],
	            g = c.openCursor();g.onsuccess = function (h) {
	          (h = h.target.result) ? (f.push(h.value), h["continue"]()) : d(f);
	        };g.onerror = function (h) {
	          e(h.target.error);
	        };
	      });
	    }).then(function (b) {
	      var c = {},
	          d = [];if (0 == a.b) {
	        for (d = 0; d < b.length; d++) {
	          c[b[d].fbase_key] = b[d].value;
	        }d = oe(a.c, c);a.c = c;
	      }return d;
	    });
	  }k.ca = function (a) {
	    0 == this.a.length && vk(this);this.a.push(a);
	  };
	  k.ia = function (a) {
	    Va(this.a, function (b) {
	      return b == a;
	    });0 == this.a.length && wk(this);
	  };function vk(a) {
	    function b() {
	      a.f = setTimeout(function () {
	        a.i = mk(a).then(function (c) {
	          0 < c.length && w(a.a, function (d) {
	            d(c);
	          });
	        }).then(function () {
	          b();
	        }).s(function (c) {
	          "STOP_EVENT" != c.message && b();
	        });
	      }, 800);
	    }wk(a);b();
	  }function wk(a) {
	    a.i && a.i.cancel("STOP_EVENT");a.f && (clearTimeout(a.f), a.f = null);
	  };function xk(a) {
	    var b = this,
	        c = null;this.a = [];this.type = "indexedDB";this.c = a;this.b = D().then(function () {
	      if (lk()) {
	        var d = Le(),
	            e = "__sak" + d;nk || (nk = new kk());c = nk;return c.set(e, d).then(function () {
	          return c.get(e);
	        }).then(function (f) {
	          if (f !== d) throw Error("indexedDB not supported!");return c.T(e);
	        }).then(function () {
	          return c;
	        }).s(function () {
	          return b.c;
	        });
	      }return b.c;
	    }).then(function (d) {
	      b.type = d.type;d.ca(function (e) {
	        w(b.a, function (f) {
	          f(e);
	        });
	      });return d;
	    });
	  }k = xk.prototype;k.get = function (a) {
	    return this.b.then(function (b) {
	      return b.get(a);
	    });
	  };
	  k.set = function (a, b) {
	    return this.b.then(function (c) {
	      return c.set(a, b);
	    });
	  };k.T = function (a) {
	    return this.b.then(function (b) {
	      return b.T(a);
	    });
	  };k.ca = function (a) {
	    this.a.push(a);
	  };k.ia = function (a) {
	    Va(this.a, function (b) {
	      return b == a;
	    });
	  };function yk() {
	    this.a = {};this.type = "inMemory";
	  }k = yk.prototype;k.get = function (a) {
	    return D(this.a[a]);
	  };k.set = function (a, b) {
	    this.a[a] = b;return D();
	  };k.T = function (a) {
	    delete this.a[a];return D();
	  };k.ca = function () {};k.ia = function () {};function zk() {
	    if (!Ak()) {
	      if ("Node" == Fe()) throw new t("internal-error", "The LocalStorage compatibility library was not found.");throw new t("web-storage-unsupported");
	    }this.a = Bk() || firebase.INTERNAL.node.localStorage;this.type = "localStorage";
	  }function Bk() {
	    try {
	      var a = l.localStorage,
	          b = Le();a && (a.setItem(b, "1"), a.removeItem(b));return a;
	    } catch (c) {
	      return null;
	    }
	  }
	  function Ak() {
	    var a = "Node" == Fe();a = Bk() || a && firebase.INTERNAL.node && firebase.INTERNAL.node.localStorage;if (!a) return !1;try {
	      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
	    } catch (b) {
	      return !1;
	    }
	  }k = zk.prototype;k.get = function (a) {
	    var b = this;return D().then(function () {
	      var c = b.a.getItem(a);return Re(c);
	    });
	  };k.set = function (a, b) {
	    var c = this;return D().then(function () {
	      var d = Pe(b);null === d ? c.T(a) : c.a.setItem(a, d);
	    });
	  };k.T = function (a) {
	    var b = this;return D().then(function () {
	      b.a.removeItem(a);
	    });
	  };
	  k.ca = function (a) {
	    l.window && jd(l.window, "storage", a);
	  };k.ia = function (a) {
	    l.window && G(l.window, "storage", a);
	  };function Ck() {
	    this.type = "nullStorage";
	  }k = Ck.prototype;k.get = function () {
	    return D(null);
	  };k.set = function () {
	    return D();
	  };k.T = function () {
	    return D();
	  };k.ca = function () {};k.ia = function () {};function Dk() {
	    if (!Ek()) {
	      if ("Node" == Fe()) throw new t("internal-error", "The SessionStorage compatibility library was not found.");throw new t("web-storage-unsupported");
	    }this.a = Fk() || firebase.INTERNAL.node.sessionStorage;this.type = "sessionStorage";
	  }function Fk() {
	    try {
	      var a = l.sessionStorage,
	          b = Le();a && (a.setItem(b, "1"), a.removeItem(b));return a;
	    } catch (c) {
	      return null;
	    }
	  }
	  function Ek() {
	    var a = "Node" == Fe();a = Fk() || a && firebase.INTERNAL.node && firebase.INTERNAL.node.sessionStorage;if (!a) return !1;try {
	      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
	    } catch (b) {
	      return !1;
	    }
	  }k = Dk.prototype;k.get = function (a) {
	    var b = this;return D().then(function () {
	      var c = b.a.getItem(a);return Re(c);
	    });
	  };k.set = function (a, b) {
	    var c = this;return D().then(function () {
	      var d = Pe(b);null === d ? c.T(a) : c.a.setItem(a, d);
	    });
	  };k.T = function (a) {
	    var b = this;return D().then(function () {
	      b.a.removeItem(a);
	    });
	  };k.ca = function () {};
	  k.ia = function () {};function Gk() {
	    var a = {};a.Browser = Hk;a.Node = Ik;a.ReactNative = Jk;a.Worker = Kk;this.a = a[Fe()];
	  }var Lk,
	      Hk = { D: zk, ab: Dk },
	      Ik = { D: zk, ab: Dk },
	      Jk = { D: bk, ab: Ck },
	      Kk = { D: zk, ab: Ck }; /*
	                              Copyright 2017 Google LLC
	                              Licensed under the Apache License, Version 2.0 (the "License");
	                              you may not use this file except in compliance with the License.
	                              You may obtain a copy of the License at
	                              http://www.apache.org/licenses/LICENSE-2.0
	                              Unless required by applicable law or agreed to in writing, software
	                              distributed under the License is distributed on an "AS IS" BASIS,
	                              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                              See the License for the specific language governing permissions and
	                              limitations under the License.
	                              */
	  var Mk = { qd: "local", NONE: "none", sd: "session" };function Nk(a) {
	    var b = new t("invalid-persistence-type"),
	        c = new t("unsupported-persistence-type");a: {
	      for (d in Mk) {
	        if (Mk[d] == a) {
	          var d = !0;break a;
	        }
	      }d = !1;
	    }if (!d || "string" !== typeof a) throw b;switch (Fe()) {case "ReactNative":
	        if ("session" === a) throw c;break;case "Node":
	        if ("none" !== a) throw c;break;case "Worker":
	        if ("session" === a || !lk() && "none" !== a) throw c;break;default:
	        if (!Ke() && "none" !== a) throw c;}
	  }
	  function Ok() {
	    var a = !Se(K()) && De() ? !0 : !1,
	        b = Oe(),
	        c = Ke();this.v = a;this.h = b;this.l = c;this.a = {};Lk || (Lk = new Gk());a = Lk;try {
	      this.g = !le() && Ze() || !l.indexedDB ? new a.a.D() : new xk(Ee() ? new yk() : new a.a.D());
	    } catch (d) {
	      this.g = new yk(), this.h = !0;
	    }try {
	      this.i = new a.a.ab();
	    } catch (d) {
	      this.i = new yk();
	    }this.m = new yk();this.f = q(this.Xb, this);this.b = {};
	  }var Pk;function Qk() {
	    Pk || (Pk = new Ok());return Pk;
	  }function Rk(a, b) {
	    switch (b) {case "session":
	        return a.i;case "none":
	        return a.m;default:
	        return a.g;}
	  }
	  function Sk(a, b) {
	    return "firebase:" + a.name + (b ? ":" + b : "");
	  }function Tk(a, b, c) {
	    var d = Sk(b, c),
	        e = Rk(a, b.D);return a.get(b, c).then(function (f) {
	      var g = null;try {
	        g = Re(l.localStorage.getItem(d));
	      } catch (h) {}if (g && !f) return l.localStorage.removeItem(d), a.set(b, g, c);g && f && "localStorage" != e.type && l.localStorage.removeItem(d);
	    });
	  }k = Ok.prototype;k.get = function (a, b) {
	    return Rk(this, a.D).get(Sk(a, b));
	  };function Uk(a, b, c) {
	    c = Sk(b, c);"local" == b.D && (a.b[c] = null);return Rk(a, b.D).T(c);
	  }
	  k.set = function (a, b, c) {
	    var d = Sk(a, c),
	        e = this,
	        f = Rk(this, a.D);return f.set(d, b).then(function () {
	      return f.get(d);
	    }).then(function (g) {
	      "local" == a.D && (e.b[d] = g);
	    });
	  };k.addListener = function (a, b, c) {
	    a = Sk(a, b);this.l && (this.b[a] = l.localStorage.getItem(a));kb(this.a) && (Rk(this, "local").ca(this.f), this.h || (le() || !Ze()) && l.indexedDB || !this.l || Vk(this));this.a[a] || (this.a[a] = []);this.a[a].push(c);
	  };
	  k.removeListener = function (a, b, c) {
	    a = Sk(a, b);this.a[a] && (Va(this.a[a], function (d) {
	      return d == c;
	    }), 0 == this.a[a].length && delete this.a[a]);kb(this.a) && (Rk(this, "local").ia(this.f), Wk(this));
	  };function Vk(a) {
	    Wk(a);a.c = setInterval(function () {
	      for (var b in a.a) {
	        var c = l.localStorage.getItem(b),
	            d = a.b[b];c != d && (a.b[b] = c, c = new Yc({ type: "storage", key: b, target: window, oldValue: d, newValue: c, a: !0 }), a.Xb(c));
	      }
	    }, 1E3);
	  }function Wk(a) {
	    a.c && (clearInterval(a.c), a.c = null);
	  }
	  k.Xb = function (a) {
	    if (a && a.g) {
	      var b = a.a.key;if (null == b) for (var c in this.a) {
	        var d = this.b[c];"undefined" === typeof d && (d = null);var e = l.localStorage.getItem(c);e !== d && (this.b[c] = e, this.lb(c));
	      } else if (0 == b.indexOf("firebase:") && this.a[b]) {
	        "undefined" !== typeof a.a.a ? Rk(this, "local").ia(this.f) : Wk(this);if (this.v) if (c = l.localStorage.getItem(b), d = a.a.newValue, d !== c) null !== d ? l.localStorage.setItem(b, d) : l.localStorage.removeItem(b);else if (this.b[b] === d && "undefined" === typeof a.a.a) return;var f = this;c = function c() {
	          if ("undefined" !== typeof a.a.a || f.b[b] !== l.localStorage.getItem(b)) f.b[b] = l.localStorage.getItem(b), f.lb(b);
	        };Tb && dc && 10 == dc && l.localStorage.getItem(b) !== a.a.newValue && a.a.newValue !== a.a.oldValue ? setTimeout(c, 10) : c();
	      }
	    } else w(a, q(this.lb, this));
	  };k.lb = function (a) {
	    this.a[a] && w(this.a[a], function (b) {
	      b();
	    });
	  };function Xk(a) {
	    this.a = a;this.b = Qk();
	  }var Yk = { name: "authEvent", D: "local" };function Zk(a) {
	    return a.b.get(Yk, a.a).then(function (b) {
	      return ph(b);
	    });
	  };function $k() {
	    this.a = Qk();
	  };function al() {
	    this.b = -1;
	  };function bl(a, b) {
	    this.b = cl;this.f = l.Uint8Array ? new Uint8Array(this.b) : Array(this.b);this.g = this.c = 0;this.a = [];this.i = a;this.h = b;this.l = l.Int32Array ? new Int32Array(64) : Array(64);void 0 === dl && (l.Int32Array ? dl = new Int32Array(el) : dl = el);this.reset();
	  }var dl;r(bl, al);for (var cl = 64, fl = cl - 1, gl = [], hl = 0; hl < fl; hl++) {
	    gl[hl] = 0;
	  }var il = Wa(128, gl);bl.prototype.reset = function () {
	    this.g = this.c = 0;this.a = l.Int32Array ? new Int32Array(this.h) : Xa(this.h);
	  };
	  function jl(a) {
	    for (var b = a.f, c = a.l, d = 0, e = 0; e < b.length;) {
	      c[d++] = b[e] << 24 | b[e + 1] << 16 | b[e + 2] << 8 | b[e + 3], e = 4 * d;
	    }for (b = 16; 64 > b; b++) {
	      e = c[b - 15] | 0;d = c[b - 2] | 0;var f = (c[b - 16] | 0) + ((e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3) | 0,
	          g = (c[b - 7] | 0) + ((d >>> 17 | d << 15) ^ (d >>> 19 | d << 13) ^ d >>> 10) | 0;c[b] = f + g | 0;
	    }d = a.a[0] | 0;e = a.a[1] | 0;var h = a.a[2] | 0,
	        m = a.a[3] | 0,
	        p = a.a[4] | 0,
	        v = a.a[5] | 0,
	        B = a.a[6] | 0;f = a.a[7] | 0;for (b = 0; 64 > b; b++) {
	      var A = ((d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10)) + (d & e ^ d & h ^ e & h) | 0;g = p & v ^ ~p & B;f = f + ((p >>> 6 | p << 26) ^ (p >>> 11 | p << 21) ^ (p >>> 25 | p << 7)) | 0;g = g + (dl[b] | 0) | 0;g = f + (g + (c[b] | 0) | 0) | 0;f = B;B = v;v = p;p = m + g | 0;m = h;h = e;e = d;d = g + A | 0;
	    }a.a[0] = a.a[0] + d | 0;a.a[1] = a.a[1] + e | 0;a.a[2] = a.a[2] + h | 0;a.a[3] = a.a[3] + m | 0;a.a[4] = a.a[4] + p | 0;a.a[5] = a.a[5] + v | 0;a.a[6] = a.a[6] + B | 0;a.a[7] = a.a[7] + f | 0;
	  }
	  function kl(a, b, c) {
	    void 0 === c && (c = b.length);var d = 0,
	        e = a.c;if ("string" === typeof b) for (; d < c;) {
	      a.f[e++] = b.charCodeAt(d++), e == a.b && (jl(a), e = 0);
	    } else if (ma(b)) for (; d < c;) {
	      var f = b[d++];if (!("number" == typeof f && 0 <= f && 255 >= f && f == (f | 0))) throw Error("message must be a byte array");a.f[e++] = f;e == a.b && (jl(a), e = 0);
	    } else throw Error("message must be string or array");a.c = e;a.g += c;
	  }
	  var el = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];function ll() {
	    bl.call(this, 8, ml);
	  }r(ll, bl);var ml = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];function nl(a, b, c, d, e, f) {
	    this.m = a;this.i = b;this.l = c;this.v = d || null;this.u = e || null;this.o = f;this.h = b + ":" + c;this.A = new $k();this.g = new Xk(this.h);this.f = null;this.b = [];this.a = this.c = null;
	  }function ol(a) {
	    return new t("invalid-cordova-configuration", a);
	  }k = nl.prototype;
	  k.la = function () {
	    return this.Ia ? this.Ia : this.Ia = Ae().then(function () {
	      if ("function" !== typeof L("universalLinks.subscribe", l)) throw ol("cordova-universal-links-plugin-fix is not installed");if ("undefined" === typeof L("BuildInfo.packageName", l)) throw ol("cordova-plugin-buildinfo is not installed");if ("function" !== typeof L("cordova.plugins.browsertab.openUrl", l)) throw ol("cordova-plugin-browsertab is not installed");if ("function" !== typeof L("cordova.InAppBrowser.open", l)) throw ol("cordova-plugin-inappbrowser is not installed");
	    }, function () {
	      throw new t("cordova-not-ready");
	    });
	  };function pl() {
	    for (var a = 20, b = []; 0 < a;) {
	      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
	    }return b.join("");
	  }function ql(a) {
	    var b = new ll();kl(b, a);a = [];var c = 8 * b.g;56 > b.c ? kl(b, il, 56 - b.c) : kl(b, il, b.b - (b.c - 56));for (var d = 63; 56 <= d; d--) {
	      b.f[d] = c & 255, c /= 256;
	    }jl(b);for (d = c = 0; d < b.i; d++) {
	      for (var e = 24; 0 <= e; e -= 8) {
	        a[c++] = b.a[d] >> e & 255;
	      }
	    }return Zf(a);
	  }
	  k.Nb = function (a, b) {
	    b(new t("operation-not-supported-in-this-environment"));return D();
	  };k.Lb = function () {
	    return E(new t("operation-not-supported-in-this-environment"));
	  };k.Zb = function () {
	    return !1;
	  };k.Wb = function () {
	    return !0;
	  };k.Sb = function () {
	    return !0;
	  };
	  k.Mb = function (a, b, c, d) {
	    if (this.c) return E(new t("redirect-operation-pending"));var e = this,
	        f = l.document,
	        g = null,
	        h = null,
	        m = null,
	        p = null;return this.c = D().then(function () {
	      nh(b);return rl(e);
	    }).then(function () {
	      return sl(e, a, b, c, d);
	    }).then(function () {
	      return new C(function (v, B) {
	        h = function h() {
	          var A = L("cordova.plugins.browsertab.close", l);v();"function" === typeof A && A();e.a && "function" === typeof e.a.close && (e.a.close(), e.a = null);return !1;
	        };e.Ea(h);m = function m() {
	          g || (g = Ad(2E3).then(function () {
	            B(new t("redirect-cancelled-by-user"));
	          }));
	        };
	        p = function p() {
	          Ve() && m();
	        };f.addEventListener("resume", m, !1);K().toLowerCase().match(/android/) || f.addEventListener("visibilitychange", p, !1);
	      }).s(function (v) {
	        return tl(e).then(function () {
	          throw v;
	        });
	      });
	    }).na(function () {
	      m && f.removeEventListener("resume", m, !1);p && f.removeEventListener("visibilitychange", p, !1);g && g.cancel();h && e.Ra(h);e.c = null;
	    });
	  };
	  function sl(a, b, c, d, e) {
	    var f = pl(),
	        g = new oh(b, d, null, f, new t("no-auth-event"), null, e),
	        h = L("BuildInfo.packageName", l);if ("string" !== typeof h) throw new t("invalid-cordova-configuration");var m = L("BuildInfo.displayName", l),
	        p = {};if (K().toLowerCase().match(/iphone|ipad|ipod/)) p.ibi = h;else if (K().toLowerCase().match(/android/)) p.apn = h;else return E(new t("operation-not-supported-in-this-environment"));m && (p.appDisplayName = m);f = ql(f);p.sessionId = f;var v = ak(a.m, a.i, a.l, b, c, null, d, a.v, p, a.u, e, a.o);return a.la().then(function () {
	      var B = a.h;return a.A.a.set(Yk, g.w(), B);
	    }).then(function () {
	      var B = L("cordova.plugins.browsertab.isAvailable", l);if ("function" !== typeof B) throw new t("invalid-cordova-configuration");var A = null;B(function (Q) {
	        if (Q) {
	          A = L("cordova.plugins.browsertab.openUrl", l);if ("function" !== typeof A) throw new t("invalid-cordova-configuration");A(v);
	        } else {
	          A = L("cordova.InAppBrowser.open", l);if ("function" !== typeof A) throw new t("invalid-cordova-configuration");Q = K();a.a = A(v, Q.match(/(iPad|iPhone|iPod).*OS 7_\d/i) || Q.match(/(iPad|iPhone|iPod).*OS 8_\d/i) ? "_blank" : "_system", "location=yes");
	        }
	      });
	    });
	  }function ul(a, b) {
	    for (var c = 0; c < a.b.length; c++) {
	      try {
	        a.b[c](b);
	      } catch (d) {}
	    }
	  }function rl(a) {
	    a.f || (a.f = a.la().then(function () {
	      return new C(function (b) {
	        function c(d) {
	          b(d);a.Ra(c);return !1;
	        }a.Ea(c);vl(a);
	      });
	    }));return a.f;
	  }function tl(a) {
	    var b = null;return Zk(a.g).then(function (c) {
	      b = c;c = a.g;return Uk(c.b, Yk, c.a);
	    }).then(function () {
	      return b;
	    });
	  }
	  function vl(a) {
	    function b(g) {
	      d = !0;e && e.cancel();tl(a).then(function (h) {
	        var m = c;if (h && g && g.url) {
	          var p = null;m = tg(g.url);-1 != m.indexOf("/__/auth/callback") && (p = J(m), p = Re(Xd(p, "firebaseError") || null), p = (p = "object" === (typeof p === "undefined" ? "undefined" : _typeof(p)) ? ya(p) : null) ? new oh(h.c, h.b, null, null, p, null, h.S()) : new oh(h.c, h.b, m, h.f, null, null, h.S()));m = p || c;
	        }ul(a, m);
	      });
	    }var c = new oh("unknown", null, null, null, new t("no-auth-event")),
	        d = !1,
	        e = Ad(500).then(function () {
	      return tl(a).then(function () {
	        d || ul(a, c);
	      });
	    }),
	        f = l.handleOpenURL;l.handleOpenURL = function (g) {
	      0 == g.toLowerCase().indexOf(L("BuildInfo.packageName", l).toLowerCase() + "://") && b({ url: g });if ("function" === typeof f) try {
	        f(g);
	      } catch (h) {
	        console.error(h);
	      }
	    };rh || (rh = new qh());sh(b);
	  }k.Ea = function (a) {
	    this.b.push(a);rl(this).s(function (b) {
	      "auth/invalid-cordova-configuration" === b.code && (b = new oh("unknown", null, null, null, new t("no-auth-event")), a(b));
	    });
	  };k.Ra = function (a) {
	    Va(this.b, function (b) {
	      return b == a;
	    });
	  };function wl(a) {
	    this.a = a;this.b = Qk();
	  }var xl = { name: "pendingRedirect", D: "session" };function yl(a) {
	    return a.b.set(xl, "pending", a.a);
	  }function zl(a) {
	    return Uk(a.b, xl, a.a);
	  }function Al(a) {
	    return a.b.get(xl, a.a).then(function (b) {
	      return "pending" == b;
	    });
	  };function Bl(a, b, c, d) {
	    this.i = {};this.u = 0;this.O = a;this.m = b;this.v = c;this.G = d;this.h = [];this.f = !1;this.l = q(this.o, this);this.b = new Cl();this.A = new Dl();this.g = new wl(El(this.m, this.v));this.c = {};this.c.unknown = this.b;this.c.signInViaRedirect = this.b;this.c.linkViaRedirect = this.b;this.c.reauthViaRedirect = this.b;this.c.signInViaPopup = this.A;this.c.linkViaPopup = this.A;this.c.reauthViaPopup = this.A;this.a = Fl(this.O, this.m, this.v, Ba, this.G);
	  }
	  function Fl(a, b, c, d, e) {
	    var f = firebase.SDK_VERSION || null;return Be() ? new nl(a, b, c, f, d, e) : new Uj(a, b, c, f, d, e);
	  }Bl.prototype.reset = function () {
	    this.f = !1;this.a.Ra(this.l);this.a = Fl(this.O, this.m, this.v, null, this.G);this.i = {};
	  };function Gl(a) {
	    a.f || (a.f = !0, a.a.Ea(a.l));var b = a.a;return a.a.la().s(function (c) {
	      a.a == b && a.reset();throw c;
	    });
	  }
	  function Hl(a) {
	    a.a.Wb() && Gl(a).s(function (b) {
	      var c = new oh("unknown", null, null, null, new t("operation-not-supported-in-this-environment"));Il(b) && a.o(c);
	    });a.a.Sb() || Jl(a.b);
	  }function Kl(a, b) {
	    Ta(a.h, b) || a.h.push(b);a.f || Al(a.g).then(function (c) {
	      c ? zl(a.g).then(function () {
	        Gl(a).s(function (d) {
	          var e = new oh("unknown", null, null, null, new t("operation-not-supported-in-this-environment"));Il(d) && a.o(e);
	        });
	      }) : Hl(a);
	    }).s(function () {
	      Hl(a);
	    });
	  }function Ll(a, b) {
	    Va(a.h, function (c) {
	      return c == b;
	    });
	  }
	  Bl.prototype.o = function (a) {
	    if (!a) throw new t("invalid-auth-event");6E5 <= ua() - this.u && (this.i = {}, this.u = 0);if (a && a.getUid() && this.i.hasOwnProperty(a.getUid())) return !1;for (var b = !1, c = 0; c < this.h.length; c++) {
	      var d = this.h[c];if (d.Eb(a.c, a.b)) {
	        if (b = this.c[a.c]) b.h(a, d), a && (a.f || a.b) && (this.i[a.getUid()] = !0, this.u = ua());b = !0;break;
	      }
	    }Jl(this.b);return b;
	  };var Ml = new Ue(2E3, 1E4),
	      Nl = new Ue(3E4, 6E4);Bl.prototype.qa = function () {
	    return this.b.qa();
	  };
	  function Ol(a, b, c, d, e, f, g) {
	    return a.a.Lb(b, c, d, function () {
	      a.f || (a.f = !0, a.a.Ea(a.l));
	    }, function () {
	      a.reset();
	    }, e, f, g);
	  }function Il(a) {
	    return a && "auth/cordova-not-ready" == a.code ? !0 : !1;
	  }
	  function Pl(a, b, c, d, e) {
	    var f;return yl(a.g).then(function () {
	      return a.a.Mb(b, c, d, e).s(function (g) {
	        if (Il(g)) throw new t("operation-not-supported-in-this-environment");f = g;return zl(a.g).then(function () {
	          throw f;
	        });
	      }).then(function () {
	        return a.a.Zb() ? new C(function () {}) : zl(a.g).then(function () {
	          return a.qa();
	        }).then(function () {}).s(function () {});
	      });
	    });
	  }function Ql(a, b, c, d, e) {
	    return a.a.Nb(d, function (f) {
	      b.ma(c, null, f, e);
	    }, Ml.get());
	  }var Rl = {};function El(a, b, c) {
	    a = a + ":" + b;c && (a = a + ":" + c.url);return a;
	  }
	  function Sl(a, b, c, d) {
	    var e = El(b, c, d);Rl[e] || (Rl[e] = new Bl(a, b, c, d));return Rl[e];
	  }function Cl() {
	    this.b = null;this.f = [];this.c = [];this.a = null;this.i = this.g = !1;
	  }Cl.prototype.reset = function () {
	    this.b = null;this.a && (this.a.cancel(), this.a = null);
	  };
	  Cl.prototype.h = function (a, b) {
	    if (a) {
	      this.reset();this.g = !0;var c = a.c,
	          d = a.b,
	          e = a.a && "auth/web-storage-unsupported" == a.a.code,
	          f = a.a && "auth/operation-not-supported-in-this-environment" == a.a.code;this.i = !(!e && !f);"unknown" != c || e || f ? a.a ? (Tl(this, !0, null, a.a), D()) : b.Fa(c, d) ? Ul(this, a, b) : E(new t("invalid-auth-event")) : (Tl(this, !1, null, null), D());
	    } else E(new t("invalid-auth-event"));
	  };function Jl(a) {
	    a.g || (a.g = !0, Tl(a, !1, null, null));
	  }function Vl(a) {
	    a.g && !a.i && Tl(a, !1, null, null);
	  }
	  function Ul(a, b, c) {
	    c = c.Fa(b.c, b.b);var d = b.g,
	        e = b.f,
	        f = b.i,
	        g = b.S(),
	        h = !!b.c.match(/Redirect$/);c(d, e, g, f).then(function (m) {
	      Tl(a, h, m, null);
	    }).s(function (m) {
	      Tl(a, h, null, m);
	    });
	  }function Wl(a, b) {
	    a.b = function () {
	      return E(b);
	    };if (a.c.length) for (var c = 0; c < a.c.length; c++) {
	      a.c[c](b);
	    }
	  }function Xl(a, b) {
	    a.b = function () {
	      return D(b);
	    };if (a.f.length) for (var c = 0; c < a.f.length; c++) {
	      a.f[c](b);
	    }
	  }function Tl(a, b, c, d) {
	    b ? d ? Wl(a, d) : Xl(a, c) : Xl(a, { user: null });a.f = [];a.c = [];
	  }
	  Cl.prototype.qa = function () {
	    var a = this;return new C(function (b, c) {
	      a.b ? a.b().then(b, c) : (a.f.push(b), a.c.push(c), Yl(a));
	    });
	  };function Yl(a) {
	    var b = new t("timeout");a.a && a.a.cancel();a.a = Ad(Nl.get()).then(function () {
	      a.b || (a.g = !0, Tl(a, !0, null, b));
	    });
	  }function Dl() {}Dl.prototype.h = function (a, b) {
	    if (a) {
	      var c = a.c,
	          d = a.b;a.a ? (b.ma(a.c, null, a.a, a.b), D()) : b.Fa(c, d) ? Zl(a, b) : E(new t("invalid-auth-event"));
	    } else E(new t("invalid-auth-event"));
	  };
	  function Zl(a, b) {
	    var c = a.b,
	        d = a.c;b.Fa(d, c)(a.g, a.f, a.S(), a.i).then(function (e) {
	      b.ma(d, e, null, c);
	    }).s(function (e) {
	      b.ma(d, null, e, c);
	    });
	  };function $l() {
	    this.hb = !1;Object.defineProperty(this, "appVerificationDisabled", { get: function get() {
	        return this.hb;
	      }, set: function set(a) {
	        this.hb = a;
	      }, enumerable: !1 });
	  };function am(a, b) {
	    this.a = b;M(this, "verificationId", a);
	  }am.prototype.confirm = function (a) {
	    a = lh(this.verificationId, a);return this.a(a);
	  };function bm(a, b, c, d) {
	    return new hh(a).eb(b, c).then(function (e) {
	      return new am(e, d);
	    });
	  };function cm(a) {
	    var b = eg(a);if (!(b && b.exp && b.auth_time && b.iat)) throw new t("internal-error", "An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");N(this, { token: a, expirationTime: Ye(1E3 * b.exp), authTime: Ye(1E3 * b.auth_time), issuedAtTime: Ye(1E3 * b.iat), signInProvider: b.firebase && b.firebase.sign_in_provider ? b.firebase.sign_in_provider : null, signInSecondFactor: b.firebase && b.firebase.sign_in_second_factor ? b.firebase.sign_in_second_factor : null, claims: b });
	  }
	  ;function dm(a, b, c) {
	    var d = b && b[em];if (!d) throw new t("argument-error", "Internal assert: Invalid MultiFactorResolver");this.a = a;this.f = lb(b);this.g = c;this.c = new ug(null, d);this.b = [];var e = this;w(b[fm] || [], function (f) {
	      (f = pf(f)) && e.b.push(f);
	    });M(this, "auth", this.a);M(this, "session", this.c);M(this, "hints", this.b);
	  }var fm = "mfaInfo",
	      em = "mfaPendingCredential";dm.prototype.Qc = function (a) {
	    var b = this;return a.rb(this.a.a, this.c).then(function (c) {
	      var d = lb(b.f);delete d[fm];delete d[em];z(d, c);return b.g(d);
	    });
	  };function gm(a, b, c, d) {
	    t.call(this, "multi-factor-auth-required", d, b);this.b = new dm(a, b, c);M(this, "resolver", this.b);
	  }r(gm, t);function hm(a, b, c) {
	    if (a && n(a.serverResponse) && "auth/multi-factor-auth-required" === a.code) try {
	      return new gm(b, a.serverResponse, c, a.message);
	    } catch (d) {}return null;
	  };function im() {}im.prototype.rb = function (a, b, c) {
	    return b.type == vg ? jm(this, a, b, c) : km(this, a, b);
	  };function jm(a, b, c, d) {
	    return c.Ha().then(function (e) {
	      e = { idToken: e };"undefined" !== typeof d && (e.displayName = d);z(e, { phoneVerificationInfo: dh(a.a) });return O(b, Cj, e);
	    });
	  }function km(a, b, c) {
	    return c.Ha().then(function (d) {
	      d = { mfaPendingCredential: d };z(d, { phoneVerificationInfo: dh(a.a) });return O(b, Dj, d);
	    });
	  }function lm(a) {
	    M(this, "factorId", a.fa);this.a = a;
	  }r(lm, im);
	  function mm(a) {
	    lm.call(this, a);if (this.a.fa != hh.PROVIDER_ID) throw new t("argument-error", "firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential");
	  }r(mm, lm);function nm(a, b) {
	    F.call(this, a);for (var c in b) {
	      this[c] = b[c];
	    }
	  }r(nm, F);function om(a, b) {
	    this.a = a;this.b = [];this.c = q(this.xc, this);jd(this.a, "userReloaded", this.c);var c = [];b && b.multiFactor && b.multiFactor.enrolledFactors && w(b.multiFactor.enrolledFactors, function (d) {
	      var e = null,
	          f = {};if (d) {
	        d.uid && (f[mf] = d.uid);d.displayName && (f[nf] = d.displayName);d.enrollmentTime && (f[of] = new Date(d.enrollmentTime).toISOString());d.phoneNumber && (f[lf] = d.phoneNumber);try {
	          e = new qf(f);
	        } catch (g) {}d = e;
	      } else d = null;d && c.push(d);
	    });pm(this, c);
	  }
	  function qm(a) {
	    var b = [];w(a.mfaInfo || [], function (c) {
	      (c = pf(c)) && b.push(c);
	    });return b;
	  }k = om.prototype;k.xc = function (a) {
	    pm(this, qm(a.gd));
	  };function pm(a, b) {
	    a.b = b;M(a, "enrolledFactors", b);
	  }k.Qb = function () {
	    return this.a.I().then(function (a) {
	      return new ug(a, null);
	    });
	  };k.ec = function (a, b) {
	    var c = this,
	        d = this.a.a;return this.Qb().then(function (e) {
	      return a.rb(d, e, b);
	    }).then(function (e) {
	      rm(c.a, e);return c.a.reload();
	    });
	  };
	  k.ad = function (a) {
	    var b = this,
	        c = "string" === typeof a ? a : a.uid,
	        d = this.a.a;return this.a.I().then(function (e) {
	      return O(d, Hj, { idToken: e, mfaEnrollmentId: c });
	    }).then(function (e) {
	      var f = Oa(b.b, function (g) {
	        return g.uid != c;
	      });pm(b, f);rm(b.a, e);return b.a.reload().s(function (g) {
	        if ("auth/user-token-expired" != g.code) throw g;
	      });
	    });
	  };k.w = function () {
	    return { multiFactor: { enrolledFactors: Pa(this.b, function (a) {
	          return a.w();
	        }) } };
	  };function sm(a, b, c) {
	    this.h = a;this.i = b;this.g = c;this.c = 3E4;this.f = 96E4;this.b = null;this.a = this.c;if (this.f < this.c) throw Error("Proactive refresh lower bound greater than upper bound!");
	  }sm.prototype.start = function () {
	    this.a = this.c;tm(this, !0);
	  };function um(a, b) {
	    if (b) return a.a = a.c, a.g();b = a.a;a.a *= 2;a.a > a.f && (a.a = a.f);return b;
	  }function tm(a, b) {
	    a.stop();a.b = Ad(um(a, b)).then(function () {
	      return We();
	    }).then(function () {
	      return a.h();
	    }).then(function () {
	      tm(a, !0);
	    }).s(function (c) {
	      a.i(c) && tm(a, !1);
	    });
	  }
	  sm.prototype.stop = function () {
	    this.b && (this.b.cancel(), this.b = null);
	  };function vm(a) {
	    this.c = a;this.b = this.a = null;
	  }vm.prototype.w = function () {
	    return { apiKey: this.c.c, refreshToken: this.a, accessToken: this.b && this.b.toString(), expirationTime: wm(this) };
	  };function wm(a) {
	    return a.b && 1E3 * a.b.c || 0;
	  }function xm(a, b) {
	    var c = b.refreshToken;a.b = fg(b[zg] || "");a.a = c;
	  }function ym(a, b) {
	    a.b = b.b;a.a = b.a;
	  }
	  function zm(a, b) {
	    return Si(a.c, b).then(function (c) {
	      a.b = fg(c.access_token);a.a = c.refresh_token;return { accessToken: a.b.toString(), refreshToken: a.a };
	    }).s(function (c) {
	      "auth/user-token-expired" == c.code && (a.a = null);throw c;
	    });
	  }vm.prototype.getToken = function (a) {
	    a = !!a;return this.b && !this.a ? E(new t("user-token-expired")) : a || !this.b || ua() > wm(this) - 3E4 ? this.a ? zm(this, { grant_type: "refresh_token", refresh_token: this.a }) : D(null) : D({ accessToken: this.b.toString(), refreshToken: this.a });
	  };function Am(a, b) {
	    this.a = a || null;this.b = b || null;N(this, { lastSignInTime: Ye(b || null), creationTime: Ye(a || null) });
	  }function Bm(a) {
	    return new Am(a.a, a.b);
	  }Am.prototype.w = function () {
	    return { lastLoginAt: this.b, createdAt: this.a };
	  };function Cm(a, b, c, d, e, f) {
	    N(this, { uid: a, displayName: d || null, photoURL: e || null, email: c || null, phoneNumber: f || null, providerId: b });
	  }
	  function Dm(a, b, c) {
	    this.G = [];this.l = a.apiKey;this.m = a.appName;this.o = a.authDomain || null;var d = firebase.SDK_VERSION ? Je(firebase.SDK_VERSION) : null;this.a = new Ei(this.l, Aa(Ba), d);a.emulatorConfig && Li(this.a, a.emulatorConfig);this.b = new vm(this.a);Em(this, b[zg]);xm(this.b, b);M(this, "refreshToken", this.b.a);Fm(this, c || {});H.call(this);this.P = !1;this.o && Me() && (this.i = Sl(this.o, this.l, this.m));this.R = [];this.f = null;this.u = Gm(this);this.$ = q(this.gb, this);var e = this;this.pa = null;this.Ba = function (f) {
	      e.wa(f.h);
	    };
	    this.ba = null;this.za = function (f) {
	      Li(e.a, f.c);
	    };this.W = null;this.X = [];this.Aa = function (f) {
	      Hm(e, f.f);
	    };this.aa = null;this.N = new om(this, c);M(this, "multiFactor", this.N);
	  }r(Dm, H);Dm.prototype.wa = function (a) {
	    this.pa = a;Ki(this.a, a);
	  };Dm.prototype.ka = function () {
	    return this.pa;
	  };function Im(a, b) {
	    a.ba && G(a.ba, "languageCodeChanged", a.Ba);(a.ba = b) && jd(b, "languageCodeChanged", a.Ba);
	  }function Jm(a, b) {
	    a.W && G(a.W, "emulatorConfigChanged", a.za);(a.W = b) && jd(b, "emulatorConfigChanged", a.za);
	  }
	  function Hm(a, b) {
	    a.X = b;Ni(a.a, firebase.SDK_VERSION ? Je(firebase.SDK_VERSION, a.X) : null);
	  }Dm.prototype.Ga = function () {
	    return Xa(this.X);
	  };function Km(a, b) {
	    a.aa && G(a.aa, "frameworkChanged", a.Aa);(a.aa = b) && jd(b, "frameworkChanged", a.Aa);
	  }Dm.prototype.gb = function () {
	    this.u.b && (this.u.stop(), this.u.start());
	  };function Lm(a) {
	    try {
	      return firebase.app(a.m).auth();
	    } catch (b) {
	      throw new t("internal-error", "No firebase.auth.Auth instance is available for the Firebase App '" + a.m + "'!");
	    }
	  }
	  function Gm(a) {
	    return new sm(function () {
	      return a.I(!0);
	    }, function (b) {
	      return b && "auth/network-request-failed" == b.code ? !0 : !1;
	    }, function () {
	      var b = wm(a.b) - ua() - 3E5;return 0 < b ? b : 0;
	    });
	  }function Mm(a) {
	    a.A || a.u.b || (a.u.start(), G(a, "tokenChanged", a.$), jd(a, "tokenChanged", a.$));
	  }function Nm(a) {
	    G(a, "tokenChanged", a.$);a.u.stop();
	  }function Em(a, b) {
	    a.ya = b;M(a, "_lat", b);
	  }function Om(a, b) {
	    Va(a.R, function (c) {
	      return c == b;
	    });
	  }
	  function Pm(a) {
	    for (var b = [], c = 0; c < a.R.length; c++) {
	      b.push(a.R[c](a));
	    }return Fc(b).then(function () {
	      return a;
	    });
	  }function Qm(a) {
	    a.i && !a.P && (a.P = !0, Kl(a.i, a));
	  }function Fm(a, b) {
	    N(a, { uid: b.uid, displayName: b.displayName || null, photoURL: b.photoURL || null, email: b.email || null, emailVerified: b.emailVerified || !1, phoneNumber: b.phoneNumber || null, isAnonymous: b.isAnonymous || !1, tenantId: b.tenantId || null, metadata: new Am(b.createdAt, b.lastLoginAt), providerData: [] });a.a.b = a.tenantId;
	  }M(Dm.prototype, "providerId", "firebase");
	  function Rm() {}function Sm(a) {
	    return D().then(function () {
	      if (a.A) throw new t("app-deleted");
	    });
	  }function Tm(a) {
	    return Pa(a.providerData, function (b) {
	      return b.providerId;
	    });
	  }function Um(a, b) {
	    b && (Vm(a, b.providerId), a.providerData.push(b));
	  }function Vm(a, b) {
	    Va(a.providerData, function (c) {
	      return c.providerId == b;
	    });
	  }function Wm(a, b, c) {
	    ("uid" != b || c) && a.hasOwnProperty(b) && M(a, b, c);
	  }
	  function Xm(a, b) {
	    a != b && (N(a, { uid: b.uid, displayName: b.displayName, photoURL: b.photoURL, email: b.email, emailVerified: b.emailVerified, phoneNumber: b.phoneNumber, isAnonymous: b.isAnonymous, tenantId: b.tenantId, providerData: [] }), b.metadata ? M(a, "metadata", Bm(b.metadata)) : M(a, "metadata", new Am()), w(b.providerData, function (c) {
	      Um(a, c);
	    }), ym(a.b, b.b), M(a, "refreshToken", a.b.a), pm(a.N, b.N.b));
	  }k = Dm.prototype;k.reload = function () {
	    var a = this;return R(this, Sm(this).then(function () {
	      return Ym(a).then(function () {
	        return Pm(a);
	      }).then(Rm);
	    }));
	  };
	  function Ym(a) {
	    return a.I().then(function (b) {
	      var c = a.isAnonymous;return Zm(a, b).then(function () {
	        c || Wm(a, "isAnonymous", !1);return b;
	      });
	    });
	  }k.nc = function (a) {
	    return this.I(a).then(function (b) {
	      return new cm(b);
	    });
	  };k.I = function (a) {
	    var b = this;return R(this, Sm(this).then(function () {
	      return b.b.getToken(a);
	    }).then(function (c) {
	      if (!c) throw new t("internal-error");c.accessToken != b.ya && (Em(b, c.accessToken), b.dispatchEvent(new nm("tokenChanged")));Wm(b, "refreshToken", c.refreshToken);return c.accessToken;
	    }));
	  };
	  function rm(a, b) {
	    b[zg] && a.ya != b[zg] && (xm(a.b, b), a.dispatchEvent(new nm("tokenChanged")), Em(a, b[zg]), Wm(a, "refreshToken", a.b.a));
	  }function Zm(a, b) {
	    return O(a.a, Ej, { idToken: b }).then(q(a.Jc, a));
	  }
	  k.Jc = function (a) {
	    a = a.users;if (!a || !a.length) throw new t("internal-error");a = a[0];Fm(this, { uid: a.localId, displayName: a.displayName, photoURL: a.photoUrl, email: a.email, emailVerified: !!a.emailVerified, phoneNumber: a.phoneNumber, lastLoginAt: a.lastLoginAt, createdAt: a.createdAt, tenantId: a.tenantId });for (var b = $m(a), c = 0; c < b.length; c++) {
	      Um(this, b[c]);
	    }Wm(this, "isAnonymous", !(this.email && a.passwordHash) && !(this.providerData && this.providerData.length));this.dispatchEvent(new nm("userReloaded", { gd: a }));
	  };
	  function $m(a) {
	    return (a = a.providerUserInfo) && a.length ? Pa(a, function (b) {
	      return new Cm(b.rawId, b.providerId, b.email, b.displayName, b.photoUrl, b.phoneNumber);
	    }) : [];
	  }k.Kc = function (a) {
	    cf("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.");return this.sb(a);
	  };
	  k.sb = function (a) {
	    var b = this,
	        c = null;return R(this, a.c(this.a, this.uid).then(function (d) {
	      rm(b, d);c = an(b, d, "reauthenticate");b.f = null;return b.reload();
	    }).then(function () {
	      return c;
	    }), !0);
	  };function bn(a, b) {
	    return Ym(a).then(function () {
	      if (Ta(Tm(a), b)) return Pm(a).then(function () {
	        throw new t("provider-already-linked");
	      });
	    });
	  }k.Bc = function (a) {
	    cf("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.");return this.pb(a);
	  };
	  k.pb = function (a) {
	    var b = this,
	        c = null;return R(this, bn(this, a.providerId).then(function () {
	      return b.I();
	    }).then(function (d) {
	      return a.b(b.a, d);
	    }).then(function (d) {
	      c = an(b, d, "link");return cn(b, d);
	    }).then(function () {
	      return c;
	    }));
	  };k.Cc = function (a, b) {
	    var c = this;return R(this, bn(this, "phone").then(function () {
	      return bm(Lm(c), a, b, q(c.pb, c));
	    }));
	  };k.Lc = function (a, b) {
	    var c = this;return R(this, D().then(function () {
	      return bm(Lm(c), a, b, q(c.sb, c));
	    }), !0);
	  };
	  function an(a, b, c) {
	    var d = mh(b);b = kg(b);return ff({ user: a, credential: d, additionalUserInfo: b, operationType: c });
	  }function cn(a, b) {
	    rm(a, b);return a.reload().then(function () {
	      return a;
	    });
	  }k.Ab = function (a) {
	    var b = this;return R(this, this.I().then(function (c) {
	      return b.a.Ab(c, a);
	    }).then(function (c) {
	      rm(b, c);return b.reload();
	    }));
	  };k.dd = function (a) {
	    var b = this;return R(this, this.I().then(function (c) {
	      return a.b(b.a, c);
	    }).then(function (c) {
	      rm(b, c);return b.reload();
	    }));
	  };
	  k.Bb = function (a) {
	    var b = this;return R(this, this.I().then(function (c) {
	      return b.a.Bb(c, a);
	    }).then(function (c) {
	      rm(b, c);return b.reload();
	    }));
	  };
	  k.Cb = function (a) {
	    if (void 0 === a.displayName && void 0 === a.photoURL) return Sm(this);var b = this;return R(this, this.I().then(function (c) {
	      return b.a.Cb(c, { displayName: a.displayName, photoUrl: a.photoURL });
	    }).then(function (c) {
	      rm(b, c);Wm(b, "displayName", c.displayName || null);Wm(b, "photoURL", c.photoUrl || null);w(b.providerData, function (d) {
	        "password" === d.providerId && (M(d, "displayName", b.displayName), M(d, "photoURL", b.photoURL));
	      });return Pm(b);
	    }).then(Rm));
	  };
	  k.bd = function (a) {
	    var b = this;return R(this, Ym(this).then(function (c) {
	      return Ta(Tm(b), a) ? nj(b.a, c, [a]).then(function (d) {
	        var e = {};w(d.providerUserInfo || [], function (f) {
	          e[f.providerId] = !0;
	        });w(Tm(b), function (f) {
	          e[f] || Vm(b, f);
	        });e[hh.PROVIDER_ID] || M(b, "phoneNumber", null);return Pm(b);
	      }) : Pm(b).then(function () {
	        throw new t("no-such-provider");
	      });
	    }));
	  };
	  k.delete = function () {
	    var a = this;return R(this, this.I().then(function (b) {
	      return O(a.a, Bj, { idToken: b });
	    }).then(function () {
	      a.dispatchEvent(new nm("userDeleted"));
	    })).then(function () {
	      for (var b = 0; b < a.G.length; b++) {
	        a.G[b].cancel("app-deleted");
	      }Im(a, null);Jm(a, null);Km(a, null);a.G = [];a.A = !0;Nm(a);M(a, "refreshToken", null);a.i && Ll(a.i, a);
	    });
	  };
	  k.Eb = function (a, b) {
	    return "linkViaPopup" == a && (this.h || null) == b && this.g || "reauthViaPopup" == a && (this.h || null) == b && this.g || "linkViaRedirect" == a && (this.ga || null) == b || "reauthViaRedirect" == a && (this.ga || null) == b ? !0 : !1;
	  };k.ma = function (a, b, c, d) {
	    "linkViaPopup" != a && "reauthViaPopup" != a || d != (this.h || null) || (c && this.O ? this.O(c) : b && !c && this.g && this.g(b), this.c && (this.c.cancel(), this.c = null), delete this.g, delete this.O);
	  };
	  k.Fa = function (a, b) {
	    return "linkViaPopup" == a && b == (this.h || null) ? q(this.Jb, this) : "reauthViaPopup" == a && b == (this.h || null) ? q(this.Kb, this) : "linkViaRedirect" == a && (this.ga || null) == b ? q(this.Jb, this) : "reauthViaRedirect" == a && (this.ga || null) == b ? q(this.Kb, this) : null;
	  };k.Dc = function (a) {
	    var b = this;return dn(this, "linkViaPopup", a, function () {
	      return bn(b, a.providerId).then(function () {
	        return Pm(b);
	      });
	    }, !1);
	  };k.Mc = function (a) {
	    return dn(this, "reauthViaPopup", a, function () {
	      return D();
	    }, !0);
	  };
	  function dn(a, b, c, d, e) {
	    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));if (a.f && !e) return E(a.f);var f = jg(c.providerId),
	        g = Le(a.uid + ":::"),
	        h = null;(!Oe() || De()) && a.o && c.isOAuthProvider && (h = ak(a.o, a.l, a.m, b, c, null, g, firebase.SDK_VERSION || null, null, null, a.tenantId));var m = ue(h, f && f.ua, f && f.ta);d = d().then(function () {
	      en(a);if (!e) return a.I().then(function () {});
	    }).then(function () {
	      return Ol(a.i, m, b, c, g, !!h, a.tenantId);
	    }).then(function () {
	      return new C(function (p, v) {
	        a.ma(b, null, new t("cancelled-popup-request"), a.h || null);a.g = p;a.O = v;a.h = g;a.c = Ql(a.i, a, b, m, g);
	      });
	    }).then(function (p) {
	      m && te(m);return p ? ff(p) : null;
	    }).s(function (p) {
	      m && te(m);throw p;
	    });return R(a, d, e);
	  }k.Ec = function (a) {
	    var b = this;return fn(this, "linkViaRedirect", a, function () {
	      return bn(b, a.providerId);
	    }, !1);
	  };k.Nc = function (a) {
	    return fn(this, "reauthViaRedirect", a, function () {
	      return D();
	    }, !0);
	  };
	  function fn(a, b, c, d, e) {
	    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));if (a.f && !e) return E(a.f);var f = null,
	        g = Le(a.uid + ":::");d = d().then(function () {
	      en(a);if (!e) return a.I().then(function () {});
	    }).then(function () {
	      a.ga = g;return Pm(a);
	    }).then(function (h) {
	      a.ha && (h = a.ha, h = h.b.set(gn, a.w(), h.a));return h;
	    }).then(function () {
	      return Pl(a.i, b, c, g, a.tenantId);
	    }).s(function (h) {
	      f = h;if (a.ha) return hn(a.ha);throw f;
	    }).then(function () {
	      if (f) throw f;
	    });return R(a, d, e);
	  }
	  function en(a) {
	    if (!a.i || !a.P) {
	      if (a.i && !a.P) throw new t("internal-error");throw new t("auth-domain-config-required");
	    }
	  }k.Jb = function (a, b, c, d) {
	    var e = this;this.c && (this.c.cancel(), this.c = null);var f = null;c = this.I().then(function (g) {
	      return Dg(e.a, { requestUri: a, postBody: d, sessionId: b, idToken: g });
	    }).then(function (g) {
	      f = an(e, g, "link");return cn(e, g);
	    }).then(function () {
	      return f;
	    });return R(this, c);
	  };
	  k.Kb = function (a, b, c, d) {
	    var e = this;this.c && (this.c.cancel(), this.c = null);var f = null,
	        g = D().then(function () {
	      return yg(Eg(e.a, { requestUri: a, sessionId: b, postBody: d, tenantId: c }), e.uid);
	    }).then(function (h) {
	      f = an(e, h, "reauthenticate");rm(e, h);e.f = null;return e.reload();
	    }).then(function () {
	      return f;
	    });return R(this, g, !0);
	  };
	  k.tb = function (a) {
	    var b = this,
	        c = null;return R(this, this.I().then(function (d) {
	      c = d;return "undefined" === typeof a || kb(a) ? {} : Yf(new Of(a));
	    }).then(function (d) {
	      return b.a.tb(c, d);
	    }).then(function (d) {
	      if (b.email != d) return b.reload();
	    }).then(function () {}));
	  };k.Db = function (a, b) {
	    var c = this,
	        d = null;return R(this, this.I().then(function (e) {
	      d = e;return "undefined" === typeof b || kb(b) ? {} : Yf(new Of(b));
	    }).then(function (e) {
	      return c.a.Db(d, a, e);
	    }).then(function (e) {
	      if (c.email != e) return c.reload();
	    }).then(function () {}));
	  };
	  function R(a, b, c) {
	    var d = jn(a, b, c);a.G.push(d);d.na(function () {
	      Ua(a.G, d);
	    });return d.s(function (e) {
	      var f = null;e && "auth/multi-factor-auth-required" === e.code && (f = hm(e.w(), Lm(a), q(a.ic, a)));throw f || e;
	    });
	  }k.ic = function (a) {
	    var b = null,
	        c = this;a = yg(D(a), c.uid).then(function (d) {
	      b = an(c, d, "reauthenticate");rm(c, d);c.f = null;return c.reload();
	    }).then(function () {
	      return b;
	    });return R(this, a, !0);
	  };
	  function jn(a, b, c) {
	    return a.f && !c ? (b.cancel(), E(a.f)) : b.s(function (d) {
	      !d || "auth/user-disabled" != d.code && "auth/user-token-expired" != d.code || (a.f || a.dispatchEvent(new nm("userInvalidated")), a.f = d);throw d;
	    });
	  }k.toJSON = function () {
	    return this.w();
	  };
	  k.w = function () {
	    var a = { uid: this.uid, displayName: this.displayName, photoURL: this.photoURL, email: this.email, emailVerified: this.emailVerified, phoneNumber: this.phoneNumber, isAnonymous: this.isAnonymous, tenantId: this.tenantId, providerData: [], apiKey: this.l, appName: this.m, authDomain: this.o, stsTokenManager: this.b.w(), redirectEventId: this.ga || null };this.metadata && z(a, this.metadata.w());w(this.providerData, function (b) {
	      a.providerData.push(gf(b));
	    });z(a, this.N.w());return a;
	  };
	  function kn(a) {
	    if (!a.apiKey) return null;var b = { apiKey: a.apiKey, authDomain: a.authDomain, appName: a.appName, emulatorConfig: a.emulatorConfig },
	        c = {};if (a.stsTokenManager && a.stsTokenManager.accessToken) c[zg] = a.stsTokenManager.accessToken, c.refreshToken = a.stsTokenManager.refreshToken || null;else return null;var d = new Dm(b, c, a);a.providerData && w(a.providerData, function (e) {
	      e && Um(d, ff(e));
	    });a.redirectEventId && (d.ga = a.redirectEventId);return d;
	  }
	  function ln(a, b, c, d) {
	    var e = new Dm(a, b);c && (e.ha = c);d && Hm(e, d);return e.reload().then(function () {
	      return e;
	    });
	  }function mn(a, b, c, d) {
	    var e = a.b,
	        f = {};f[zg] = e.b && e.b.toString();f.refreshToken = e.a;b = new Dm(b || { apiKey: a.l, authDomain: a.o, appName: a.m }, f);c && (b.ha = c);d && Hm(b, d);Xm(b, a);return b;
	  };function nn(a) {
	    this.a = a;this.b = Qk();
	  }var gn = { name: "redirectUser", D: "session" };function hn(a) {
	    return Uk(a.b, gn, a.a);
	  }function on(a, b) {
	    return a.b.get(gn, a.a).then(function (c) {
	      c && b && (c.authDomain = b);return kn(c || {});
	    });
	  };function pn(a) {
	    this.a = a;this.b = Qk();this.c = null;this.f = qn(this);this.b.addListener(rn("local"), this.a, q(this.g, this));
	  }pn.prototype.g = function () {
	    var a = this,
	        b = rn("local");sn(this, function () {
	      return D().then(function () {
	        return a.c && "local" != a.c.D ? a.b.get(b, a.a) : null;
	      }).then(function (c) {
	        if (c) return tn(a, "local").then(function () {
	          a.c = b;
	        });
	      });
	    });
	  };function tn(a, b) {
	    var c = [],
	        d;for (d in Mk) {
	      Mk[d] !== b && c.push(Uk(a.b, rn(Mk[d]), a.a));
	    }c.push(Uk(a.b, un, a.a));return Ec(c);
	  }
	  function qn(a) {
	    var b = rn("local"),
	        c = rn("session"),
	        d = rn("none");return Tk(a.b, b, a.a).then(function () {
	      return a.b.get(c, a.a);
	    }).then(function (e) {
	      return e ? c : a.b.get(d, a.a).then(function (f) {
	        return f ? d : a.b.get(b, a.a).then(function (g) {
	          return g ? b : a.b.get(un, a.a).then(function (h) {
	            return h ? rn(h) : b;
	          });
	        });
	      });
	    }).then(function (e) {
	      a.c = e;return tn(a, e.D);
	    }).s(function () {
	      a.c || (a.c = b);
	    });
	  }var un = { name: "persistence", D: "session" };function rn(a) {
	    return { name: "authUser", D: a };
	  }
	  pn.prototype.wb = function (a) {
	    var b = null,
	        c = this;Nk(a);return sn(this, function () {
	      return a != c.c.D ? c.b.get(c.c, c.a).then(function (d) {
	        b = d;return tn(c, a);
	      }).then(function () {
	        c.c = rn(a);if (b) return c.b.set(c.c, b, c.a);
	      }) : D();
	    });
	  };function vn(a) {
	    return sn(a, function () {
	      return a.b.set(un, a.c.D, a.a);
	    });
	  }function wn(a, b) {
	    return sn(a, function () {
	      return a.b.set(a.c, b.w(), a.a);
	    });
	  }function xn(a) {
	    return sn(a, function () {
	      return Uk(a.b, a.c, a.a);
	    });
	  }
	  function yn(a, b, c) {
	    return sn(a, function () {
	      return a.b.get(a.c, a.a).then(function (d) {
	        d && b && (d.authDomain = b);d && c && (d.emulatorConfig = c);return kn(d || {});
	      });
	    });
	  }function sn(a, b) {
	    a.f = a.f.then(b, b);return a.f;
	  };function zn(a) {
	    this.m = !1;M(this, "settings", new $l());M(this, "app", a);if (S(this).options && S(this).options.apiKey) a = firebase.SDK_VERSION ? Je(firebase.SDK_VERSION) : null, this.a = new Ei(S(this).options && S(this).options.apiKey, Aa(Ba), a);else throw new t("invalid-api-key");this.R = [];this.u = [];this.P = [];this.ac = firebase.INTERNAL.createSubscribe(q(this.yc, this));this.X = void 0;this.bc = firebase.INTERNAL.createSubscribe(q(this.zc, this));An(this, null);this.l = new pn(S(this).options.apiKey + ":" + S(this).name);this.G = new nn(S(this).options.apiKey + ":" + S(this).name);this.$ = T(this, Bn(this));this.i = T(this, Cn(this));this.ba = !1;this.pa = q(this.Yc, this);this.Ba = q(this.da, this);this.ya = q(this.kc, this);this.za = q(this.vc, this);this.Aa = q(this.wc, this);this.b = null;Dn(this);this.INTERNAL = {};this.INTERNAL["delete"] = q(this.delete, this);this.INTERNAL.logFramework = q(this.Fc, this);this.A = 0;H.call(this);En(this);this.N = [];this.f = null;
	  }r(zn, H);function Fn(a) {
	    F.call(this, "languageCodeChanged");this.h = a;
	  }r(Fn, F);
	  function Gn(a) {
	    F.call(this, "emulatorConfigChanged");this.c = a;
	  }r(Gn, F);function Hn(a) {
	    F.call(this, "frameworkChanged");this.f = a;
	  }r(Hn, F);k = zn.prototype;k.wb = function (a) {
	    a = this.l.wb(a);return T(this, a);
	  };k.wa = function (a) {
	    this.aa === a || this.m || (this.aa = a, Ki(this.a, this.aa), this.dispatchEvent(new Fn(this.ka())));
	  };k.ka = function () {
	    return this.aa;
	  };k.ed = function () {
	    var a = l.navigator;this.wa(a ? a.languages && a.languages[0] || a.language || a.userLanguage || null : null);
	  };
	  k.fd = function (a) {
	    if (!this.f) {
	      if (!/^https?:\/\//.test(a)) throw new t("argument-error", "Emulator URL must start with a valid scheme (http:// or https://).");In();this.f = { url: a };this.settings.hb = !0;Li(this.a, this.f);this.dispatchEvent(new Gn(this.f));
	    }
	  };
	  function In() {
	    Xe("WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.");l.document && ze().then(function () {
	      var a = l.document.createElement("div");a.innerText = "Running in emulator mode. Do not use with production credentials.";a.style.position = "fixed";a.style.width = "100%";a.style.backgroundColor = "#ffffff";a.style.border = ".1em solid #000000";a.style.color = "#ff0000";a.style.bottom = "0px";a.style.left = "0px";a.style.margin = "0px";a.style.zIndex = 1E4;a.style.textAlign = "center";a.classList.add("firebase-emulator-warning");l.document.body.appendChild(a);
	    });
	  }k.Fc = function (a) {
	    this.N.push(a);Ni(this.a, firebase.SDK_VERSION ? Je(firebase.SDK_VERSION, this.N) : null);this.dispatchEvent(new Hn(this.N));
	  };k.Ga = function () {
	    return Xa(this.N);
	  };k.xb = function (a) {
	    this.W === a || this.m || (this.W = a, this.a.b = this.W);
	  };k.S = function () {
	    return this.W;
	  };
	  function En(a) {
	    Object.defineProperty(a, "lc", { get: function get() {
	        return this.ka();
	      }, set: function set(b) {
	        this.wa(b);
	      }, enumerable: !1 });a.aa = null;Object.defineProperty(a, "ti", { get: function get() {
	        return this.S();
	      }, set: function set(b) {
	        this.xb(b);
	      }, enumerable: !1 });a.W = null;
	  }k.toJSON = function () {
	    return { apiKey: S(this).options.apiKey, authDomain: S(this).options.authDomain, appName: S(this).name, currentUser: U(this) && U(this).w() };
	  };function Jn(a) {
	    return a.gb || E(new t("auth-domain-config-required"));
	  }
	  function Dn(a) {
	    var b = S(a).options.authDomain,
	        c = S(a).options.apiKey;b && Me() && (a.gb = a.$.then(function () {
	      if (!a.m) {
	        a.b = Sl(b, c, S(a).name, a.f);Kl(a.b, a);U(a) && Qm(U(a));if (a.o) {
	          Qm(a.o);var d = a.o;d.wa(a.ka());Im(d, a);d = a.o;Hm(d, a.N);Km(d, a);d = a.o;Li(d.a, a.f);Jm(d, a);a.o = null;
	        }return a.b;
	      }
	    }));
	  }k.Eb = function (a, b) {
	    switch (a) {case "unknown":case "signInViaRedirect":
	        return !0;case "signInViaPopup":
	        return this.h == b && !!this.g;default:
	        return !1;}
	  };
	  k.ma = function (a, b, c, d) {
	    "signInViaPopup" == a && this.h == d && (c && this.O ? this.O(c) : b && !c && this.g && this.g(b), this.c && (this.c.cancel(), this.c = null), delete this.g, delete this.O);
	  };k.Fa = function (a, b) {
	    return "signInViaRedirect" == a || "signInViaPopup" == a && this.h == b && this.g ? q(this.hc, this) : null;
	  };k.hc = function (a, b, c, d) {
	    var e = this,
	        f = { requestUri: a, postBody: d, sessionId: b, tenantId: c };this.c && (this.c.cancel(), this.c = null);return e.$.then(function () {
	      return Kn(e, Bg(e.a, f));
	    });
	  };
	  k.Wc = function (a) {
	    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));var b = this,
	        c = jg(a.providerId),
	        d = Le(),
	        e = null;(!Oe() || De()) && S(this).options.authDomain && a.isOAuthProvider && (e = ak(S(this).options.authDomain, S(this).options.apiKey, S(this).name, "signInViaPopup", a, null, d, firebase.SDK_VERSION || null, null, null, this.S(), this.f));var f = ue(e, c && c.ua, c && c.ta);c = Jn(this).then(function (g) {
	      return Ol(g, f, "signInViaPopup", a, d, !!e, b.S());
	    }).then(function () {
	      return new C(function (g, h) {
	        b.ma("signInViaPopup", null, new t("cancelled-popup-request"), b.h);b.g = g;b.O = h;b.h = d;b.c = Ql(b.b, b, "signInViaPopup", f, d);
	      });
	    }).then(function (g) {
	      f && te(f);return g ? ff(g) : null;
	    }).s(function (g) {
	      f && te(f);throw g;
	    });return T(this, c);
	  };k.Xc = function (a) {
	    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));var b = this,
	        c = Jn(this).then(function () {
	      return vn(b.l);
	    }).then(function () {
	      return Pl(b.b, "signInViaRedirect", a, void 0, b.S());
	    });return T(this, c);
	  };
	  function Ln(a) {
	    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));var b = Jn(a).then(function () {
	      return a.b.qa();
	    }).then(function (c) {
	      return c ? ff(c) : null;
	    });return T(a, b);
	  }k.qa = function () {
	    var a = this;return Ln(this).then(function (b) {
	      a.b && Vl(a.b.b);return b;
	    }).s(function (b) {
	      a.b && Vl(a.b.b);throw b;
	    });
	  };
	  k.cd = function (a) {
	    if (!a) return E(new t("null-user"));if (this.W != a.tenantId) return E(new t("tenant-id-mismatch"));var b = this,
	        c = {};c.apiKey = S(this).options.apiKey;c.authDomain = S(this).options.authDomain;c.appName = S(this).name;var d = mn(a, c, b.G, b.Ga());return T(this, this.i.then(function () {
	      if (S(b).options.apiKey != a.l) return d.reload();
	    }).then(function () {
	      if (U(b) && a.uid == U(b).uid) return Xm(U(b), a), b.da(a);An(b, d);Qm(d);return b.da(d);
	    }).then(function () {
	      Mn(b);
	    }));
	  };
	  function Nn(a, b) {
	    var c = {};c.apiKey = S(a).options.apiKey;c.authDomain = S(a).options.authDomain;c.appName = S(a).name;a.f && (c.emulatorConfig = a.f);return a.$.then(function () {
	      return ln(c, b, a.G, a.Ga());
	    }).then(function (d) {
	      if (U(a) && d.uid == U(a).uid) return Xm(U(a), d), a.da(d);An(a, d);Qm(d);return a.da(d);
	    }).then(function () {
	      Mn(a);
	    });
	  }
	  function An(a, b) {
	    U(a) && (Om(U(a), a.Ba), G(U(a), "tokenChanged", a.ya), G(U(a), "userDeleted", a.za), G(U(a), "userInvalidated", a.Aa), Nm(U(a)));b && (b.R.push(a.Ba), jd(b, "tokenChanged", a.ya), jd(b, "userDeleted", a.za), jd(b, "userInvalidated", a.Aa), 0 < a.A && Mm(b));M(a, "currentUser", b);b && (b.wa(a.ka()), Im(b, a), Hm(b, a.N), Km(b, a), Li(b.a, a.f), Jm(b, a));
	  }k.zb = function () {
	    var a = this,
	        b = this.i.then(function () {
	      a.b && Vl(a.b.b);if (!U(a)) return D();An(a, null);return xn(a.l).then(function () {
	        Mn(a);
	      });
	    });return T(this, b);
	  };
	  function On(a) {
	    var b = on(a.G, S(a).options.authDomain).then(function (c) {
	      if (a.o = c) c.ha = a.G;return hn(a.G);
	    });return T(a, b);
	  }function Bn(a) {
	    var b = S(a).options.authDomain,
	        c = On(a).then(function () {
	      return yn(a.l, b, a.f);
	    }).then(function (d) {
	      return d ? (d.ha = a.G, a.o && (a.o.ga || null) == (d.ga || null) ? d : d.reload().then(function () {
	        return wn(a.l, d).then(function () {
	          return d;
	        });
	      }).s(function (e) {
	        return "auth/network-request-failed" == e.code ? d : xn(a.l);
	      })) : null;
	    }).then(function (d) {
	      An(a, d || null);
	    });return T(a, c);
	  }
	  function Cn(a) {
	    return a.$.then(function () {
	      return Ln(a);
	    }).s(function () {}).then(function () {
	      if (!a.m) return a.pa();
	    }).s(function () {}).then(function () {
	      if (!a.m) {
	        a.ba = !0;var b = a.l;b.b.addListener(rn("local"), b.a, a.pa);
	      }
	    });
	  }
	  k.Yc = function () {
	    var a = this;return yn(this.l, S(this).options.authDomain).then(function (b) {
	      if (!a.m) {
	        var c;if (c = U(a) && b) {
	          c = U(a).uid;var d = b.uid;c = void 0 === c || null === c || "" === c || void 0 === d || null === d || "" === d ? !1 : c == d;
	        }if (c) return Xm(U(a), b), U(a).I();if (U(a) || b) An(a, b), b && (Qm(b), b.ha = a.G), a.b && Kl(a.b, a), Mn(a);
	      }
	    });
	  };k.da = function (a) {
	    return wn(this.l, a);
	  };k.kc = function () {
	    Mn(this);this.da(U(this));
	  };k.vc = function () {
	    this.zb();
	  };k.wc = function () {
	    this.zb();
	  };
	  function Kn(a, b) {
	    var c = null,
	        d = null;return T(a, b.then(function (e) {
	      c = mh(e);d = kg(e);return Nn(a, e);
	    }, function (e) {
	      var f = null;e && "auth/multi-factor-auth-required" === e.code && (f = hm(e.w(), a, q(a.jc, a)));throw f || e;
	    }).then(function () {
	      return ff({ user: U(a), credential: c, additionalUserInfo: d, operationType: "signIn" });
	    }));
	  }k.jc = function (a) {
	    var b = this;return this.i.then(function () {
	      return Kn(b, D(a));
	    });
	  };k.yc = function (a) {
	    var b = this;this.addAuthTokenListener(function () {
	      a.next(U(b));
	    });
	  };
	  k.zc = function (a) {
	    var b = this;Pn(this, function () {
	      a.next(U(b));
	    });
	  };k.Hc = function (a, b, c) {
	    var d = this;this.ba && Promise.resolve().then(function () {
	      "function" === typeof a ? a(U(d)) : "function" === typeof a.next && a.next(U(d));
	    });return this.ac(a, b, c);
	  };k.Gc = function (a, b, c) {
	    var d = this;this.ba && Promise.resolve().then(function () {
	      d.X = d.getUid();"function" === typeof a ? a(U(d)) : "function" === typeof a.next && a.next(U(d));
	    });return this.bc(a, b, c);
	  };
	  k.mc = function (a) {
	    var b = this,
	        c = this.i.then(function () {
	      return U(b) ? U(b).I(a).then(function (d) {
	        return { accessToken: d };
	      }) : null;
	    });return T(this, c);
	  };k.Sc = function (a) {
	    var b = this;return this.i.then(function () {
	      return Kn(b, O(b.a, Gj, { token: a }));
	    }).then(function (c) {
	      var d = c.user;Wm(d, "isAnonymous", !1);b.da(d);return c;
	    });
	  };k.Tc = function (a, b) {
	    var c = this;return this.i.then(function () {
	      return Kn(c, O(c.a, Xg, { email: a, password: b }));
	    });
	  };
	  k.dc = function (a, b) {
	    var c = this;return this.i.then(function () {
	      return Kn(c, O(c.a, Aj, { email: a, password: b }));
	    });
	  };k.Za = function (a) {
	    var b = this;return this.i.then(function () {
	      return Kn(b, a.ja(b.a));
	    });
	  };k.Rc = function (a) {
	    cf("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.");return this.Za(a);
	  };
	  k.yb = function () {
	    var a = this;return this.i.then(function () {
	      var b = U(a);if (b && b.isAnonymous) {
	        var c = ff({ providerId: null, isNewUser: !1 });return ff({ user: b, credential: null, additionalUserInfo: c, operationType: "signIn" });
	      }return Kn(a, a.a.yb()).then(function (d) {
	        var e = d.user;Wm(e, "isAnonymous", !0);a.da(e);return d;
	      });
	    });
	  };function S(a) {
	    return a.app;
	  }function U(a) {
	    return a.currentUser;
	  }k.getUid = function () {
	    return U(this) && U(this).uid || null;
	  };function Qn(a) {
	    return U(a) && U(a)._lat || null;
	  }
	  function Mn(a) {
	    if (a.ba) {
	      for (var b = 0; b < a.u.length; b++) {
	        if (a.u[b]) a.u[b](Qn(a));
	      }if (a.X !== a.getUid() && a.P.length) for (a.X = a.getUid(), b = 0; b < a.P.length; b++) {
	        if (a.P[b]) a.P[b](Qn(a));
	      }
	    }
	  }k.cc = function (a) {
	    this.addAuthTokenListener(a);this.A++;0 < this.A && U(this) && Mm(U(this));
	  };k.Oc = function (a) {
	    var b = this;w(this.u, function (c) {
	      c == a && b.A--;
	    });0 > this.A && (this.A = 0);0 == this.A && U(this) && Nm(U(this));this.removeAuthTokenListener(a);
	  };
	  k.addAuthTokenListener = function (a) {
	    var b = this;this.u.push(a);T(this, this.i.then(function () {
	      b.m || Ta(b.u, a) && a(Qn(b));
	    }));
	  };k.removeAuthTokenListener = function (a) {
	    Va(this.u, function (b) {
	      return b == a;
	    });
	  };function Pn(a, b) {
	    a.P.push(b);T(a, a.i.then(function () {
	      !a.m && Ta(a.P, b) && a.X !== a.getUid() && (a.X = a.getUid(), b(Qn(a)));
	    }));
	  }
	  k.delete = function () {
	    this.m = !0;for (var a = 0; a < this.R.length; a++) {
	      this.R[a].cancel("app-deleted");
	    }this.R = [];this.l && (a = this.l, a.b.removeListener(rn("local"), a.a, this.pa));this.b && (Ll(this.b, this), Vl(this.b.b));return Promise.resolve();
	  };function T(a, b) {
	    a.R.push(b);b.na(function () {
	      Ua(a.R, b);
	    });return b;
	  }k.gc = function (a) {
	    return T(this, Xi(this.a, a));
	  };k.Ac = function (a) {
	    return !!bh(a);
	  };
	  k.vb = function (a, b) {
	    var c = this;return T(this, D().then(function () {
	      var d = new Of(b);if (!d.c) throw new t("argument-error", Wf + " must be true when sending sign in link to email");return Yf(d);
	    }).then(function (d) {
	      return c.a.vb(a, d);
	    }).then(function () {}));
	  };k.hd = function (a) {
	    return this.Qa(a).then(function (b) {
	      return b.data.email;
	    });
	  };k.mb = function (a, b) {
	    return T(this, this.a.mb(a, b).then(function () {}));
	  };k.Qa = function (a) {
	    return T(this, this.a.Qa(a).then(function (b) {
	      return new rf(b);
	    }));
	  };
	  k.ib = function (a) {
	    return T(this, this.a.ib(a).then(function () {}));
	  };k.ub = function (a, b) {
	    var c = this;return T(this, D().then(function () {
	      return "undefined" === typeof b || kb(b) ? {} : Yf(new Of(b));
	    }).then(function (d) {
	      return c.a.ub(a, d);
	    }).then(function () {}));
	  };k.Vc = function (a, b) {
	    return T(this, bm(this, a, b, q(this.Za, this)));
	  };
	  k.Uc = function (a, b) {
	    var c = this;return T(this, D().then(function () {
	      var d = b || me(),
	          e = ah(a, d);d = bh(d);if (!d) throw new t("argument-error", "Invalid email link!");if (d.tenantId !== c.S()) throw new t("tenant-id-mismatch");return c.Za(e);
	    }));
	  };function Rn() {}Rn.prototype.render = function () {};Rn.prototype.reset = function () {};Rn.prototype.getResponse = function () {};Rn.prototype.execute = function () {};function Sn() {
	    this.a = {};this.b = 1E12;
	  }var Tn = null;Sn.prototype.render = function (a, b) {
	    this.a[this.b.toString()] = new Un(a, b);return this.b++;
	  };Sn.prototype.reset = function (a) {
	    var b = Vn(this, a);a = Wn(a);b && a && (b.delete(), delete this.a[a]);
	  };Sn.prototype.getResponse = function (a) {
	    return (a = Vn(this, a)) ? a.getResponse() : null;
	  };Sn.prototype.execute = function (a) {
	    (a = Vn(this, a)) && a.execute();
	  };function Vn(a, b) {
	    return (b = Wn(b)) ? a.a[b] || null : null;
	  }function Wn(a) {
	    return (a = "undefined" === typeof a ? 1E12 : a) ? a.toString() : null;
	  }
	  function Un(a, b) {
	    this.g = !1;this.c = b;this.a = this.b = null;this.h = "invisible" !== this.c.size;this.f = fc(a);var c = this;this.i = function () {
	      c.execute();
	    };this.h ? this.execute() : jd(this.f, "click", this.i);
	  }Un.prototype.getResponse = function () {
	    Xn(this);return this.b;
	  };
	  Un.prototype.execute = function () {
	    Xn(this);var a = this;this.a || (this.a = setTimeout(function () {
	      a.b = He();var b = a.c.callback,
	          c = a.c["expired-callback"];if (b) try {
	        b(a.b);
	      } catch (d) {}a.a = setTimeout(function () {
	        a.a = null;a.b = null;if (c) try {
	          c();
	        } catch (d) {}a.h && a.execute();
	      }, 6E4);
	    }, 500));
	  };Un.prototype.delete = function () {
	    Xn(this);this.g = !0;clearTimeout(this.a);this.a = null;G(this.f, "click", this.i);
	  };function Xn(a) {
	    if (a.g) throw Error("reCAPTCHA mock was already deleted!");
	  };function Yn() {}M(Yn, "FACTOR_ID", "phone");function Zn() {}Zn.prototype.g = function () {
	    Tn || (Tn = new Sn());return D(Tn);
	  };Zn.prototype.c = function () {};var $n = null;function ao() {
	    this.b = l.grecaptcha ? Infinity : 0;this.f = null;this.a = "__rcb" + Math.floor(1E6 * Math.random()).toString();
	  }var bo = new ob(pb, "https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),
	      co = new Ue(3E4, 6E4);
	  ao.prototype.g = function (a) {
	    var b = this;return new C(function (c, d) {
	      var e = setTimeout(function () {
	        d(new t("network-request-failed"));
	      }, co.get());if (!l.grecaptcha || a !== b.f && !b.b) {
	        l[b.a] = function () {
	          if (l.grecaptcha) {
	            b.f = a;var g = l.grecaptcha.render;l.grecaptcha.render = function (h, m) {
	              h = g(h, m);b.b++;return h;
	            };clearTimeout(e);c(l.grecaptcha);
	          } else clearTimeout(e), d(new t("internal-error"));delete l[b.a];
	        };var f = xb(bo, { onload: b.a, hl: a || "" });D(xi(f)).s(function () {
	          clearTimeout(e);d(new t("internal-error", "Unable to load external reCAPTCHA dependencies!"));
	        });
	      } else clearTimeout(e), c(l.grecaptcha);
	    });
	  };ao.prototype.c = function () {
	    this.b--;
	  };var eo = null;function fo(a, b, c, d, e, f, g) {
	    M(this, "type", "recaptcha");this.c = this.f = null;this.A = !1;this.m = b;this.g = null;g ? ($n || ($n = new Zn()), g = $n) : (eo || (eo = new ao()), g = eo);this.v = g;this.a = c || { theme: "light", type: "image" };this.h = [];if (this.a[go]) throw new t("argument-error", "sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");this.i = "invisible" === this.a[ho];if (!l.document) throw new t("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");
	    if (!fc(b) || !this.i && fc(b).hasChildNodes()) throw new t("argument-error", "reCAPTCHA container is either not found or already contains inner elements!");this.o = new Ei(a, f || null, e || null);this.u = d || function () {
	      return null;
	    };var h = this;this.l = [];var m = this.a[io];this.a[io] = function (v) {
	      jo(h, v);if ("function" === typeof m) m(v);else if ("string" === typeof m) {
	        var B = L(m, l);"function" === typeof B && B(v);
	      }
	    };var p = this.a[ko];this.a[ko] = function () {
	      jo(h, null);if ("function" === typeof p) p();else if ("string" === typeof p) {
	        var v = L(p, l);"function" === typeof v && v();
	      }
	    };
	  }var io = "callback",
	      ko = "expired-callback",
	      go = "sitekey",
	      ho = "size";function jo(a, b) {
	    for (var c = 0; c < a.l.length; c++) {
	      try {
	        a.l[c](b);
	      } catch (d) {}
	    }
	  }function lo(a, b) {
	    Va(a.l, function (c) {
	      return c == b;
	    });
	  }function mo(a, b) {
	    a.h.push(b);b.na(function () {
	      Ua(a.h, b);
	    });return b;
	  }k = fo.prototype;
	  k.Ia = function () {
	    var a = this;return this.f ? this.f : this.f = mo(this, D().then(function () {
	      if (Ne() && !Ee()) return ze();throw new t("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");
	    }).then(function () {
	      return a.v.g(a.u());
	    }).then(function (b) {
	      a.g = b;return O(a.o, Fj, {});
	    }).then(function (b) {
	      a.a[go] = b.recaptchaSiteKey;
	    }).s(function (b) {
	      a.f = null;throw b;
	    }));
	  };
	  k.render = function () {
	    no(this);var a = this;return mo(this, this.Ia().then(function () {
	      if (null === a.c) {
	        var b = a.m;if (!a.i) {
	          var c = fc(b);b = ic("DIV");c.appendChild(b);
	        }a.c = a.g.render(b, a.a);
	      }return a.c;
	    }));
	  };k.verify = function () {
	    no(this);var a = this;return mo(this, this.render().then(function (b) {
	      return new C(function (c) {
	        var d = a.g.getResponse(b);if (d) c(d);else {
	          var e = function e(f) {
	            f && (lo(a, e), c(f));
	          };a.l.push(e);a.i && a.g.execute(a.c);
	        }
	      });
	    }));
	  };k.reset = function () {
	    no(this);null !== this.c && this.g.reset(this.c);
	  };
	  function no(a) {
	    if (a.A) throw new t("internal-error", "RecaptchaVerifier instance has been destroyed.");
	  }k.clear = function () {
	    no(this);this.A = !0;this.v.c();for (var a = 0; a < this.h.length; a++) {
	      this.h[a].cancel("RecaptchaVerifier instance has been destroyed.");
	    }if (!this.i) {
	      a = fc(this.m);for (var b; b = a.firstChild;) {
	        a.removeChild(b);
	      }
	    }
	  };
	  function oo(a, b, c) {
	    var d = !1;try {
	      this.b = c || firebase.app();
	    } catch (g) {
	      throw new t("argument-error", "No firebase.app.App instance is currently initialized.");
	    }if (this.b.options && this.b.options.apiKey) c = this.b.options.apiKey;else throw new t("invalid-api-key");var e = this,
	        f = null;try {
	      f = this.b.auth().Ga();
	    } catch (g) {}try {
	      d = this.b.auth().settings.appVerificationDisabledForTesting;
	    } catch (g) {}f = firebase.SDK_VERSION ? Je(firebase.SDK_VERSION, f) : null;fo.call(this, c, a, b, function () {
	      try {
	        var g = e.b.auth().ka();
	      } catch (h) {
	        g = null;
	      }return g;
	    }, f, Aa(Ba), d);
	  }r(oo, fo);function po(a, b, c, d) {
	    a: {
	      c = Array.prototype.slice.call(c);var e = 0;for (var f = !1, g = 0; g < b.length; g++) {
	        if (b[g].optional) f = !0;else {
	          if (f) throw new t("internal-error", "Argument validator encountered a required argument after an optional argument.");e++;
	        }
	      }f = b.length;if (c.length < e || f < c.length) d = "Expected " + (e == f ? 1 == e ? "1 argument" : e + " arguments" : e + "-" + f + " arguments") + " but got " + c.length + ".";else {
	        for (e = 0; e < c.length; e++) {
	          if (f = b[e].optional && void 0 === c[e], !b[e].K(c[e]) && !f) {
	            b = b[e];if (0 > e || e >= qo.length) throw new t("internal-error", "Argument validator received an unsupported number of arguments.");c = qo[e];d = (d ? "" : c + " argument ") + (b.name ? '"' + b.name + '" ' : "") + "must be " + b.J + ".";break a;
	          }
	        }d = null;
	      }
	    }if (d) throw new t("argument-error", a + " failed: " + d);
	  }var qo = "First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");function V(a, b) {
	    return { name: a || "", J: "a valid string", optional: !!b, K: function K(c) {
	        return "string" === typeof c;
	      } };
	  }
	  function ro(a, b) {
	    return { name: a || "", J: "a boolean", optional: !!b, K: function K(c) {
	        return "boolean" === typeof c;
	      } };
	  }function W(a, b) {
	    return { name: a || "", J: "a valid object", optional: !!b, K: n };
	  }function so(a, b) {
	    return { name: a || "", J: "a function", optional: !!b, K: function K(c) {
	        return "function" === typeof c;
	      } };
	  }function to(a, b) {
	    return { name: a || "", J: "null", optional: !!b, K: function K(c) {
	        return null === c;
	      } };
	  }function uo() {
	    return { name: "", J: "an HTML element", optional: !1, K: function K(a) {
	        return !!(a && a instanceof Element);
	      } };
	  }
	  function vo() {
	    return { name: "auth", J: "an instance of Firebase Auth", optional: !0, K: function K(a) {
	        return !!(a && a instanceof zn);
	      } };
	  }function wo() {
	    return { name: "app", J: "an instance of Firebase App", optional: !0, K: function K(a) {
	        return !!(a && a instanceof firebase.app.App);
	      } };
	  }function xo(a) {
	    return { name: a ? a + "Credential" : "credential", J: a ? "a valid " + a + " credential" : "a valid credential", optional: !1, K: function K(b) {
	        if (!b) return !1;var c = !a || b.providerId === a;return !(!b.ja || !c);
	      } };
	  }
	  function yo() {
	    return { name: "multiFactorAssertion", J: "a valid multiFactorAssertion", optional: !1, K: function K(a) {
	        return a ? !!a.rb : !1;
	      } };
	  }function zo() {
	    return { name: "authProvider", J: "a valid Auth provider", optional: !1, K: function K(a) {
	        return !!(a && a.providerId && a.hasOwnProperty && a.hasOwnProperty("isOAuthProvider"));
	      } };
	  }function Ao(a, b) {
	    return n(a) && "string" === typeof a.type && a.type === b && "function" === typeof a.Ha;
	  }function Bo(a) {
	    return n(a) && "string" === typeof a.uid;
	  }
	  function Co() {
	    return { name: "applicationVerifier", J: "an implementation of firebase.auth.ApplicationVerifier", optional: !1, K: function K(a) {
	        return !(!a || "string" !== typeof a.type || "function" !== typeof a.verify);
	      } };
	  }function X(a, b, c, d) {
	    return { name: c || "", J: a.J + " or " + b.J, optional: !!d, K: function K(e) {
	        return a.K(e) || b.K(e);
	      } };
	  };function Y(a, b) {
	    for (var c in b) {
	      var d = b[c].name;a[d] = Do(d, a[c], b[c].j);
	    }
	  }function Eo(a, b) {
	    for (var c in b) {
	      var d = b[c].name;d !== c && Object.defineProperty(a, d, { get: ta(function (e) {
	          return this[e];
	        }, c), set: ta(function (e, f, g, h) {
	          po(e, [g], [h], !0);this[f] = h;
	        }, d, c, b[c].jb), enumerable: !0 });
	    }
	  }function Z(a, b, c, d) {
	    a[b] = Do(b, c, d);
	  }
	  function Do(a, b, c) {
	    function d() {
	      var g = Array.prototype.slice.call(arguments);po(e, c, g);return b.apply(this, g);
	    }if (!c) return b;var e = Fo(a),
	        f;for (f in b) {
	      d[f] = b[f];
	    }for (f in b.prototype) {
	      d.prototype[f] = b.prototype[f];
	    }return d;
	  }function Fo(a) {
	    a = a.split(".");return a[a.length - 1];
	  };Y(zn.prototype, { ib: { name: "applyActionCode", j: [V("code")] }, Qa: { name: "checkActionCode", j: [V("code")] }, mb: { name: "confirmPasswordReset", j: [V("code"), V("newPassword")] }, dc: { name: "createUserWithEmailAndPassword", j: [V("email"), V("password")] }, gc: { name: "fetchSignInMethodsForEmail", j: [V("email")] }, qa: { name: "getRedirectResult", j: [] }, Ac: { name: "isSignInWithEmailLink", j: [V("emailLink")] }, Gc: { name: "onAuthStateChanged", j: [X(W(), so(), "nextOrObserver"), so("opt_error", !0), so("opt_completed", !0)] }, Hc: { name: "onIdTokenChanged",
	      j: [X(W(), so(), "nextOrObserver"), so("opt_error", !0), so("opt_completed", !0)] }, ub: { name: "sendPasswordResetEmail", j: [V("email"), X(W("opt_actionCodeSettings", !0), to(null, !0), "opt_actionCodeSettings", !0)] }, vb: { name: "sendSignInLinkToEmail", j: [V("email"), W("actionCodeSettings")] }, wb: { name: "setPersistence", j: [V("persistence")] }, Rc: { name: "signInAndRetrieveDataWithCredential", j: [xo()] }, yb: { name: "signInAnonymously", j: [] }, Za: { name: "signInWithCredential", j: [xo()] }, Sc: { name: "signInWithCustomToken", j: [V("token")] },
	    Tc: { name: "signInWithEmailAndPassword", j: [V("email"), V("password")] }, Uc: { name: "signInWithEmailLink", j: [V("email"), V("emailLink", !0)] }, Vc: { name: "signInWithPhoneNumber", j: [V("phoneNumber"), Co()] }, Wc: { name: "signInWithPopup", j: [zo()] }, Xc: { name: "signInWithRedirect", j: [zo()] }, cd: { name: "updateCurrentUser", j: [X(function (a) {
	        return { name: "user", J: "an instance of Firebase User", optional: !!a, K: function K(b) {
	            return !!(b && b instanceof Dm);
	          } };
	      }(), to(), "user")] }, zb: { name: "signOut", j: [] }, toJSON: { name: "toJSON", j: [V(null, !0)] }, ed: { name: "useDeviceLanguage", j: [] }, fd: { name: "useEmulator", j: [V("url")] }, hd: { name: "verifyPasswordResetCode", j: [V("code")] } });Eo(zn.prototype, { lc: { name: "languageCode", jb: X(V(), to(), "languageCode") }, ti: { name: "tenantId", jb: X(V(), to(), "tenantId") } });zn.Persistence = Mk;zn.Persistence.LOCAL = "local";zn.Persistence.SESSION = "session";zn.Persistence.NONE = "none";
	  Y(Dm.prototype, { "delete": { name: "delete", j: [] }, nc: { name: "getIdTokenResult", j: [ro("opt_forceRefresh", !0)] }, I: { name: "getIdToken", j: [ro("opt_forceRefresh", !0)] }, Bc: { name: "linkAndRetrieveDataWithCredential", j: [xo()] }, pb: { name: "linkWithCredential", j: [xo()] }, Cc: { name: "linkWithPhoneNumber", j: [V("phoneNumber"), Co()] }, Dc: { name: "linkWithPopup", j: [zo()] }, Ec: { name: "linkWithRedirect", j: [zo()] }, Kc: { name: "reauthenticateAndRetrieveDataWithCredential", j: [xo()] }, sb: { name: "reauthenticateWithCredential", j: [xo()] }, Lc: { name: "reauthenticateWithPhoneNumber",
	      j: [V("phoneNumber"), Co()] }, Mc: { name: "reauthenticateWithPopup", j: [zo()] }, Nc: { name: "reauthenticateWithRedirect", j: [zo()] }, reload: { name: "reload", j: [] }, tb: { name: "sendEmailVerification", j: [X(W("opt_actionCodeSettings", !0), to(null, !0), "opt_actionCodeSettings", !0)] }, toJSON: { name: "toJSON", j: [V(null, !0)] }, bd: { name: "unlink", j: [V("provider")] }, Ab: { name: "updateEmail", j: [V("email")] }, Bb: { name: "updatePassword", j: [V("password")] }, dd: { name: "updatePhoneNumber", j: [xo("phone")] }, Cb: { name: "updateProfile", j: [W("profile")] },
	    Db: { name: "verifyBeforeUpdateEmail", j: [V("email"), X(W("opt_actionCodeSettings", !0), to(null, !0), "opt_actionCodeSettings", !0)] } });Y(Sn.prototype, { execute: { name: "execute" }, render: { name: "render" }, reset: { name: "reset" }, getResponse: { name: "getResponse" } });Y(Rn.prototype, { execute: { name: "execute" }, render: { name: "render" }, reset: { name: "reset" }, getResponse: { name: "getResponse" } });Y(C.prototype, { na: { name: "finally" }, s: { name: "catch" }, then: { name: "then" } });
	  Eo($l.prototype, { appVerificationDisabled: { name: "appVerificationDisabledForTesting", jb: ro("appVerificationDisabledForTesting") } });Y(am.prototype, { confirm: { name: "confirm", j: [V("verificationCode")] } });Z(xg, "fromJSON", function (a) {
	    a = "string" === typeof a ? JSON.parse(a) : a;for (var b, c = [Ig, $g, gh, Fg], d = 0; d < c.length; d++) {
	      if (b = c[d](a)) return b;
	    }return null;
	  }, [X(V(), W(), "json")]);Z(Vg, "credential", function (a, b) {
	    return new Ug(a, b);
	  }, [V("email"), V("password")]);Y(Ug.prototype, { w: { name: "toJSON", j: [V(null, !0)] } });
	  Y(Mg.prototype, { Ca: { name: "addScope", j: [V("scope")] }, Ka: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(Mg, "credential", Ng, [X(V(), W(), "token")]);Z(Vg, "credentialWithLink", ah, [V("email"), V("emailLink")]);Y(Og.prototype, { Ca: { name: "addScope", j: [V("scope")] }, Ka: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(Og, "credential", Pg, [X(V(), W(), "token")]);Y(Qg.prototype, { Ca: { name: "addScope", j: [V("scope")] }, Ka: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });
	  Z(Qg, "credential", Rg, [X(V(), X(W(), to()), "idToken"), X(V(), to(), "accessToken", !0)]);Y(Sg.prototype, { Ka: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(Sg, "credential", Tg, [X(V(), W(), "token"), V("secret", !0)]);Y(Lg.prototype, { Ca: { name: "addScope", j: [V("scope")] }, credential: { name: "credential", j: [X(V(), X(W(), to()), "optionsOrIdToken"), X(V(), to(), "accessToken", !0)] }, Ka: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Y(Gg.prototype, { w: { name: "toJSON", j: [V(null, !0)] } });
	  Y(Ag.prototype, { w: { name: "toJSON", j: [V(null, !0)] } });Z(hh, "credential", lh, [V("verificationId"), V("verificationCode")]);
	  Y(hh.prototype, { eb: { name: "verifyPhoneNumber", j: [X(V(), function (a, b) {
	        return { name: a || "phoneInfoOptions", J: "valid phone info options", optional: !!b, K: function K(c) {
	            return c ? c.session && c.phoneNumber ? Ao(c.session, vg) && "string" === typeof c.phoneNumber : c.session && c.multiFactorHint ? Ao(c.session, wg) && Bo(c.multiFactorHint) : c.session && c.multiFactorUid ? Ao(c.session, wg) && "string" === typeof c.multiFactorUid : c.phoneNumber ? "string" === typeof c.phoneNumber : !1 : !1;
	          } };
	      }(), "phoneInfoOptions"), Co()] } });
	  Y(ch.prototype, { w: { name: "toJSON", j: [V(null, !0)] } });Y(t.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(uh.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(th.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(gm.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(dm.prototype, { Qc: { name: "resolveSignIn", j: [yo()] } });
	  Y(om.prototype, { Qb: { name: "getSession", j: [] }, ec: { name: "enroll", j: [yo(), V("displayName", !0)] }, ad: { name: "unenroll", j: [X({ name: "multiFactorInfo", J: "a valid multiFactorInfo", optional: !1, K: Bo }, V(), "multiFactorInfoIdentifier")] } });Y(oo.prototype, { clear: { name: "clear", j: [] }, render: { name: "render", j: [] }, verify: { name: "verify", j: [] } });Z(Ff, "parseLink", Nf, [V("link")]);Z(Yn, "assertion", function (a) {
	    return new mm(a);
	  }, [xo("phone")]);
	  (function () {
	    if ("undefined" !== typeof firebase && firebase.INTERNAL && firebase.INTERNAL.registerComponent) {
	      var a = { ActionCodeInfo: { Operation: { EMAIL_SIGNIN: wf, PASSWORD_RESET: "PASSWORD_RESET", RECOVER_EMAIL: "RECOVER_EMAIL", REVERT_SECOND_FACTOR_ADDITION: yf, VERIFY_AND_CHANGE_EMAIL: xf, VERIFY_EMAIL: "VERIFY_EMAIL" } }, Auth: zn, AuthCredential: xg, Error: t };Z(a, "EmailAuthProvider", Vg, []);Z(a, "FacebookAuthProvider", Mg, []);Z(a, "GithubAuthProvider", Og, []);Z(a, "GoogleAuthProvider", Qg, []);Z(a, "TwitterAuthProvider", Sg, []);
	      Z(a, "OAuthProvider", Lg, [V("providerId")]);Z(a, "SAMLAuthProvider", Kg, [V("providerId")]);Z(a, "PhoneAuthProvider", hh, [vo()]);Z(a, "RecaptchaVerifier", oo, [X(V(), uo(), "recaptchaContainer"), W("recaptchaParameters", !0), wo()]);Z(a, "ActionCodeURL", Ff, []);Z(a, "PhoneMultiFactorGenerator", Yn, []);firebase.INTERNAL.registerComponent({ name: "auth", instanceFactory: function instanceFactory(b) {
	          b = b.getProvider("app").getImmediate();return new zn(b);
	        }, multipleInstances: !1, serviceProps: a, instantiationMode: "LAZY", type: "PUBLIC" });firebase.INTERNAL.registerComponent({ name: "auth-internal",
	        instanceFactory: function instanceFactory(b) {
	          b = b.getProvider("auth").getImmediate();return { getUid: q(b.getUid, b), getToken: q(b.mc, b), addAuthTokenListener: q(b.cc, b), removeAuthTokenListener: q(b.Oc, b) };
	        }, multipleInstances: !1, instantiationMode: "LAZY", type: "PRIVATE" });firebase.registerVersion("@firebase/auth", "0.15.0");firebase.INTERNAL.extendNamespace({ User: Dm });
	    } else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");
	  })();
	}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});

	//# sourceMappingURL=auth.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _sweetalert = __webpack_require__(186);

	var _sweetalert2 = _interopRequireDefault(_sweetalert);

	var _config = __webpack_require__(176);

	__webpack_require__(183);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var RegisterDialog = function (_React$Component) {
	  _inherits(RegisterDialog, _React$Component);

	  function RegisterDialog(props) {
	    _classCallCheck(this, RegisterDialog);

	    var _this = _possibleConstructorReturn(this, (RegisterDialog.__proto__ || Object.getPrototypeOf(RegisterDialog)).call(this, props));

	    _this.handleEmail = _this.handleEmail.bind(_this);
	    _this.handlePassword = _this.handlePassword.bind(_this);
	    _this.handleConfirmPassword = _this.handleConfirmPassword.bind(_this);
	    _this.clickRegister = _this.clickRegister.bind(_this);
	    _this.makeLogin = _this.makeLogin.bind(_this), _this.AUTH = null;

	    _this.state = {
	      email: "",
	      password: "",
	      confirmPassword: "",
	      typeInputPassword: "password",
	      typeInputConfirmPassword: "password",
	      eye: "show",
	      eye2: "show"
	    };
	    return _this;
	  }

	  _createClass(RegisterDialog, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _config.appConfig)();

	      this.AUTH = _config.APP.auth();
	    }
	  }, {
	    key: "handleEmail",
	    value: function handleEmail(event) {
	      this.setState({
	        email: event.target.value
	      });
	    }
	  }, {
	    key: "handlePassword",
	    value: function handlePassword(event) {
	      this.setState({
	        password: event.target.value
	      });
	    }
	  }, {
	    key: "handleConfirmPassword",
	    value: function handleConfirmPassword(event) {
	      this.setState({
	        confirmPassword: event.target.value
	      });
	    }
	  }, {
	    key: "clickRegister",
	    value: function clickRegister() {
	      var _this2 = this;

	      var self = this;

	      if (!this.state.email || !this.state.password || this.state.password != this.state.confirmPassword) {
	        alert("All fields must be filled in or Password != Confirm Password!");
	      } else {
	        this.AUTH.createUserWithEmailAndPassword(this.state.email, this.state.password).then(function (cred) {
	          console.log(cred.user);

	          _this2.props.handleUidMain(cred.user.uid);
	        }).catch(function (error) {
	          console.error(error);

	          _sweetalert2.default.fire({
	            icon: "error",
	            text: error.message
	          });
	        });
	      }
	    }
	  }, {
	    key: "makeLogin",
	    value: function makeLogin() {
	      this.props.handleRegisterMain(0);
	    }
	  }, {
	    key: "handleTypeInputPassword",
	    value: function handleTypeInputPassword(eventState, typeState) {
	      if (this.state[eventState] == "password" && this.state[typeState] == "show") {
	        var _setState;

	        this.setState((_setState = {}, _defineProperty(_setState, eventState, "text"), _defineProperty(_setState, typeState, "hide"), _setState));
	        e.preventDefault();
	      } else {
	        var _setState2;

	        this.setState((_setState2 = {}, _defineProperty(_setState2, eventState, "password"), _defineProperty(_setState2, typeState, "show"), _setState2));
	        e.preventDefault();
	      }
	    }
	  }, {
	    key: "onKeyPressHandler",
	    value: function onKeyPressHandler(event) {
	      if (event.key == "Enter") {
	        this.clickRegister();
	        event.preventDefault();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this3 = this;

	      return _react2.default.createElement(
	        "div",
	        { className: "container" },
	        _react2.default.createElement(
	          "div",
	          { className: "row justify-content-center" },
	          _react2.default.createElement(
	            "div",
	            { className: "col-md-8" },
	            _react2.default.createElement(
	              "div",
	              { className: "card" },
	              _react2.default.createElement(
	                "div",
	                { className: "card-header" },
	                "Register"
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "card-body" },
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row" },
	                  _react2.default.createElement(
	                    "label",
	                    { className: "col-md-4 col-form-label text-md-right" },
	                    "E-Mail Address"
	                  ),
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-6" },
	                    _react2.default.createElement("input", {
	                      id: "email",
	                      type: "email",
	                      className: "form-control",
	                      name: "email",
	                      required: true,
	                      onChange: this.handleEmail,
	                      onKeyDown: function onKeyDown(event) {
	                        _this3.onKeyPressHandler(event);
	                      }
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row" },
	                  _react2.default.createElement(
	                    "label",
	                    { className: "col-md-4 col-form-label text-md-right" },
	                    "Password"
	                  ),
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-6" },
	                    _react2.default.createElement(
	                      "div",
	                      { className: "form-group has-search" },
	                      _react2.default.createElement("input", {
	                        id: "password",
	                        type: this.state.typeInputPassword,
	                        className: "form-control",
	                        name: "password",
	                        required: true,
	                        onChange: this.handlePassword,
	                        onKeyDown: function onKeyDown(event) {
	                          _this3.onKeyPressHandler(event);
	                        }
	                      }),
	                      _react2.default.createElement(
	                        "div",
	                        {
	                          style: {
	                            display: "flex",
	                            justifyContent: "flex-end"
	                          }
	                        },
	                        _react2.default.createElement(
	                          "button",
	                          {
	                            className: "btn",
	                            onClick: function onClick() {
	                              _this3.handleTypeInputPassword("typeInputPassword", "eye");
	                            }
	                          },
	                          _react2.default.createElement(
	                            "span",
	                            null,
	                            this.state.eye
	                          )
	                        ),
	                        " "
	                      )
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row" },
	                  _react2.default.createElement(
	                    "label",
	                    { className: "col-md-4 col-form-label text-md-right" },
	                    "Confirm Password"
	                  ),
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-6" },
	                    _react2.default.createElement(
	                      "div",
	                      { className: "form-group has-search" },
	                      _react2.default.createElement("input", {
	                        id: "password-confirm",
	                        type: this.state.typeInputConfirmPassword,
	                        className: "form-control",
	                        name: "password_confirmation",
	                        required: true,
	                        onChange: this.handleConfirmPassword,
	                        onKeyDown: function onKeyDown(event) {
	                          _this3.onKeyPressHandler(event);
	                        }
	                      }),
	                      _react2.default.createElement(
	                        "div",
	                        {
	                          style: {
	                            display: "flex",
	                            justifyContent: "flex-end"
	                          }
	                        },
	                        _react2.default.createElement(
	                          "button",
	                          {
	                            className: "btn",
	                            onClick: function onClick() {
	                              _this3.handleTypeInputPassword("typeInputConfirmPassword", "eye2");
	                            }
	                          },
	                          _react2.default.createElement(
	                            "span",
	                            null,
	                            this.state.eye2
	                          )
	                        )
	                      )
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  "div",
	                  { className: "form-group row mb-0" },
	                  _react2.default.createElement(
	                    "div",
	                    { className: "col-md-6 offset-md-4" },
	                    _react2.default.createElement(
	                      "button",
	                      {
	                        type: "button",
	                        className: "btn btn-primary size",
	                        onClick: this.clickRegister
	                      },
	                      "Register"
	                    ),
	                    _react2.default.createElement(
	                      "button",
	                      { className: "btn btn-link", onClick: this.makeLogin },
	                      "Login"
	                    )
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return RegisterDialog;
	}(_react2.default.Component);

	exports.default = RegisterDialog;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*!
	* sweetalert2 v11.10.5
	* Released under the MIT License.
	*/
	(function (global, factory) {
	  ( false ? 'undefined' : _typeof2(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());
	})(undefined, function () {
	  'use strict';

	  function _callSuper(t, o, e) {
	    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
	  }
	  function _construct(t, e, r) {
	    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
	    var o = [null];
	    o.push.apply(o, e);
	    var p = new (t.bind.apply(t, o))();
	    return r && _setPrototypeOf(p, r.prototype), p;
	  }
	  function _isNativeReflectConstruct() {
	    try {
	      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
	    } catch (t) {}
	    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
	      return !!t;
	    })();
	  }
	  function _iterableToArrayLimit(r, l) {
	    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
	    if (null != t) {
	      var e,
	          n,
	          i,
	          u,
	          a = [],
	          f = !0,
	          o = !1;
	      try {
	        if (i = (t = t.call(r)).next, 0 === l) {
	          if (Object(t) !== t) return;
	          f = !1;
	        } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0) {}
	      } catch (r) {
	        o = !0, n = r;
	      } finally {
	        try {
	          if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
	        } finally {
	          if (o) throw n;
	        }
	      }
	      return a;
	    }
	  }
	  function _toPrimitive(t, r) {
	    if ("object" != (typeof t === 'undefined' ? 'undefined' : _typeof2(t)) || !t) return t;
	    var e = t[Symbol.toPrimitive];
	    if (void 0 !== e) {
	      var i = e.call(t, r || "default");
	      if ("object" != (typeof i === 'undefined' ? 'undefined' : _typeof2(i))) return i;
	      throw new TypeError("@@toPrimitive must return a primitive value.");
	    }
	    return ("string" === r ? String : Number)(t);
	  }
	  function _toPropertyKey(t) {
	    var i = _toPrimitive(t, "string");
	    return "symbol" == (typeof i === 'undefined' ? 'undefined' : _typeof2(i)) ? i : String(i);
	  }
	  function _typeof(o) {
	    "@babel/helpers - typeof";

	    return _typeof = "function" == typeof Symbol && "symbol" == _typeof2(Symbol.iterator) ? function (o) {
	      return typeof o === 'undefined' ? 'undefined' : _typeof2(o);
	    } : function (o) {
	      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o === 'undefined' ? 'undefined' : _typeof2(o);
	    }, _typeof(o);
	  }
	  function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	      throw new TypeError("Cannot call a class as a function");
	    }
	  }
	  function _defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
	    }
	  }
	  function _createClass(Constructor, protoProps, staticProps) {
	    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) _defineProperties(Constructor, staticProps);
	    Object.defineProperty(Constructor, "prototype", {
	      writable: false
	    });
	    return Constructor;
	  }
	  function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	      throw new TypeError("Super expression must either be null or a function");
	    }
	    subClass.prototype = Object.create(superClass && superClass.prototype, {
	      constructor: {
	        value: subClass,
	        writable: true,
	        configurable: true
	      }
	    });
	    Object.defineProperty(subClass, "prototype", {
	      writable: false
	    });
	    if (superClass) _setPrototypeOf(subClass, superClass);
	  }
	  function _getPrototypeOf(o) {
	    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
	      return o.__proto__ || Object.getPrototypeOf(o);
	    };
	    return _getPrototypeOf(o);
	  }
	  function _setPrototypeOf(o, p) {
	    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
	      o.__proto__ = p;
	      return o;
	    };
	    return _setPrototypeOf(o, p);
	  }
	  function _assertThisInitialized(self) {
	    if (self === void 0) {
	      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	    }
	    return self;
	  }
	  function _possibleConstructorReturn(self, call) {
	    if (call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function")) {
	      return call;
	    } else if (call !== void 0) {
	      throw new TypeError("Derived constructors may only return object or undefined");
	    }
	    return _assertThisInitialized(self);
	  }
	  function _superPropBase(object, property) {
	    while (!Object.prototype.hasOwnProperty.call(object, property)) {
	      object = _getPrototypeOf(object);
	      if (object === null) break;
	    }
	    return object;
	  }
	  function _get() {
	    if (typeof Reflect !== "undefined" && Reflect.get) {
	      _get = Reflect.get.bind();
	    } else {
	      _get = function _get(target, property, receiver) {
	        var base = _superPropBase(target, property);
	        if (!base) return;
	        var desc = Object.getOwnPropertyDescriptor(base, property);
	        if (desc.get) {
	          return desc.get.call(arguments.length < 3 ? target : receiver);
	        }
	        return desc.value;
	      };
	    }
	    return _get.apply(this, arguments);
	  }
	  function _slicedToArray(arr, i) {
	    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
	  }
	  function _toConsumableArray(arr) {
	    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
	  }
	  function _arrayWithoutHoles(arr) {
	    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
	  }
	  function _arrayWithHoles(arr) {
	    if (Array.isArray(arr)) return arr;
	  }
	  function _iterableToArray(iter) {
	    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
	  }
	  function _unsupportedIterableToArray(o, minLen) {
	    if (!o) return;
	    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
	    var n = Object.prototype.toString.call(o).slice(8, -1);
	    if (n === "Object" && o.constructor) n = o.constructor.name;
	    if (n === "Map" || n === "Set") return Array.from(o);
	    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
	  }
	  function _arrayLikeToArray(arr, len) {
	    if (len == null || len > arr.length) len = arr.length;
	    for (var i = 0, arr2 = new Array(len); i < len; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  }
	  function _nonIterableSpread() {
	    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	  }
	  function _nonIterableRest() {
	    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	  }
	  function _classPrivateFieldGet(receiver, privateMap) {
	    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
	    return _classApplyDescriptorGet(receiver, descriptor);
	  }
	  function _classPrivateFieldSet(receiver, privateMap, value) {
	    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
	    _classApplyDescriptorSet(receiver, descriptor, value);
	    return value;
	  }
	  function _classExtractFieldDescriptor(receiver, privateMap, action) {
	    if (!privateMap.has(receiver)) {
	      throw new TypeError("attempted to " + action + " private field on non-instance");
	    }
	    return privateMap.get(receiver);
	  }
	  function _classApplyDescriptorGet(receiver, descriptor) {
	    if (descriptor.get) {
	      return descriptor.get.call(receiver);
	    }
	    return descriptor.value;
	  }
	  function _classApplyDescriptorSet(receiver, descriptor, value) {
	    if (descriptor.set) {
	      descriptor.set.call(receiver, value);
	    } else {
	      if (!descriptor.writable) {
	        throw new TypeError("attempted to set read only private field");
	      }
	      descriptor.value = value;
	    }
	  }
	  function _checkPrivateRedeclaration(obj, privateCollection) {
	    if (privateCollection.has(obj)) {
	      throw new TypeError("Cannot initialize the same private elements twice on an object");
	    }
	  }
	  function _classPrivateFieldInitSpec(obj, privateMap, value) {
	    _checkPrivateRedeclaration(obj, privateMap);
	    privateMap.set(obj, value);
	  }

	  var RESTORE_FOCUS_TIMEOUT = 100;

	  /** @type {GlobalState} */
	  var globalState = {};
	  var focusPreviousActiveElement = function focusPreviousActiveElement() {
	    if (globalState.previousActiveElement instanceof HTMLElement) {
	      globalState.previousActiveElement.focus();
	      globalState.previousActiveElement = null;
	    } else if (document.body) {
	      document.body.focus();
	    }
	  };

	  /**
	   * Restore previous active (focused) element
	   *
	   * @param {boolean} returnFocus
	   * @returns {Promise<void>}
	   */
	  var restoreActiveElement = function restoreActiveElement(returnFocus) {
	    return new Promise(function (resolve) {
	      if (!returnFocus) {
	        return resolve();
	      }
	      var x = window.scrollX;
	      var y = window.scrollY;
	      globalState.restoreFocusTimeout = setTimeout(function () {
	        focusPreviousActiveElement();
	        resolve();
	      }, RESTORE_FOCUS_TIMEOUT); // issues/900

	      window.scrollTo(x, y);
	    });
	  };

	  var swalPrefix = 'swal2-';

	  /**
	   * @typedef
	   * { | 'container'
	   *   | 'shown'
	   *   | 'height-auto'
	   *   | 'iosfix'
	   *   | 'popup'
	   *   | 'modal'
	   *   | 'no-backdrop'
	   *   | 'no-transition'
	   *   | 'toast'
	   *   | 'toast-shown'
	   *   | 'show'
	   *   | 'hide'
	   *   | 'close'
	   *   | 'title'
	   *   | 'html-container'
	   *   | 'actions'
	   *   | 'confirm'
	   *   | 'deny'
	   *   | 'cancel'
	   *   | 'default-outline'
	   *   | 'footer'
	   *   | 'icon'
	   *   | 'icon-content'
	   *   | 'image'
	   *   | 'input'
	   *   | 'file'
	   *   | 'range'
	   *   | 'select'
	   *   | 'radio'
	   *   | 'checkbox'
	   *   | 'label'
	   *   | 'textarea'
	   *   | 'inputerror'
	   *   | 'input-label'
	   *   | 'validation-message'
	   *   | 'progress-steps'
	   *   | 'active-progress-step'
	   *   | 'progress-step'
	   *   | 'progress-step-line'
	   *   | 'loader'
	   *   | 'loading'
	   *   | 'styled'
	   *   | 'top'
	   *   | 'top-start'
	   *   | 'top-end'
	   *   | 'top-left'
	   *   | 'top-right'
	   *   | 'center'
	   *   | 'center-start'
	   *   | 'center-end'
	   *   | 'center-left'
	   *   | 'center-right'
	   *   | 'bottom'
	   *   | 'bottom-start'
	   *   | 'bottom-end'
	   *   | 'bottom-left'
	   *   | 'bottom-right'
	   *   | 'grow-row'
	   *   | 'grow-column'
	   *   | 'grow-fullscreen'
	   *   | 'rtl'
	   *   | 'timer-progress-bar'
	   *   | 'timer-progress-bar-container'
	   *   | 'scrollbar-measure'
	   *   | 'icon-success'
	   *   | 'icon-warning'
	   *   | 'icon-info'
	   *   | 'icon-question'
	   *   | 'icon-error'
	   * } SwalClass
	   * @typedef {Record<SwalClass, string>} SwalClasses
	   */

	  /**
	   * @typedef {'success' | 'warning' | 'info' | 'question' | 'error'} SwalIcon
	   * @typedef {Record<SwalIcon, string>} SwalIcons
	   */

	  /** @type {SwalClass[]} */
	  var classNames = ['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error'];
	  var swalClasses = classNames.reduce(function (acc, className) {
	    acc[className] = swalPrefix + className;
	    return acc;
	  }, /** @type {SwalClasses} */{});

	  /** @type {SwalIcon[]} */
	  var icons = ['success', 'warning', 'info', 'question', 'error'];
	  var iconTypes = icons.reduce(function (acc, icon) {
	    acc[icon] = swalPrefix + icon;
	    return acc;
	  }, /** @type {SwalIcons} */{});

	  var consolePrefix = 'SweetAlert2:';

	  /**
	   * Capitalize the first letter of a string
	   *
	   * @param {string} str
	   * @returns {string}
	   */
	  var capitalizeFirstLetter = function capitalizeFirstLetter(str) {
	    return str.charAt(0).toUpperCase() + str.slice(1);
	  };

	  /**
	   * Standardize console warnings
	   *
	   * @param {string | string[]} message
	   */
	  var warn = function warn(message) {
	    console.warn("".concat(consolePrefix, " ").concat(_typeof(message) === 'object' ? message.join(' ') : message));
	  };

	  /**
	   * Standardize console errors
	   *
	   * @param {string} message
	   */
	  var error = function error(message) {
	    console.error("".concat(consolePrefix, " ").concat(message));
	  };

	  /**
	   * Private global state for `warnOnce`
	   *
	   * @type {string[]}
	   * @private
	   */
	  var previousWarnOnceMessages = [];

	  /**
	   * Show a console warning, but only if it hasn't already been shown
	   *
	   * @param {string} message
	   */
	  var warnOnce = function warnOnce(message) {
	    if (!previousWarnOnceMessages.includes(message)) {
	      previousWarnOnceMessages.push(message);
	      warn(message);
	    }
	  };

	  /**
	   * Show a one-time console warning about deprecated params/methods
	   *
	   * @param {string} deprecatedParam
	   * @param {string} useInstead
	   */
	  var warnAboutDeprecation = function warnAboutDeprecation(deprecatedParam, useInstead) {
	    warnOnce("\"".concat(deprecatedParam, "\" is deprecated and will be removed in the next major release. Please use \"").concat(useInstead, "\" instead."));
	  };

	  /**
	   * If `arg` is a function, call it (with no arguments or context) and return the result.
	   * Otherwise, just pass the value through
	   *
	   * @param {Function | any} arg
	   * @returns {any}
	   */
	  var callIfFunction = function callIfFunction(arg) {
	    return typeof arg === 'function' ? arg() : arg;
	  };

	  /**
	   * @param {any} arg
	   * @returns {boolean}
	   */
	  var hasToPromiseFn = function hasToPromiseFn(arg) {
	    return arg && typeof arg.toPromise === 'function';
	  };

	  /**
	   * @param {any} arg
	   * @returns {Promise<any>}
	   */
	  var asPromise = function asPromise(arg) {
	    return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);
	  };

	  /**
	   * @param {any} arg
	   * @returns {boolean}
	   */
	  var isPromise = function isPromise(arg) {
	    return arg && Promise.resolve(arg) === arg;
	  };

	  /**
	   * Gets the popup container which contains the backdrop and the popup itself.
	   *
	   * @returns {HTMLElement | null}
	   */
	  var getContainer = function getContainer() {
	    return document.body.querySelector(".".concat(swalClasses.container));
	  };

	  /**
	   * @param {string} selectorString
	   * @returns {HTMLElement | null}
	   */
	  var elementBySelector = function elementBySelector(selectorString) {
	    var container = getContainer();
	    return container ? container.querySelector(selectorString) : null;
	  };

	  /**
	   * @param {string} className
	   * @returns {HTMLElement | null}
	   */
	  var elementByClass = function elementByClass(className) {
	    return elementBySelector(".".concat(className));
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getPopup = function getPopup() {
	    return elementByClass(swalClasses.popup);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getIcon = function getIcon() {
	    return elementByClass(swalClasses.icon);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getIconContent = function getIconContent() {
	    return elementByClass(swalClasses['icon-content']);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getTitle = function getTitle() {
	    return elementByClass(swalClasses.title);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getHtmlContainer = function getHtmlContainer() {
	    return elementByClass(swalClasses['html-container']);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getImage = function getImage() {
	    return elementByClass(swalClasses.image);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getProgressSteps = function getProgressSteps() {
	    return elementByClass(swalClasses['progress-steps']);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getValidationMessage = function getValidationMessage() {
	    return elementByClass(swalClasses['validation-message']);
	  };

	  /**
	   * @returns {HTMLButtonElement | null}
	   */
	  var getConfirmButton = function getConfirmButton() {
	    return (/** @type {HTMLButtonElement} */elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.confirm))
	    );
	  };

	  /**
	   * @returns {HTMLButtonElement | null}
	   */
	  var getCancelButton = function getCancelButton() {
	    return (/** @type {HTMLButtonElement} */elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.cancel))
	    );
	  };

	  /**
	   * @returns {HTMLButtonElement | null}
	   */
	  var getDenyButton = function getDenyButton() {
	    return (/** @type {HTMLButtonElement} */elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.deny))
	    );
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getInputLabel = function getInputLabel() {
	    return elementByClass(swalClasses['input-label']);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getLoader = function getLoader() {
	    return elementBySelector(".".concat(swalClasses.loader));
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getActions = function getActions() {
	    return elementByClass(swalClasses.actions);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getFooter = function getFooter() {
	    return elementByClass(swalClasses.footer);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getTimerProgressBar = function getTimerProgressBar() {
	    return elementByClass(swalClasses['timer-progress-bar']);
	  };

	  /**
	   * @returns {HTMLElement | null}
	   */
	  var getCloseButton = function getCloseButton() {
	    return elementByClass(swalClasses.close);
	  };

	  // https://github.com/jkup/focusable/blob/master/index.js
	  var focusable = "\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n";
	  /**
	   * @returns {HTMLElement[]}
	   */
	  var getFocusableElements = function getFocusableElements() {
	    var popup = getPopup();
	    if (!popup) {
	      return [];
	    }
	    /** @type {NodeListOf<HTMLElement>} */
	    var focusableElementsWithTabindex = popup.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])');
	    var focusableElementsWithTabindexSorted = Array.from(focusableElementsWithTabindex)
	    // sort according to tabindex
	    .sort(function (a, b) {
	      var tabindexA = parseInt(a.getAttribute('tabindex') || '0');
	      var tabindexB = parseInt(b.getAttribute('tabindex') || '0');
	      if (tabindexA > tabindexB) {
	        return 1;
	      } else if (tabindexA < tabindexB) {
	        return -1;
	      }
	      return 0;
	    });

	    /** @type {NodeListOf<HTMLElement>} */
	    var otherFocusableElements = popup.querySelectorAll(focusable);
	    var otherFocusableElementsFiltered = Array.from(otherFocusableElements).filter(function (el) {
	      return el.getAttribute('tabindex') !== '-1';
	    });
	    return _toConsumableArray(new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))).filter(function (el) {
	      return isVisible$1(el);
	    });
	  };

	  /**
	   * @returns {boolean}
	   */
	  var isModal = function isModal() {
	    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);
	  };

	  /**
	   * @returns {boolean}
	   */
	  var isToast = function isToast() {
	    var popup = getPopup();
	    if (!popup) {
	      return false;
	    }
	    return hasClass(popup, swalClasses.toast);
	  };

	  /**
	   * @returns {boolean}
	   */
	  var isLoading = function isLoading() {
	    var popup = getPopup();
	    if (!popup) {
	      return false;
	    }
	    return popup.hasAttribute('data-loading');
	  };

	  /**
	   * Securely set innerHTML of an element
	   * https://github.com/sweetalert2/sweetalert2/issues/1926
	   *
	   * @param {HTMLElement} elem
	   * @param {string} html
	   */
	  var setInnerHtml = function setInnerHtml(elem, html) {
	    elem.textContent = '';
	    if (html) {
	      var parser = new DOMParser();
	      var parsed = parser.parseFromString(html, "text/html");
	      var head = parsed.querySelector('head');
	      head && Array.from(head.childNodes).forEach(function (child) {
	        elem.appendChild(child);
	      });
	      var body = parsed.querySelector('body');
	      body && Array.from(body.childNodes).forEach(function (child) {
	        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {
	          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507
	        } else {
	          elem.appendChild(child);
	        }
	      });
	    }
	  };

	  /**
	   * @param {HTMLElement} elem
	   * @param {string} className
	   * @returns {boolean}
	   */
	  var hasClass = function hasClass(elem, className) {
	    if (!className) {
	      return false;
	    }
	    var classList = className.split(/\s+/);
	    for (var i = 0; i < classList.length; i++) {
	      if (!elem.classList.contains(classList[i])) {
	        return false;
	      }
	    }
	    return true;
	  };

	  /**
	   * @param {HTMLElement} elem
	   * @param {SweetAlertOptions} params
	   */
	  var removeCustomClasses = function removeCustomClasses(elem, params) {
	    Array.from(elem.classList).forEach(function (className) {
	      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass || {}).includes(className)) {
	        elem.classList.remove(className);
	      }
	    });
	  };

	  /**
	   * @param {HTMLElement} elem
	   * @param {SweetAlertOptions} params
	   * @param {string} className
	   */
	  var applyCustomClass = function applyCustomClass(elem, params, className) {
	    removeCustomClasses(elem, params);
	    if (params.customClass && params.customClass[className]) {
	      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {
	        warn("Invalid type of customClass.".concat(className, "! Expected string or iterable object, got \"").concat(_typeof(params.customClass[className]), "\""));
	        return;
	      }
	      addClass(elem, params.customClass[className]);
	    }
	  };

	  /**
	   * @param {HTMLElement} popup
	   * @param {import('./renderers/renderInput').InputClass | SweetAlertInput} inputClass
	   * @returns {HTMLInputElement | null}
	   */
	  var getInput$1 = function getInput(popup, inputClass) {
	    if (!inputClass) {
	      return null;
	    }
	    switch (inputClass) {
	      case 'select':
	      case 'textarea':
	      case 'file':
	        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses[inputClass]));
	      case 'checkbox':
	        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.checkbox, " input"));
	      case 'radio':
	        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.radio, " input:checked")) || popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.radio, " input:first-child"));
	      case 'range':
	        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.range, " input"));
	      default:
	        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.input));
	    }
	  };

	  /**
	   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input
	   */
	  var focusInput = function focusInput(input) {
	    input.focus();

	    // place cursor at end of text in text input
	    if (input.type !== 'file') {
	      // http://stackoverflow.com/a/2345915
	      var val = input.value;
	      input.value = '';
	      input.value = val;
	    }
	  };

	  /**
	   * @param {HTMLElement | HTMLElement[] | null} target
	   * @param {string | string[] | readonly string[] | undefined} classList
	   * @param {boolean} condition
	   */
	  var toggleClass = function toggleClass(target, classList, condition) {
	    if (!target || !classList) {
	      return;
	    }
	    if (typeof classList === 'string') {
	      classList = classList.split(/\s+/).filter(Boolean);
	    }
	    classList.forEach(function (className) {
	      if (Array.isArray(target)) {
	        target.forEach(function (elem) {
	          condition ? elem.classList.add(className) : elem.classList.remove(className);
	        });
	      } else {
	        condition ? target.classList.add(className) : target.classList.remove(className);
	      }
	    });
	  };

	  /**
	   * @param {HTMLElement | HTMLElement[] | null} target
	   * @param {string | string[] | readonly string[] | undefined} classList
	   */
	  var addClass = function addClass(target, classList) {
	    toggleClass(target, classList, true);
	  };

	  /**
	   * @param {HTMLElement | HTMLElement[] | null} target
	   * @param {string | string[] | readonly string[] | undefined} classList
	   */
	  var removeClass = function removeClass(target, classList) {
	    toggleClass(target, classList, false);
	  };

	  /**
	   * Get direct child of an element by class name
	   *
	   * @param {HTMLElement} elem
	   * @param {string} className
	   * @returns {HTMLElement | undefined}
	   */
	  var getDirectChildByClass = function getDirectChildByClass(elem, className) {
	    var children = Array.from(elem.children);
	    for (var i = 0; i < children.length; i++) {
	      var child = children[i];
	      if (child instanceof HTMLElement && hasClass(child, className)) {
	        return child;
	      }
	    }
	  };

	  /**
	   * @param {HTMLElement} elem
	   * @param {string} property
	   * @param {*} value
	   */
	  var applyNumericalStyle = function applyNumericalStyle(elem, property, value) {
	    if (value === "".concat(parseInt(value))) {
	      value = parseInt(value);
	    }
	    if (value || parseInt(value) === 0) {
	      elem.style.setProperty(property, typeof value === 'number' ? "".concat(value, "px") : value);
	    } else {
	      elem.style.removeProperty(property);
	    }
	  };

	  /**
	   * @param {HTMLElement | null} elem
	   * @param {string} display
	   */
	  var show = function show(elem) {
	    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';
	    elem && (elem.style.display = display);
	  };

	  /**
	   * @param {HTMLElement | null} elem
	   */
	  var hide = function hide(elem) {
	    elem && (elem.style.display = 'none');
	  };

	  /**
	   * @param {HTMLElement | null} elem
	   * @param {string} display
	   */
	  var showWhenInnerHtmlPresent = function showWhenInnerHtmlPresent(elem) {
	    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'block';
	    if (!elem) {
	      return;
	    }
	    new MutationObserver(function () {
	      toggle(elem, elem.innerHTML, display);
	    }).observe(elem, {
	      childList: true,
	      subtree: true
	    });
	  };

	  /**
	   * @param {HTMLElement} parent
	   * @param {string} selector
	   * @param {string} property
	   * @param {string} value
	   */
	  var setStyle = function setStyle(parent, selector, property, value) {
	    /** @type {HTMLElement | null} */
	    var el = parent.querySelector(selector);
	    if (el) {
	      el.style.setProperty(property, value);
	    }
	  };

	  /**
	   * @param {HTMLElement} elem
	   * @param {any} condition
	   * @param {string} display
	   */
	  var toggle = function toggle(elem, condition) {
	    var display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';
	    condition ? show(elem, display) : hide(elem);
	  };

	  /**
	   * borrowed from jquery $(elem).is(':visible') implementation
	   *
	   * @param {HTMLElement | null} elem
	   * @returns {boolean}
	   */
	  var isVisible$1 = function isVisible(elem) {
	    return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));
	  };

	  /**
	   * @returns {boolean}
	   */
	  var allButtonsAreHidden = function allButtonsAreHidden() {
	    return !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());
	  };

	  /**
	   * @param {HTMLElement} elem
	   * @returns {boolean}
	   */
	  var isScrollable = function isScrollable(elem) {
	    return !!(elem.scrollHeight > elem.clientHeight);
	  };

	  /**
	   * borrowed from https://stackoverflow.com/a/46352119
	   *
	   * @param {HTMLElement} elem
	   * @returns {boolean}
	   */
	  var hasCssAnimation = function hasCssAnimation(elem) {
	    var style = window.getComputedStyle(elem);
	    var animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');
	    var transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');
	    return animDuration > 0 || transDuration > 0;
	  };

	  /**
	   * @param {number} timer
	   * @param {boolean} reset
	   */
	  var animateTimerProgressBar = function animateTimerProgressBar(timer) {
	    var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	    var timerProgressBar = getTimerProgressBar();
	    if (!timerProgressBar) {
	      return;
	    }
	    if (isVisible$1(timerProgressBar)) {
	      if (reset) {
	        timerProgressBar.style.transition = 'none';
	        timerProgressBar.style.width = '100%';
	      }
	      setTimeout(function () {
	        timerProgressBar.style.transition = "width ".concat(timer / 1000, "s linear");
	        timerProgressBar.style.width = '0%';
	      }, 10);
	    }
	  };
	  var stopTimerProgressBar = function stopTimerProgressBar() {
	    var timerProgressBar = getTimerProgressBar();
	    if (!timerProgressBar) {
	      return;
	    }
	    var timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
	    timerProgressBar.style.removeProperty('transition');
	    timerProgressBar.style.width = '100%';
	    var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
	    var timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;
	    timerProgressBar.style.width = "".concat(timerProgressBarPercent, "%");
	  };

	  /**
	   * Detect Node env
	   *
	   * @returns {boolean}
	   */
	  var isNodeEnv = function isNodeEnv() {
	    return typeof window === 'undefined' || typeof document === 'undefined';
	  };

	  var sweetHTML = "\n <div aria-labelledby=\"".concat(swalClasses.title, "\" aria-describedby=\"").concat(swalClasses['html-container'], "\" class=\"").concat(swalClasses.popup, "\" tabindex=\"-1\">\n   <button type=\"button\" class=\"").concat(swalClasses.close, "\"></button>\n   <ul class=\"").concat(swalClasses['progress-steps'], "\"></ul>\n   <div class=\"").concat(swalClasses.icon, "\"></div>\n   <img class=\"").concat(swalClasses.image, "\" />\n   <h2 class=\"").concat(swalClasses.title, "\" id=\"").concat(swalClasses.title, "\"></h2>\n   <div class=\"").concat(swalClasses['html-container'], "\" id=\"").concat(swalClasses['html-container'], "\"></div>\n   <input class=\"").concat(swalClasses.input, "\" id=\"").concat(swalClasses.input, "\" />\n   <input type=\"file\" class=\"").concat(swalClasses.file, "\" />\n   <div class=\"").concat(swalClasses.range, "\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"").concat(swalClasses.select, "\" id=\"").concat(swalClasses.select, "\"></select>\n   <div class=\"").concat(swalClasses.radio, "\"></div>\n   <label class=\"").concat(swalClasses.checkbox, "\">\n     <input type=\"checkbox\" id=\"").concat(swalClasses.checkbox, "\" />\n     <span class=\"").concat(swalClasses.label, "\"></span>\n   </label>\n   <textarea class=\"").concat(swalClasses.textarea, "\" id=\"").concat(swalClasses.textarea, "\"></textarea>\n   <div class=\"").concat(swalClasses['validation-message'], "\" id=\"").concat(swalClasses['validation-message'], "\"></div>\n   <div class=\"").concat(swalClasses.actions, "\">\n     <div class=\"").concat(swalClasses.loader, "\"></div>\n     <button type=\"button\" class=\"").concat(swalClasses.confirm, "\"></button>\n     <button type=\"button\" class=\"").concat(swalClasses.deny, "\"></button>\n     <button type=\"button\" class=\"").concat(swalClasses.cancel, "\"></button>\n   </div>\n   <div class=\"").concat(swalClasses.footer, "\"></div>\n   <div class=\"").concat(swalClasses['timer-progress-bar-container'], "\">\n     <div class=\"").concat(swalClasses['timer-progress-bar'], "\"></div>\n   </div>\n </div>\n").replace(/(^|\n)\s*/g, '');

	  /**
	   * @returns {boolean}
	   */
	  var resetOldContainer = function resetOldContainer() {
	    var oldContainer = getContainer();
	    if (!oldContainer) {
	      return false;
	    }
	    oldContainer.remove();
	    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);
	    return true;
	  };
	  var resetValidationMessage$1 = function resetValidationMessage() {
	    globalState.currentInstance.resetValidationMessage();
	  };
	  var addInputChangeListeners = function addInputChangeListeners() {
	    var popup = getPopup();
	    var input = getDirectChildByClass(popup, swalClasses.input);
	    var file = getDirectChildByClass(popup, swalClasses.file);
	    /** @type {HTMLInputElement} */
	    var range = popup.querySelector(".".concat(swalClasses.range, " input"));
	    /** @type {HTMLOutputElement} */
	    var rangeOutput = popup.querySelector(".".concat(swalClasses.range, " output"));
	    var select = getDirectChildByClass(popup, swalClasses.select);
	    /** @type {HTMLInputElement} */
	    var checkbox = popup.querySelector(".".concat(swalClasses.checkbox, " input"));
	    var textarea = getDirectChildByClass(popup, swalClasses.textarea);
	    input.oninput = resetValidationMessage$1;
	    file.onchange = resetValidationMessage$1;
	    select.onchange = resetValidationMessage$1;
	    checkbox.onchange = resetValidationMessage$1;
	    textarea.oninput = resetValidationMessage$1;
	    range.oninput = function () {
	      resetValidationMessage$1();
	      rangeOutput.value = range.value;
	    };
	    range.onchange = function () {
	      resetValidationMessage$1();
	      rangeOutput.value = range.value;
	    };
	  };

	  /**
	   * @param {string | HTMLElement} target
	   * @returns {HTMLElement}
	   */
	  var getTarget = function getTarget(target) {
	    return typeof target === 'string' ? document.querySelector(target) : target;
	  };

	  /**
	   * @param {SweetAlertOptions} params
	   */
	  var setupAccessibility = function setupAccessibility(params) {
	    var popup = getPopup();
	    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');
	    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');
	    if (!params.toast) {
	      popup.setAttribute('aria-modal', 'true');
	    }
	  };

	  /**
	   * @param {HTMLElement} targetElement
	   */
	  var setupRTL = function setupRTL(targetElement) {
	    if (window.getComputedStyle(targetElement).direction === 'rtl') {
	      addClass(getContainer(), swalClasses.rtl);
	    }
	  };

	  /**
	   * Add modal + backdrop + no-war message for Russians to DOM
	   *
	   * @param {SweetAlertOptions} params
	   */
	  var init = function init(params) {
	    // Clean up the old popup container if it exists
	    var oldContainerExisted = resetOldContainer();
	    if (isNodeEnv()) {
	      error('SweetAlert2 requires document to initialize');
	      return;
	    }
	    var container = document.createElement('div');
	    container.className = swalClasses.container;
	    if (oldContainerExisted) {
	      addClass(container, swalClasses['no-transition']);
	    }
	    setInnerHtml(container, sweetHTML);
	    var targetElement = getTarget(params.target);
	    targetElement.appendChild(container);
	    setupAccessibility(params);
	    setupRTL(targetElement);
	    addInputChangeListeners();
	  };

	  /**
	   * @param {HTMLElement | object | string} param
	   * @param {HTMLElement} target
	   */
	  var parseHtmlToContainer = function parseHtmlToContainer(param, target) {
	    // DOM element
	    if (param instanceof HTMLElement) {
	      target.appendChild(param);
	    }

	    // Object
	    else if (_typeof(param) === 'object') {
	        handleObject(param, target);
	      }

	      // Plain string
	      else if (param) {
	          setInnerHtml(target, param);
	        }
	  };

	  /**
	   * @param {any} param
	   * @param {HTMLElement} target
	   */
	  var handleObject = function handleObject(param, target) {
	    // JQuery element(s)
	    if (param.jquery) {
	      handleJqueryElem(target, param);
	    }

	    // For other objects use their string representation
	    else {
	        setInnerHtml(target, param.toString());
	      }
	  };

	  /**
	   * @param {HTMLElement} target
	   * @param {any} elem
	   */
	  var handleJqueryElem = function handleJqueryElem(target, elem) {
	    target.textContent = '';
	    if (0 in elem) {
	      for (var i = 0; i in elem; i++) {
	        target.appendChild(elem[i].cloneNode(true));
	      }
	    } else {
	      target.appendChild(elem.cloneNode(true));
	    }
	  };

	  /**
	   * @returns {'webkitAnimationEnd' | 'animationend' | false}
	   */
	  var animationEndEvent = function () {
	    // Prevent run in Node env
	    if (isNodeEnv()) {
	      return false;
	    }
	    var testEl = document.createElement('div');

	    // Chrome, Safari and Opera
	    if (typeof testEl.style.webkitAnimation !== 'undefined') {
	      return 'webkitAnimationEnd';
	    }

	    // Standard syntax
	    if (typeof testEl.style.animation !== 'undefined') {
	      return 'animationend';
	    }
	    return false;
	  }();

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderActions = function renderActions(instance, params) {
	    var actions = getActions();
	    var loader = getLoader();
	    if (!actions || !loader) {
	      return;
	    }

	    // Actions (buttons) wrapper
	    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {
	      hide(actions);
	    } else {
	      show(actions);
	    }

	    // Custom class
	    applyCustomClass(actions, params, 'actions');

	    // Render all the buttons
	    renderButtons(actions, loader, params);

	    // Loader
	    setInnerHtml(loader, params.loaderHtml || '');
	    applyCustomClass(loader, params, 'loader');
	  };

	  /**
	   * @param {HTMLElement} actions
	   * @param {HTMLElement} loader
	   * @param {SweetAlertOptions} params
	   */
	  function renderButtons(actions, loader, params) {
	    var confirmButton = getConfirmButton();
	    var denyButton = getDenyButton();
	    var cancelButton = getCancelButton();
	    if (!confirmButton || !denyButton || !cancelButton) {
	      return;
	    }

	    // Render buttons
	    renderButton(confirmButton, 'confirm', params);
	    renderButton(denyButton, 'deny', params);
	    renderButton(cancelButton, 'cancel', params);
	    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);
	    if (params.reverseButtons) {
	      if (params.toast) {
	        actions.insertBefore(cancelButton, confirmButton);
	        actions.insertBefore(denyButton, confirmButton);
	      } else {
	        actions.insertBefore(cancelButton, loader);
	        actions.insertBefore(denyButton, loader);
	        actions.insertBefore(confirmButton, loader);
	      }
	    }
	  }

	  /**
	   * @param {HTMLElement} confirmButton
	   * @param {HTMLElement} denyButton
	   * @param {HTMLElement} cancelButton
	   * @param {SweetAlertOptions} params
	   */
	  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {
	    if (!params.buttonsStyling) {
	      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);
	      return;
	    }
	    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);

	    // Buttons background colors
	    if (params.confirmButtonColor) {
	      confirmButton.style.backgroundColor = params.confirmButtonColor;
	      addClass(confirmButton, swalClasses['default-outline']);
	    }
	    if (params.denyButtonColor) {
	      denyButton.style.backgroundColor = params.denyButtonColor;
	      addClass(denyButton, swalClasses['default-outline']);
	    }
	    if (params.cancelButtonColor) {
	      cancelButton.style.backgroundColor = params.cancelButtonColor;
	      addClass(cancelButton, swalClasses['default-outline']);
	    }
	  }

	  /**
	   * @param {HTMLElement} button
	   * @param {'confirm' | 'deny' | 'cancel'} buttonType
	   * @param {SweetAlertOptions} params
	   */
	  function renderButton(button, buttonType, params) {
	    var buttonName = /** @type {'Confirm' | 'Deny' | 'Cancel'} */capitalizeFirstLetter(buttonType);
	    toggle(button, params["show".concat(buttonName, "Button")], 'inline-block');
	    setInnerHtml(button, params["".concat(buttonType, "ButtonText")] || ''); // Set caption text
	    button.setAttribute('aria-label', params["".concat(buttonType, "ButtonAriaLabel")] || ''); // ARIA label

	    // Add buttons custom classes
	    button.className = swalClasses[buttonType];
	    applyCustomClass(button, params, "".concat(buttonType, "Button"));
	  }

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderCloseButton = function renderCloseButton(instance, params) {
	    var closeButton = getCloseButton();
	    if (!closeButton) {
	      return;
	    }
	    setInnerHtml(closeButton, params.closeButtonHtml || '');

	    // Custom class
	    applyCustomClass(closeButton, params, 'closeButton');
	    toggle(closeButton, params.showCloseButton);
	    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel || '');
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderContainer = function renderContainer(instance, params) {
	    var container = getContainer();
	    if (!container) {
	      return;
	    }
	    handleBackdropParam(container, params.backdrop);
	    handlePositionParam(container, params.position);
	    handleGrowParam(container, params.grow);

	    // Custom class
	    applyCustomClass(container, params, 'container');
	  };

	  /**
	   * @param {HTMLElement} container
	   * @param {SweetAlertOptions['backdrop']} backdrop
	   */
	  function handleBackdropParam(container, backdrop) {
	    if (typeof backdrop === 'string') {
	      container.style.background = backdrop;
	    } else if (!backdrop) {
	      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);
	    }
	  }

	  /**
	   * @param {HTMLElement} container
	   * @param {SweetAlertOptions['position']} position
	   */
	  function handlePositionParam(container, position) {
	    if (!position) {
	      return;
	    }
	    if (position in swalClasses) {
	      addClass(container, swalClasses[position]);
	    } else {
	      warn('The "position" parameter is not valid, defaulting to "center"');
	      addClass(container, swalClasses.center);
	    }
	  }

	  /**
	   * @param {HTMLElement} container
	   * @param {SweetAlertOptions['grow']} grow
	   */
	  function handleGrowParam(container, grow) {
	    if (!grow) {
	      return;
	    }
	    addClass(container, swalClasses["grow-".concat(grow)]);
	  }

	  /**
	   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
	   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
	   * This is the approach that Babel will probably take to implement private methods/fields
	   *   https://github.com/tc39/proposal-private-methods
	   *   https://github.com/babel/babel/pull/7555
	   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
	   *   then we can use that language feature.
	   */

	  var privateProps = {
	    innerParams: new WeakMap(),
	    domCache: new WeakMap()
	  };

	  /** @type {InputClass[]} */
	  var inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderInput = function renderInput(instance, params) {
	    var popup = getPopup();
	    if (!popup) {
	      return;
	    }
	    var innerParams = privateProps.innerParams.get(instance);
	    var rerender = !innerParams || params.input !== innerParams.input;
	    inputClasses.forEach(function (inputClass) {
	      var inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);
	      if (!inputContainer) {
	        return;
	      }

	      // set attributes
	      setAttributes(inputClass, params.inputAttributes);

	      // set class
	      inputContainer.className = swalClasses[inputClass];
	      if (rerender) {
	        hide(inputContainer);
	      }
	    });
	    if (params.input) {
	      if (rerender) {
	        showInput(params);
	      }
	      // set custom class
	      setCustomClass(params);
	    }
	  };

	  /**
	   * @param {SweetAlertOptions} params
	   */
	  var showInput = function showInput(params) {
	    if (!params.input) {
	      return;
	    }
	    if (!renderInputType[params.input]) {
	      error("Unexpected type of input! Expected ".concat(Object.keys(renderInputType).join(' | '), ", got \"").concat(params.input, "\""));
	      return;
	    }
	    var inputContainer = getInputContainer(params.input);
	    var input = renderInputType[params.input](inputContainer, params);
	    show(inputContainer);

	    // input autofocus
	    if (params.inputAutoFocus) {
	      setTimeout(function () {
	        focusInput(input);
	      });
	    }
	  };

	  /**
	   * @param {HTMLInputElement} input
	   */
	  var removeAttributes = function removeAttributes(input) {
	    for (var i = 0; i < input.attributes.length; i++) {
	      var attrName = input.attributes[i].name;
	      if (!['id', 'type', 'value', 'style'].includes(attrName)) {
	        input.removeAttribute(attrName);
	      }
	    }
	  };

	  /**
	   * @param {InputClass} inputClass
	   * @param {SweetAlertOptions['inputAttributes']} inputAttributes
	   */
	  var setAttributes = function setAttributes(inputClass, inputAttributes) {
	    var input = getInput$1(getPopup(), inputClass);
	    if (!input) {
	      return;
	    }
	    removeAttributes(input);
	    for (var attr in inputAttributes) {
	      input.setAttribute(attr, inputAttributes[attr]);
	    }
	  };

	  /**
	   * @param {SweetAlertOptions} params
	   */
	  var setCustomClass = function setCustomClass(params) {
	    var inputContainer = getInputContainer(params.input);
	    if (_typeof(params.customClass) === 'object') {
	      addClass(inputContainer, params.customClass.input);
	    }
	  };

	  /**
	   * @param {HTMLInputElement | HTMLTextAreaElement} input
	   * @param {SweetAlertOptions} params
	   */
	  var setInputPlaceholder = function setInputPlaceholder(input, params) {
	    if (!input.placeholder || params.inputPlaceholder) {
	      input.placeholder = params.inputPlaceholder;
	    }
	  };

	  /**
	   * @param {Input} input
	   * @param {Input} prependTo
	   * @param {SweetAlertOptions} params
	   */
	  var setInputLabel = function setInputLabel(input, prependTo, params) {
	    if (params.inputLabel) {
	      var label = document.createElement('label');
	      var labelClass = swalClasses['input-label'];
	      label.setAttribute('for', input.id);
	      label.className = labelClass;
	      if (_typeof(params.customClass) === 'object') {
	        addClass(label, params.customClass.inputLabel);
	      }
	      label.innerText = params.inputLabel;
	      prependTo.insertAdjacentElement('beforebegin', label);
	    }
	  };

	  /**
	   * @param {SweetAlertOptions['input']} inputType
	   * @returns {HTMLElement}
	   */
	  var getInputContainer = function getInputContainer(inputType) {
	    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);
	  };

	  /**
	   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input
	   * @param {SweetAlertOptions['inputValue']} inputValue
	   */
	  var checkAndSetInputValue = function checkAndSetInputValue(input, inputValue) {
	    if (['string', 'number'].includes(_typeof(inputValue))) {
	      input.value = "".concat(inputValue);
	    } else if (!isPromise(inputValue)) {
	      warn("Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"".concat(_typeof(inputValue), "\""));
	    }
	  };

	  /** @type {Record<SweetAlertInput, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */
	  var renderInputType = {};

	  /**
	   * @param {HTMLInputElement} input
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLInputElement}
	   */
	  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = renderInputType.search = renderInputType.date = renderInputType['datetime-local'] = renderInputType.time = renderInputType.week = renderInputType.month = function (input, params) {
	    checkAndSetInputValue(input, params.inputValue);
	    setInputLabel(input, input, params);
	    setInputPlaceholder(input, params);
	    input.type = params.input;
	    return input;
	  };

	  /**
	   * @param {HTMLInputElement} input
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLInputElement}
	   */
	  renderInputType.file = function (input, params) {
	    setInputLabel(input, input, params);
	    setInputPlaceholder(input, params);
	    return input;
	  };

	  /**
	   * @param {HTMLInputElement} range
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLInputElement}
	   */
	  renderInputType.range = function (range, params) {
	    var rangeInput = range.querySelector('input');
	    var rangeOutput = range.querySelector('output');
	    checkAndSetInputValue(rangeInput, params.inputValue);
	    rangeInput.type = params.input;
	    checkAndSetInputValue(rangeOutput, params.inputValue);
	    setInputLabel(rangeInput, range, params);
	    return range;
	  };

	  /**
	   * @param {HTMLSelectElement} select
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLSelectElement}
	   */
	  renderInputType.select = function (select, params) {
	    select.textContent = '';
	    if (params.inputPlaceholder) {
	      var placeholder = document.createElement('option');
	      setInnerHtml(placeholder, params.inputPlaceholder);
	      placeholder.value = '';
	      placeholder.disabled = true;
	      placeholder.selected = true;
	      select.appendChild(placeholder);
	    }
	    setInputLabel(select, select, params);
	    return select;
	  };

	  /**
	   * @param {HTMLInputElement} radio
	   * @returns {HTMLInputElement}
	   */
	  renderInputType.radio = function (radio) {
	    radio.textContent = '';
	    return radio;
	  };

	  /**
	   * @param {HTMLLabelElement} checkboxContainer
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLInputElement}
	   */
	  renderInputType.checkbox = function (checkboxContainer, params) {
	    var checkbox = getInput$1(getPopup(), 'checkbox');
	    checkbox.value = '1';
	    checkbox.checked = Boolean(params.inputValue);
	    var label = checkboxContainer.querySelector('span');
	    setInnerHtml(label, params.inputPlaceholder);
	    return checkbox;
	  };

	  /**
	   * @param {HTMLTextAreaElement} textarea
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLTextAreaElement}
	   */
	  renderInputType.textarea = function (textarea, params) {
	    checkAndSetInputValue(textarea, params.inputValue);
	    setInputPlaceholder(textarea, params);
	    setInputLabel(textarea, textarea, params);

	    /**
	     * @param {HTMLElement} el
	     * @returns {number}
	     */
	    var getMargin = function getMargin(el) {
	      return parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);
	    };

	    // https://github.com/sweetalert2/sweetalert2/issues/2291
	    setTimeout(function () {
	      // https://github.com/sweetalert2/sweetalert2/issues/1699
	      if ('MutationObserver' in window) {
	        var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);
	        var textareaResizeHandler = function textareaResizeHandler() {
	          // check if texarea is still in document (i.e. popup wasn't closed in the meantime)
	          if (!document.body.contains(textarea)) {
	            return;
	          }
	          var textareaWidth = textarea.offsetWidth + getMargin(textarea);
	          if (textareaWidth > initialPopupWidth) {
	            getPopup().style.width = "".concat(textareaWidth, "px");
	          } else {
	            applyNumericalStyle(getPopup(), 'width', params.width);
	          }
	        };
	        new MutationObserver(textareaResizeHandler).observe(textarea, {
	          attributes: true,
	          attributeFilter: ['style']
	        });
	      }
	    });
	    return textarea;
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderContent = function renderContent(instance, params) {
	    var htmlContainer = getHtmlContainer();
	    if (!htmlContainer) {
	      return;
	    }
	    showWhenInnerHtmlPresent(htmlContainer);
	    applyCustomClass(htmlContainer, params, 'htmlContainer');

	    // Content as HTML
	    if (params.html) {
	      parseHtmlToContainer(params.html, htmlContainer);
	      show(htmlContainer, 'block');
	    }

	    // Content as plain text
	    else if (params.text) {
	        htmlContainer.textContent = params.text;
	        show(htmlContainer, 'block');
	      }

	      // No content
	      else {
	          hide(htmlContainer);
	        }
	    renderInput(instance, params);
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderFooter = function renderFooter(instance, params) {
	    var footer = getFooter();
	    if (!footer) {
	      return;
	    }
	    showWhenInnerHtmlPresent(footer);
	    toggle(footer, params.footer, 'block');
	    if (params.footer) {
	      parseHtmlToContainer(params.footer, footer);
	    }

	    // Custom class
	    applyCustomClass(footer, params, 'footer');
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderIcon = function renderIcon(instance, params) {
	    var innerParams = privateProps.innerParams.get(instance);
	    var icon = getIcon();
	    if (!icon) {
	      return;
	    }

	    // if the given icon already rendered, apply the styling without re-rendering the icon
	    if (innerParams && params.icon === innerParams.icon) {
	      // Custom or default content
	      setContent(icon, params);
	      applyStyles(icon, params);
	      return;
	    }
	    if (!params.icon && !params.iconHtml) {
	      hide(icon);
	      return;
	    }
	    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {
	      error("Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"".concat(params.icon, "\""));
	      hide(icon);
	      return;
	    }
	    show(icon);

	    // Custom or default content
	    setContent(icon, params);
	    applyStyles(icon, params);

	    // Animate icon
	    addClass(icon, params.showClass && params.showClass.icon);
	  };

	  /**
	   * @param {HTMLElement} icon
	   * @param {SweetAlertOptions} params
	   */
	  var applyStyles = function applyStyles(icon, params) {
	    for (var _i = 0, _Object$entries = Object.entries(iconTypes); _i < _Object$entries.length; _i++) {
	      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
	          iconType = _Object$entries$_i[0],
	          iconClassName = _Object$entries$_i[1];
	      if (params.icon !== iconType) {
	        removeClass(icon, iconClassName);
	      }
	    }
	    addClass(icon, params.icon && iconTypes[params.icon]);

	    // Icon color
	    setColor(icon, params);

	    // Success icon background color
	    adjustSuccessIconBackgroundColor();

	    // Custom class
	    applyCustomClass(icon, params, 'icon');
	  };

	  // Adjust success icon background color to match the popup background color
	  var adjustSuccessIconBackgroundColor = function adjustSuccessIconBackgroundColor() {
	    var popup = getPopup();
	    if (!popup) {
	      return;
	    }
	    var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');
	    /** @type {NodeListOf<HTMLElement>} */
	    var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');
	    for (var i = 0; i < successIconParts.length; i++) {
	      successIconParts[i].style.backgroundColor = popupBackgroundColor;
	    }
	  };
	  var successIconHtml = "\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n";
	  var errorIconHtml = "\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n";

	  /**
	   * @param {HTMLElement} icon
	   * @param {SweetAlertOptions} params
	   */
	  var setContent = function setContent(icon, params) {
	    if (!params.icon && !params.iconHtml) {
	      return;
	    }
	    var oldContent = icon.innerHTML;
	    var newContent = '';
	    if (params.iconHtml) {
	      newContent = iconContent(params.iconHtml);
	    } else if (params.icon === 'success') {
	      newContent = successIconHtml;
	      oldContent = oldContent.replace(/ style=".*?"/g, ''); // undo adjustSuccessIconBackgroundColor()
	    } else if (params.icon === 'error') {
	      newContent = errorIconHtml;
	    } else if (params.icon) {
	      var defaultIconHtml = {
	        question: '?',
	        warning: '!',
	        info: 'i'
	      };
	      newContent = iconContent(defaultIconHtml[params.icon]);
	    }
	    if (oldContent.trim() !== newContent.trim()) {
	      setInnerHtml(icon, newContent);
	    }
	  };

	  /**
	   * @param {HTMLElement} icon
	   * @param {SweetAlertOptions} params
	   */
	  var setColor = function setColor(icon, params) {
	    if (!params.iconColor) {
	      return;
	    }
	    icon.style.color = params.iconColor;
	    icon.style.borderColor = params.iconColor;
	    for (var _i2 = 0, _arr = ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']; _i2 < _arr.length; _i2++) {
	      var sel = _arr[_i2];
	      setStyle(icon, sel, 'background-color', params.iconColor);
	    }
	    setStyle(icon, '.swal2-success-ring', 'border-color', params.iconColor);
	  };

	  /**
	   * @param {string} content
	   * @returns {string}
	   */
	  var iconContent = function iconContent(content) {
	    return "<div class=\"".concat(swalClasses['icon-content'], "\">").concat(content, "</div>");
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderImage = function renderImage(instance, params) {
	    var image = getImage();
	    if (!image) {
	      return;
	    }
	    if (!params.imageUrl) {
	      hide(image);
	      return;
	    }
	    show(image, '');

	    // Src, alt
	    image.setAttribute('src', params.imageUrl);
	    image.setAttribute('alt', params.imageAlt || '');

	    // Width, height
	    applyNumericalStyle(image, 'width', params.imageWidth);
	    applyNumericalStyle(image, 'height', params.imageHeight);

	    // Class
	    image.className = swalClasses.image;
	    applyCustomClass(image, params, 'image');
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderPopup = function renderPopup(instance, params) {
	    var container = getContainer();
	    var popup = getPopup();
	    if (!container || !popup) {
	      return;
	    }

	    // Width
	    // https://github.com/sweetalert2/sweetalert2/issues/2170
	    if (params.toast) {
	      applyNumericalStyle(container, 'width', params.width);
	      popup.style.width = '100%';
	      var loader = getLoader();
	      loader && popup.insertBefore(loader, getIcon());
	    } else {
	      applyNumericalStyle(popup, 'width', params.width);
	    }

	    // Padding
	    applyNumericalStyle(popup, 'padding', params.padding);

	    // Color
	    if (params.color) {
	      popup.style.color = params.color;
	    }

	    // Background
	    if (params.background) {
	      popup.style.background = params.background;
	    }
	    hide(getValidationMessage());

	    // Classes
	    addClasses$1(popup, params);
	  };

	  /**
	   * @param {HTMLElement} popup
	   * @param {SweetAlertOptions} params
	   */
	  var addClasses$1 = function addClasses(popup, params) {
	    var showClass = params.showClass || {};
	    // Default Class + showClass when updating Swal.update({})
	    popup.className = "".concat(swalClasses.popup, " ").concat(isVisible$1(popup) ? showClass.popup : '');
	    if (params.toast) {
	      addClass([document.documentElement, document.body], swalClasses['toast-shown']);
	      addClass(popup, swalClasses.toast);
	    } else {
	      addClass(popup, swalClasses.modal);
	    }

	    // Custom class
	    applyCustomClass(popup, params, 'popup');
	    if (typeof params.customClass === 'string') {
	      addClass(popup, params.customClass);
	    }

	    // Icon class (#1842)
	    if (params.icon) {
	      addClass(popup, swalClasses["icon-".concat(params.icon)]);
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderProgressSteps = function renderProgressSteps(instance, params) {
	    var progressStepsContainer = getProgressSteps();
	    if (!progressStepsContainer) {
	      return;
	    }
	    var progressSteps = params.progressSteps,
	        currentProgressStep = params.currentProgressStep;
	    if (!progressSteps || progressSteps.length === 0 || currentProgressStep === undefined) {
	      hide(progressStepsContainer);
	      return;
	    }
	    show(progressStepsContainer);
	    progressStepsContainer.textContent = '';
	    if (currentProgressStep >= progressSteps.length) {
	      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');
	    }
	    progressSteps.forEach(function (step, index) {
	      var stepEl = createStepElement(step);
	      progressStepsContainer.appendChild(stepEl);
	      if (index === currentProgressStep) {
	        addClass(stepEl, swalClasses['active-progress-step']);
	      }
	      if (index !== progressSteps.length - 1) {
	        var lineEl = createLineElement(params);
	        progressStepsContainer.appendChild(lineEl);
	      }
	    });
	  };

	  /**
	   * @param {string} step
	   * @returns {HTMLLIElement}
	   */
	  var createStepElement = function createStepElement(step) {
	    var stepEl = document.createElement('li');
	    addClass(stepEl, swalClasses['progress-step']);
	    setInnerHtml(stepEl, step);
	    return stepEl;
	  };

	  /**
	   * @param {SweetAlertOptions} params
	   * @returns {HTMLLIElement}
	   */
	  var createLineElement = function createLineElement(params) {
	    var lineEl = document.createElement('li');
	    addClass(lineEl, swalClasses['progress-step-line']);
	    if (params.progressStepsDistance) {
	      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);
	    }
	    return lineEl;
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var renderTitle = function renderTitle(instance, params) {
	    var title = getTitle();
	    if (!title) {
	      return;
	    }
	    showWhenInnerHtmlPresent(title);
	    toggle(title, params.title || params.titleText, 'block');
	    if (params.title) {
	      parseHtmlToContainer(params.title, title);
	    }
	    if (params.titleText) {
	      title.innerText = params.titleText;
	    }

	    // Custom class
	    applyCustomClass(title, params, 'title');
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var render = function render(instance, params) {
	    renderPopup(instance, params);
	    renderContainer(instance, params);
	    renderProgressSteps(instance, params);
	    renderIcon(instance, params);
	    renderImage(instance, params);
	    renderTitle(instance, params);
	    renderCloseButton(instance, params);
	    renderContent(instance, params);
	    renderActions(instance, params);
	    renderFooter(instance, params);
	    var popup = getPopup();
	    if (typeof params.didRender === 'function' && popup) {
	      params.didRender(popup);
	    }
	  };

	  /*
	   * Global function to determine if SweetAlert2 popup is shown
	   */
	  var isVisible = function isVisible() {
	    return isVisible$1(getPopup());
	  };

	  /*
	   * Global function to click 'Confirm' button
	   */
	  var clickConfirm = function clickConfirm() {
	    var _dom$getConfirmButton;
	    return (_dom$getConfirmButton = getConfirmButton()) === null || _dom$getConfirmButton === void 0 ? void 0 : _dom$getConfirmButton.click();
	  };

	  /*
	   * Global function to click 'Deny' button
	   */
	  var clickDeny = function clickDeny() {
	    var _dom$getDenyButton;
	    return (_dom$getDenyButton = getDenyButton()) === null || _dom$getDenyButton === void 0 ? void 0 : _dom$getDenyButton.click();
	  };

	  /*
	   * Global function to click 'Cancel' button
	   */
	  var clickCancel = function clickCancel() {
	    var _dom$getCancelButton;
	    return (_dom$getCancelButton = getCancelButton()) === null || _dom$getCancelButton === void 0 ? void 0 : _dom$getCancelButton.click();
	  };

	  /** @typedef {'cancel' | 'backdrop' | 'close' | 'esc' | 'timer'} DismissReason */

	  /** @type {Record<DismissReason, DismissReason>} */
	  var DismissReason = Object.freeze({
	    cancel: 'cancel',
	    backdrop: 'backdrop',
	    close: 'close',
	    esc: 'esc',
	    timer: 'timer'
	  });

	  /**
	   * @param {GlobalState} globalState
	   */
	  var removeKeydownHandler = function removeKeydownHandler(globalState) {
	    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {
	      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {
	        capture: globalState.keydownListenerCapture
	      });
	      globalState.keydownHandlerAdded = false;
	    }
	  };

	  /**
	   * @param {GlobalState} globalState
	   * @param {SweetAlertOptions} innerParams
	   * @param {*} dismissWith
	   */
	  var addKeydownHandler = function addKeydownHandler(globalState, innerParams, dismissWith) {
	    removeKeydownHandler(globalState);
	    if (!innerParams.toast) {
	      globalState.keydownHandler = function (e) {
	        return keydownHandler(innerParams, e, dismissWith);
	      };
	      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();
	      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;
	      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {
	        capture: globalState.keydownListenerCapture
	      });
	      globalState.keydownHandlerAdded = true;
	    }
	  };

	  /**
	   * @param {number} index
	   * @param {number} increment
	   */
	  var setFocus = function setFocus(index, increment) {
	    var _dom$getPopup;
	    var focusableElements = getFocusableElements();
	    // search for visible elements and select the next possible match
	    if (focusableElements.length) {
	      index = index + increment;

	      // rollover to first item
	      if (index === focusableElements.length) {
	        index = 0;

	        // go to last item
	      } else if (index === -1) {
	        index = focusableElements.length - 1;
	      }
	      focusableElements[index].focus();
	      return;
	    }
	    // no visible focusable elements, focus the popup
	    (_dom$getPopup = getPopup()) === null || _dom$getPopup === void 0 || _dom$getPopup.focus();
	  };
	  var arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];
	  var arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];

	  /**
	   * @param {SweetAlertOptions} innerParams
	   * @param {KeyboardEvent} event
	   * @param {Function} dismissWith
	   */
	  var keydownHandler = function keydownHandler(innerParams, event, dismissWith) {
	    if (!innerParams) {
	      return; // This instance has already been destroyed
	    }

	    // Ignore keydown during IME composition
	    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition
	    // https://github.com/sweetalert2/sweetalert2/issues/720
	    // https://github.com/sweetalert2/sweetalert2/issues/2406
	    if (event.isComposing || event.keyCode === 229) {
	      return;
	    }
	    if (innerParams.stopKeydownPropagation) {
	      event.stopPropagation();
	    }

	    // ENTER
	    if (event.key === 'Enter') {
	      handleEnter(event, innerParams);
	    }

	    // TAB
	    else if (event.key === 'Tab') {
	        handleTab(event);
	      }

	      // ARROWS - switch focus between buttons
	      else if ([].concat(arrowKeysNextButton, arrowKeysPreviousButton).includes(event.key)) {
	          handleArrows(event.key);
	        }

	        // ESC
	        else if (event.key === 'Escape') {
	            handleEsc(event, innerParams, dismissWith);
	          }
	  };

	  /**
	   * @param {KeyboardEvent} event
	   * @param {SweetAlertOptions} innerParams
	   */
	  var handleEnter = function handleEnter(event, innerParams) {
	    // https://github.com/sweetalert2/sweetalert2/issues/2386
	    if (!callIfFunction(innerParams.allowEnterKey)) {
	      return;
	    }
	    var input = getInput$1(getPopup(), innerParams.input);
	    if (event.target && input && event.target instanceof HTMLElement && event.target.outerHTML === input.outerHTML) {
	      if (['textarea', 'file'].includes(innerParams.input)) {
	        return; // do not submit
	      }
	      clickConfirm();
	      event.preventDefault();
	    }
	  };

	  /**
	   * @param {KeyboardEvent} event
	   */
	  var handleTab = function handleTab(event) {
	    var targetElement = event.target;
	    var focusableElements = getFocusableElements();
	    var btnIndex = -1;
	    for (var i = 0; i < focusableElements.length; i++) {
	      if (targetElement === focusableElements[i]) {
	        btnIndex = i;
	        break;
	      }
	    }

	    // Cycle to the next button
	    if (!event.shiftKey) {
	      setFocus(btnIndex, 1);
	    }

	    // Cycle to the prev button
	    else {
	        setFocus(btnIndex, -1);
	      }
	    event.stopPropagation();
	    event.preventDefault();
	  };

	  /**
	   * @param {string} key
	   */
	  var handleArrows = function handleArrows(key) {
	    var actions = getActions();
	    var confirmButton = getConfirmButton();
	    var denyButton = getDenyButton();
	    var cancelButton = getCancelButton();
	    if (!actions || !confirmButton || !denyButton || !cancelButton) {
	      return;
	    }
	    /** @type HTMLElement[] */
	    var buttons = [confirmButton, denyButton, cancelButton];
	    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {
	      return;
	    }
	    var sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';
	    var buttonToFocus = document.activeElement;
	    if (!buttonToFocus) {
	      return;
	    }
	    for (var i = 0; i < actions.children.length; i++) {
	      buttonToFocus = buttonToFocus[sibling];
	      if (!buttonToFocus) {
	        return;
	      }
	      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {
	        break;
	      }
	    }
	    if (buttonToFocus instanceof HTMLButtonElement) {
	      buttonToFocus.focus();
	    }
	  };

	  /**
	   * @param {KeyboardEvent} event
	   * @param {SweetAlertOptions} innerParams
	   * @param {Function} dismissWith
	   */
	  var handleEsc = function handleEsc(event, innerParams, dismissWith) {
	    if (callIfFunction(innerParams.allowEscapeKey)) {
	      event.preventDefault();
	      dismissWith(DismissReason.esc);
	    }
	  };

	  /**
	   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
	   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
	   * This is the approach that Babel will probably take to implement private methods/fields
	   *   https://github.com/tc39/proposal-private-methods
	   *   https://github.com/babel/babel/pull/7555
	   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
	   *   then we can use that language feature.
	   */

	  var privateMethods = {
	    swalPromiseResolve: new WeakMap(),
	    swalPromiseReject: new WeakMap()
	  };

	  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/
	  // Adding aria-hidden="true" to elements outside of the active modal dialog ensures that
	  // elements not within the active modal dialog will not be surfaced if a user opens a screen
	  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.

	  var setAriaHidden = function setAriaHidden() {
	    var bodyChildren = Array.from(document.body.children);
	    bodyChildren.forEach(function (el) {
	      if (el === getContainer() || el.contains(getContainer())) {
	        return;
	      }
	      if (el.hasAttribute('aria-hidden')) {
	        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden') || '');
	      }
	      el.setAttribute('aria-hidden', 'true');
	    });
	  };
	  var unsetAriaHidden = function unsetAriaHidden() {
	    var bodyChildren = Array.from(document.body.children);
	    bodyChildren.forEach(function (el) {
	      if (el.hasAttribute('data-previous-aria-hidden')) {
	        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden') || '');
	        el.removeAttribute('data-previous-aria-hidden');
	      } else {
	        el.removeAttribute('aria-hidden');
	      }
	    });
	  };

	  // @ts-ignore
	  var isSafariOrIOS = typeof window !== 'undefined' && !!window.GestureEvent; // true for Safari desktop + all iOS browsers https://stackoverflow.com/a/70585394

	  /**
	   * Fix iOS scrolling
	   * http://stackoverflow.com/q/39626302
	   */
	  var iOSfix = function iOSfix() {
	    if (isSafariOrIOS && !hasClass(document.body, swalClasses.iosfix)) {
	      var offset = document.body.scrollTop;
	      document.body.style.top = "".concat(offset * -1, "px");
	      addClass(document.body, swalClasses.iosfix);
	      lockBodyScroll();
	    }
	  };

	  /**
	   * https://github.com/sweetalert2/sweetalert2/issues/1246
	   */
	  var lockBodyScroll = function lockBodyScroll() {
	    var container = getContainer();
	    if (!container) {
	      return;
	    }
	    /** @type {boolean} */
	    var preventTouchMove;
	    /**
	     * @param {TouchEvent} event
	     */
	    container.ontouchstart = function (event) {
	      preventTouchMove = shouldPreventTouchMove(event);
	    };
	    /**
	     * @param {TouchEvent} event
	     */
	    container.ontouchmove = function (event) {
	      if (preventTouchMove) {
	        event.preventDefault();
	        event.stopPropagation();
	      }
	    };
	  };

	  /**
	   * @param {TouchEvent} event
	   * @returns {boolean}
	   */
	  var shouldPreventTouchMove = function shouldPreventTouchMove(event) {
	    var target = event.target;
	    var container = getContainer();
	    var htmlContainer = getHtmlContainer();
	    if (!container || !htmlContainer) {
	      return false;
	    }
	    if (isStylus(event) || isZoom(event)) {
	      return false;
	    }
	    if (target === container) {
	      return true;
	    }
	    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&
	    // #1603
	    target.tagName !== 'TEXTAREA' &&
	    // #2266
	    !(isScrollable(htmlContainer) &&
	    // #1944
	    htmlContainer.contains(target))) {
	      return true;
	    }
	    return false;
	  };

	  /**
	   * https://github.com/sweetalert2/sweetalert2/issues/1786
	   *
	   * @param {*} event
	   * @returns {boolean}
	   */
	  var isStylus = function isStylus(event) {
	    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';
	  };

	  /**
	   * https://github.com/sweetalert2/sweetalert2/issues/1891
	   *
	   * @param {TouchEvent} event
	   * @returns {boolean}
	   */
	  var isZoom = function isZoom(event) {
	    return event.touches && event.touches.length > 1;
	  };
	  var undoIOSfix = function undoIOSfix() {
	    if (hasClass(document.body, swalClasses.iosfix)) {
	      var offset = parseInt(document.body.style.top, 10);
	      removeClass(document.body, swalClasses.iosfix);
	      document.body.style.top = '';
	      document.body.scrollTop = offset * -1;
	    }
	  };

	  /**
	   * Measure scrollbar width for padding body during modal show/hide
	   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js
	   *
	   * @returns {number}
	   */
	  var measureScrollbar = function measureScrollbar() {
	    var scrollDiv = document.createElement('div');
	    scrollDiv.className = swalClasses['scrollbar-measure'];
	    document.body.appendChild(scrollDiv);
	    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
	    document.body.removeChild(scrollDiv);
	    return scrollbarWidth;
	  };

	  /**
	   * Remember state in cases where opening and handling a modal will fiddle with it.
	   * @type {number | null}
	   */
	  var previousBodyPadding = null;

	  /**
	   * @param {string} initialBodyOverflow
	   */
	  var replaceScrollbarWithPadding = function replaceScrollbarWithPadding(initialBodyOverflow) {
	    // for queues, do not do this more than once
	    if (previousBodyPadding !== null) {
	      return;
	    }
	    // if the body has overflow
	    if (document.body.scrollHeight > window.innerHeight || initialBodyOverflow === 'scroll' // https://github.com/sweetalert2/sweetalert2/issues/2663
	    ) {
	        // add padding so the content doesn't shift after removal of scrollbar
	        previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));
	        document.body.style.paddingRight = "".concat(previousBodyPadding + measureScrollbar(), "px");
	      }
	  };
	  var undoReplaceScrollbarWithPadding = function undoReplaceScrollbarWithPadding() {
	    if (previousBodyPadding !== null) {
	      document.body.style.paddingRight = "".concat(previousBodyPadding, "px");
	      previousBodyPadding = null;
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {HTMLElement} container
	   * @param {boolean} returnFocus
	   * @param {Function} didClose
	   */
	  function removePopupAndResetState(instance, container, returnFocus, didClose) {
	    if (isToast()) {
	      triggerDidCloseAndDispose(instance, didClose);
	    } else {
	      restoreActiveElement(returnFocus).then(function () {
	        return triggerDidCloseAndDispose(instance, didClose);
	      });
	      removeKeydownHandler(globalState);
	    }

	    // workaround for https://github.com/sweetalert2/sweetalert2/issues/2088
	    // for some reason removing the container in Safari will scroll the document to bottom
	    if (isSafariOrIOS) {
	      container.setAttribute('style', 'display:none !important');
	      container.removeAttribute('class');
	      container.innerHTML = '';
	    } else {
	      container.remove();
	    }
	    if (isModal()) {
	      undoReplaceScrollbarWithPadding();
	      undoIOSfix();
	      unsetAriaHidden();
	    }
	    removeBodyClasses();
	  }

	  /**
	   * Remove SweetAlert2 classes from body
	   */
	  function removeBodyClasses() {
	    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);
	  }

	  /**
	   * Instance method to close sweetAlert
	   *
	   * @param {any} resolveValue
	   */
	  function close(resolveValue) {
	    resolveValue = prepareResolveValue(resolveValue);
	    var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);
	    var didClose = triggerClosePopup(this);
	    if (this.isAwaitingPromise) {
	      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335
	      if (!resolveValue.isDismissed) {
	        handleAwaitingPromise(this);
	        swalPromiseResolve(resolveValue);
	      }
	    } else if (didClose) {
	      // Resolve Swal promise
	      swalPromiseResolve(resolveValue);
	    }
	  }
	  var triggerClosePopup = function triggerClosePopup(instance) {
	    var popup = getPopup();
	    if (!popup) {
	      return false;
	    }
	    var innerParams = privateProps.innerParams.get(instance);
	    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {
	      return false;
	    }
	    removeClass(popup, innerParams.showClass.popup);
	    addClass(popup, innerParams.hideClass.popup);
	    var backdrop = getContainer();
	    removeClass(backdrop, innerParams.showClass.backdrop);
	    addClass(backdrop, innerParams.hideClass.backdrop);
	    handlePopupAnimation(instance, popup, innerParams);
	    return true;
	  };

	  /**
	   * @param {any} error
	   */
	  function rejectPromise(error) {
	    var rejectPromise = privateMethods.swalPromiseReject.get(this);
	    handleAwaitingPromise(this);
	    if (rejectPromise) {
	      // Reject Swal promise
	      rejectPromise(error);
	    }
	  }

	  /**
	   * @param {SweetAlert} instance
	   */
	  var handleAwaitingPromise = function handleAwaitingPromise(instance) {
	    if (instance.isAwaitingPromise) {
	      delete instance.isAwaitingPromise;
	      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335
	      if (!privateProps.innerParams.get(instance)) {
	        instance._destroy();
	      }
	    }
	  };

	  /**
	   * @param {any} resolveValue
	   * @returns {SweetAlertResult}
	   */
	  var prepareResolveValue = function prepareResolveValue(resolveValue) {
	    // When user calls Swal.close()
	    if (typeof resolveValue === 'undefined') {
	      return {
	        isConfirmed: false,
	        isDenied: false,
	        isDismissed: true
	      };
	    }
	    return Object.assign({
	      isConfirmed: false,
	      isDenied: false,
	      isDismissed: false
	    }, resolveValue);
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {HTMLElement} popup
	   * @param {SweetAlertOptions} innerParams
	   */
	  var handlePopupAnimation = function handlePopupAnimation(instance, popup, innerParams) {
	    var container = getContainer();
	    // If animation is supported, animate
	    var animationIsSupported = animationEndEvent && hasCssAnimation(popup);
	    if (typeof innerParams.willClose === 'function') {
	      innerParams.willClose(popup);
	    }
	    if (animationIsSupported) {
	      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);
	    } else {
	      // Otherwise, remove immediately
	      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {HTMLElement} popup
	   * @param {HTMLElement} container
	   * @param {boolean} returnFocus
	   * @param {Function} didClose
	   */
	  var animatePopup = function animatePopup(instance, popup, container, returnFocus, didClose) {
	    if (!animationEndEvent) {
	      return;
	    }
	    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);
	    popup.addEventListener(animationEndEvent, function (e) {
	      if (e.target === popup) {
	        globalState.swalCloseEventFinishedCallback();
	        delete globalState.swalCloseEventFinishedCallback;
	      }
	    });
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {Function} didClose
	   */
	  var triggerDidCloseAndDispose = function triggerDidCloseAndDispose(instance, didClose) {
	    setTimeout(function () {
	      if (typeof didClose === 'function') {
	        didClose.bind(instance.params)();
	      }
	      // instance might have been destroyed already
	      if (instance._destroy) {
	        instance._destroy();
	      }
	    });
	  };

	  /**
	   * Shows loader (spinner), this is useful with AJAX requests.
	   * By default the loader be shown instead of the "Confirm" button.
	   *
	   * @param {HTMLButtonElement | null} [buttonToReplace]
	   */
	  var showLoading = function showLoading(buttonToReplace) {
	    var popup = getPopup();
	    if (!popup) {
	      new Swal(); // eslint-disable-line no-new
	    }
	    popup = getPopup();
	    if (!popup) {
	      return;
	    }
	    var loader = getLoader();
	    if (isToast()) {
	      hide(getIcon());
	    } else {
	      replaceButton(popup, buttonToReplace);
	    }
	    show(loader);
	    popup.setAttribute('data-loading', 'true');
	    popup.setAttribute('aria-busy', 'true');
	    popup.focus();
	  };

	  /**
	   * @param {HTMLElement} popup
	   * @param {HTMLButtonElement | null} [buttonToReplace]
	   */
	  var replaceButton = function replaceButton(popup, buttonToReplace) {
	    var actions = getActions();
	    var loader = getLoader();
	    if (!actions || !loader) {
	      return;
	    }
	    if (!buttonToReplace && isVisible$1(getConfirmButton())) {
	      buttonToReplace = getConfirmButton();
	    }
	    show(actions);
	    if (buttonToReplace) {
	      hide(buttonToReplace);
	      loader.setAttribute('data-button-to-replace', buttonToReplace.className);
	      actions.insertBefore(loader, buttonToReplace);
	    }
	    addClass([popup, actions], swalClasses.loading);
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var handleInputOptionsAndValue = function handleInputOptionsAndValue(instance, params) {
	    if (params.input === 'select' || params.input === 'radio') {
	      handleInputOptions(instance, params);
	    } else if (['text', 'email', 'number', 'tel', 'textarea'].some(function (i) {
	      return i === params.input;
	    }) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {
	      showLoading(getConfirmButton());
	      handleInputValue(instance, params);
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} innerParams
	   * @returns {SweetAlertInputValue}
	   */
	  var getInputValue = function getInputValue(instance, innerParams) {
	    var input = instance.getInput();
	    if (!input) {
	      return null;
	    }
	    switch (innerParams.input) {
	      case 'checkbox':
	        return getCheckboxValue(input);
	      case 'radio':
	        return getRadioValue(input);
	      case 'file':
	        return getFileValue(input);
	      default:
	        return innerParams.inputAutoTrim ? input.value.trim() : input.value;
	    }
	  };

	  /**
	   * @param {HTMLInputElement} input
	   * @returns {number}
	   */
	  var getCheckboxValue = function getCheckboxValue(input) {
	    return input.checked ? 1 : 0;
	  };

	  /**
	   * @param {HTMLInputElement} input
	   * @returns {string | null}
	   */
	  var getRadioValue = function getRadioValue(input) {
	    return input.checked ? input.value : null;
	  };

	  /**
	   * @param {HTMLInputElement} input
	   * @returns {FileList | File | null}
	   */
	  var getFileValue = function getFileValue(input) {
	    return input.files && input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var handleInputOptions = function handleInputOptions(instance, params) {
	    var popup = getPopup();
	    if (!popup) {
	      return;
	    }
	    /**
	     * @param {Record<string, any>} inputOptions
	     */
	    var processInputOptions = function processInputOptions(inputOptions) {
	      if (params.input === 'select') {
	        populateSelectOptions(popup, formatInputOptions(inputOptions), params);
	      } else if (params.input === 'radio') {
	        populateRadioOptions(popup, formatInputOptions(inputOptions), params);
	      }
	    };
	    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {
	      showLoading(getConfirmButton());
	      asPromise(params.inputOptions).then(function (inputOptions) {
	        instance.hideLoading();
	        processInputOptions(inputOptions);
	      });
	    } else if (_typeof(params.inputOptions) === 'object') {
	      processInputOptions(params.inputOptions);
	    } else {
	      error("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(_typeof(params.inputOptions)));
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertOptions} params
	   */
	  var handleInputValue = function handleInputValue(instance, params) {
	    var input = instance.getInput();
	    if (!input) {
	      return;
	    }
	    hide(input);
	    asPromise(params.inputValue).then(function (inputValue) {
	      input.value = params.input === 'number' ? "".concat(parseFloat(inputValue) || 0) : "".concat(inputValue);
	      show(input);
	      input.focus();
	      instance.hideLoading();
	    })["catch"](function (err) {
	      error("Error in inputValue promise: ".concat(err));
	      input.value = '';
	      show(input);
	      input.focus();
	      instance.hideLoading();
	    });
	  };

	  /**
	   * @param {HTMLElement} popup
	   * @param {InputOptionFlattened[]} inputOptions
	   * @param {SweetAlertOptions} params
	   */
	  function populateSelectOptions(popup, inputOptions, params) {
	    var select = getDirectChildByClass(popup, swalClasses.select);
	    if (!select) {
	      return;
	    }
	    /**
	     * @param {HTMLElement} parent
	     * @param {string} optionLabel
	     * @param {string} optionValue
	     */
	    var renderOption = function renderOption(parent, optionLabel, optionValue) {
	      var option = document.createElement('option');
	      option.value = optionValue;
	      setInnerHtml(option, optionLabel);
	      option.selected = isSelected(optionValue, params.inputValue);
	      parent.appendChild(option);
	    };
	    inputOptions.forEach(function (inputOption) {
	      var optionValue = inputOption[0];
	      var optionLabel = inputOption[1];
	      // <optgroup> spec:
	      // https://www.w3.org/TR/html401/interact/forms.html#h-17.6
	      // "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."
	      // check whether this is a <optgroup>
	      if (Array.isArray(optionLabel)) {
	        // if it is an array, then it is an <optgroup>
	        var optgroup = document.createElement('optgroup');
	        optgroup.label = optionValue;
	        optgroup.disabled = false; // not configurable for now
	        select.appendChild(optgroup);
	        optionLabel.forEach(function (o) {
	          return renderOption(optgroup, o[1], o[0]);
	        });
	      } else {
	        // case of <option>
	        renderOption(select, optionLabel, optionValue);
	      }
	    });
	    select.focus();
	  }

	  /**
	   * @param {HTMLElement} popup
	   * @param {InputOptionFlattened[]} inputOptions
	   * @param {SweetAlertOptions} params
	   */
	  function populateRadioOptions(popup, inputOptions, params) {
	    var radio = getDirectChildByClass(popup, swalClasses.radio);
	    if (!radio) {
	      return;
	    }
	    inputOptions.forEach(function (inputOption) {
	      var radioValue = inputOption[0];
	      var radioLabel = inputOption[1];
	      var radioInput = document.createElement('input');
	      var radioLabelElement = document.createElement('label');
	      radioInput.type = 'radio';
	      radioInput.name = swalClasses.radio;
	      radioInput.value = radioValue;
	      if (isSelected(radioValue, params.inputValue)) {
	        radioInput.checked = true;
	      }
	      var label = document.createElement('span');
	      setInnerHtml(label, radioLabel);
	      label.className = swalClasses.label;
	      radioLabelElement.appendChild(radioInput);
	      radioLabelElement.appendChild(label);
	      radio.appendChild(radioLabelElement);
	    });
	    var radios = radio.querySelectorAll('input');
	    if (radios.length) {
	      radios[0].focus();
	    }
	  }

	  /**
	   * Converts `inputOptions` into an array of `[value, label]`s
	   *
	   * @param {Record<string, any>} inputOptions
	   * @typedef {string[]} InputOptionFlattened
	   * @returns {InputOptionFlattened[]}
	   */
	  var formatInputOptions = function formatInputOptions(inputOptions) {
	    /** @type {InputOptionFlattened[]} */
	    var result = [];
	    if (inputOptions instanceof Map) {
	      inputOptions.forEach(function (value, key) {
	        var valueFormatted = value;
	        if (_typeof(valueFormatted) === 'object') {
	          // case of <optgroup>
	          valueFormatted = formatInputOptions(valueFormatted);
	        }
	        result.push([key, valueFormatted]);
	      });
	    } else {
	      Object.keys(inputOptions).forEach(function (key) {
	        var valueFormatted = inputOptions[key];
	        if (_typeof(valueFormatted) === 'object') {
	          // case of <optgroup>
	          valueFormatted = formatInputOptions(valueFormatted);
	        }
	        result.push([key, valueFormatted]);
	      });
	    }
	    return result;
	  };

	  /**
	   * @param {string} optionValue
	   * @param {SweetAlertInputValue} inputValue
	   * @returns {boolean}
	   */
	  var isSelected = function isSelected(optionValue, inputValue) {
	    return !!inputValue && inputValue.toString() === optionValue.toString();
	  };

	  var _this = undefined;

	  /**
	   * @param {SweetAlert} instance
	   */
	  var handleConfirmButtonClick = function handleConfirmButtonClick(instance) {
	    var innerParams = privateProps.innerParams.get(instance);
	    instance.disableButtons();
	    if (innerParams.input) {
	      handleConfirmOrDenyWithInput(instance, 'confirm');
	    } else {
	      confirm(instance, true);
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   */
	  var handleDenyButtonClick = function handleDenyButtonClick(instance) {
	    var innerParams = privateProps.innerParams.get(instance);
	    instance.disableButtons();
	    if (innerParams.returnInputValueOnDeny) {
	      handleConfirmOrDenyWithInput(instance, 'deny');
	    } else {
	      deny(instance, false);
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {Function} dismissWith
	   */
	  var handleCancelButtonClick = function handleCancelButtonClick(instance, dismissWith) {
	    instance.disableButtons();
	    dismissWith(DismissReason.cancel);
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {'confirm' | 'deny'} type
	   */
	  var handleConfirmOrDenyWithInput = function handleConfirmOrDenyWithInput(instance, type) {
	    var innerParams = privateProps.innerParams.get(instance);
	    if (!innerParams.input) {
	      error("The \"input\" parameter is needed to be set when using returnInputValueOn".concat(capitalizeFirstLetter(type)));
	      return;
	    }
	    var input = instance.getInput();
	    var inputValue = getInputValue(instance, innerParams);
	    if (innerParams.inputValidator) {
	      handleInputValidator(instance, inputValue, type);
	    } else if (input && !input.checkValidity()) {
	      instance.enableButtons();
	      instance.showValidationMessage(innerParams.validationMessage || input.validationMessage);
	    } else if (type === 'deny') {
	      deny(instance, inputValue);
	    } else {
	      confirm(instance, inputValue);
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {SweetAlertInputValue} inputValue
	   * @param {'confirm' | 'deny'} type
	   */
	  var handleInputValidator = function handleInputValidator(instance, inputValue, type) {
	    var innerParams = privateProps.innerParams.get(instance);
	    instance.disableInput();
	    var validationPromise = Promise.resolve().then(function () {
	      return asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage));
	    });
	    validationPromise.then(function (validationMessage) {
	      instance.enableButtons();
	      instance.enableInput();
	      if (validationMessage) {
	        instance.showValidationMessage(validationMessage);
	      } else if (type === 'deny') {
	        deny(instance, inputValue);
	      } else {
	        confirm(instance, inputValue);
	      }
	    });
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {any} value
	   */
	  var deny = function deny(instance, value) {
	    var innerParams = privateProps.innerParams.get(instance || _this);
	    if (innerParams.showLoaderOnDeny) {
	      showLoading(getDenyButton());
	    }
	    if (innerParams.preDeny) {
	      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received
	      var preDenyPromise = Promise.resolve().then(function () {
	        return asPromise(innerParams.preDeny(value, innerParams.validationMessage));
	      });
	      preDenyPromise.then(function (preDenyValue) {
	        if (preDenyValue === false) {
	          instance.hideLoading();
	          handleAwaitingPromise(instance);
	        } else {
	          instance.close({
	            isDenied: true,
	            value: typeof preDenyValue === 'undefined' ? value : preDenyValue
	          });
	        }
	      })["catch"](function (error) {
	        return rejectWith(instance || _this, error);
	      });
	    } else {
	      instance.close({
	        isDenied: true,
	        value: value
	      });
	    }
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @param {any} value
	   */
	  var succeedWith = function succeedWith(instance, value) {
	    instance.close({
	      isConfirmed: true,
	      value: value
	    });
	  };

	  /**
	   *
	   * @param {SweetAlert} instance
	   * @param {string} error
	   */
	  var rejectWith = function rejectWith(instance, error) {
	    instance.rejectPromise(error);
	  };

	  /**
	   *
	   * @param {SweetAlert} instance
	   * @param {any} value
	   */
	  var confirm = function confirm(instance, value) {
	    var innerParams = privateProps.innerParams.get(instance || _this);
	    if (innerParams.showLoaderOnConfirm) {
	      showLoading();
	    }
	    if (innerParams.preConfirm) {
	      instance.resetValidationMessage();
	      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received
	      var preConfirmPromise = Promise.resolve().then(function () {
	        return asPromise(innerParams.preConfirm(value, innerParams.validationMessage));
	      });
	      preConfirmPromise.then(function (preConfirmValue) {
	        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {
	          instance.hideLoading();
	          handleAwaitingPromise(instance);
	        } else {
	          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);
	        }
	      })["catch"](function (error) {
	        return rejectWith(instance || _this, error);
	      });
	    } else {
	      succeedWith(instance, value);
	    }
	  };

	  /**
	   * Hides loader and shows back the button which was hidden by .showLoading()
	   */
	  function hideLoading() {
	    // do nothing if popup is closed
	    var innerParams = privateProps.innerParams.get(this);
	    if (!innerParams) {
	      return;
	    }
	    var domCache = privateProps.domCache.get(this);
	    hide(domCache.loader);
	    if (isToast()) {
	      if (innerParams.icon) {
	        show(getIcon());
	      }
	    } else {
	      showRelatedButton(domCache);
	    }
	    removeClass([domCache.popup, domCache.actions], swalClasses.loading);
	    domCache.popup.removeAttribute('aria-busy');
	    domCache.popup.removeAttribute('data-loading');
	    domCache.confirmButton.disabled = false;
	    domCache.denyButton.disabled = false;
	    domCache.cancelButton.disabled = false;
	  }
	  var showRelatedButton = function showRelatedButton(domCache) {
	    var buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));
	    if (buttonToReplace.length) {
	      show(buttonToReplace[0], 'inline-block');
	    } else if (allButtonsAreHidden()) {
	      hide(domCache.actions);
	    }
	  };

	  /**
	   * Gets the input DOM node, this method works with input parameter.
	   *
	   * @returns {HTMLInputElement | null}
	   */
	  function getInput() {
	    var innerParams = privateProps.innerParams.get(this);
	    var domCache = privateProps.domCache.get(this);
	    if (!domCache) {
	      return null;
	    }
	    return getInput$1(domCache.popup, innerParams.input);
	  }

	  /**
	   * @param {SweetAlert} instance
	   * @param {string[]} buttons
	   * @param {boolean} disabled
	   */
	  function setButtonsDisabled(instance, buttons, disabled) {
	    var domCache = privateProps.domCache.get(instance);
	    buttons.forEach(function (button) {
	      domCache[button].disabled = disabled;
	    });
	  }

	  /**
	   * @param {HTMLInputElement | null} input
	   * @param {boolean} disabled
	   */
	  function setInputDisabled(input, disabled) {
	    var popup = getPopup();
	    if (!popup || !input) {
	      return;
	    }
	    if (input.type === 'radio') {
	      /** @type {NodeListOf<HTMLInputElement>} */
	      var radios = popup.querySelectorAll("[name=\"".concat(swalClasses.radio, "\"]"));
	      for (var i = 0; i < radios.length; i++) {
	        radios[i].disabled = disabled;
	      }
	    } else {
	      input.disabled = disabled;
	    }
	  }

	  /**
	   * Enable all the buttons
	   * @this {SweetAlert}
	   */
	  function enableButtons() {
	    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);
	  }

	  /**
	   * Disable all the buttons
	   * @this {SweetAlert}
	   */
	  function disableButtons() {
	    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);
	  }

	  /**
	   * Enable the input field
	   * @this {SweetAlert}
	   */
	  function enableInput() {
	    setInputDisabled(this.getInput(), false);
	  }

	  /**
	   * Disable the input field
	   * @this {SweetAlert}
	   */
	  function disableInput() {
	    setInputDisabled(this.getInput(), true);
	  }

	  /**
	   * Show block with validation message
	   *
	   * @param {string} error
	   * @this {SweetAlert}
	   */
	  function showValidationMessage(error) {
	    var domCache = privateProps.domCache.get(this);
	    var params = privateProps.innerParams.get(this);
	    setInnerHtml(domCache.validationMessage, error);
	    domCache.validationMessage.className = swalClasses['validation-message'];
	    if (params.customClass && params.customClass.validationMessage) {
	      addClass(domCache.validationMessage, params.customClass.validationMessage);
	    }
	    show(domCache.validationMessage);
	    var input = this.getInput();
	    if (input) {
	      input.setAttribute('aria-invalid', 'true');
	      input.setAttribute('aria-describedby', swalClasses['validation-message']);
	      focusInput(input);
	      addClass(input, swalClasses.inputerror);
	    }
	  }

	  /**
	   * Hide block with validation message
	   *
	   * @this {SweetAlert}
	   */
	  function resetValidationMessage() {
	    var domCache = privateProps.domCache.get(this);
	    if (domCache.validationMessage) {
	      hide(domCache.validationMessage);
	    }
	    var input = this.getInput();
	    if (input) {
	      input.removeAttribute('aria-invalid');
	      input.removeAttribute('aria-describedby');
	      removeClass(input, swalClasses.inputerror);
	    }
	  }

	  var defaultParams = {
	    title: '',
	    titleText: '',
	    text: '',
	    html: '',
	    footer: '',
	    icon: undefined,
	    iconColor: undefined,
	    iconHtml: undefined,
	    template: undefined,
	    toast: false,
	    animation: true,
	    showClass: {
	      popup: 'swal2-show',
	      backdrop: 'swal2-backdrop-show',
	      icon: 'swal2-icon-show'
	    },
	    hideClass: {
	      popup: 'swal2-hide',
	      backdrop: 'swal2-backdrop-hide',
	      icon: 'swal2-icon-hide'
	    },
	    customClass: {},
	    target: 'body',
	    color: undefined,
	    backdrop: true,
	    heightAuto: true,
	    allowOutsideClick: true,
	    allowEscapeKey: true,
	    allowEnterKey: true,
	    stopKeydownPropagation: true,
	    keydownListenerCapture: false,
	    showConfirmButton: true,
	    showDenyButton: false,
	    showCancelButton: false,
	    preConfirm: undefined,
	    preDeny: undefined,
	    confirmButtonText: 'OK',
	    confirmButtonAriaLabel: '',
	    confirmButtonColor: undefined,
	    denyButtonText: 'No',
	    denyButtonAriaLabel: '',
	    denyButtonColor: undefined,
	    cancelButtonText: 'Cancel',
	    cancelButtonAriaLabel: '',
	    cancelButtonColor: undefined,
	    buttonsStyling: true,
	    reverseButtons: false,
	    focusConfirm: true,
	    focusDeny: false,
	    focusCancel: false,
	    returnFocus: true,
	    showCloseButton: false,
	    closeButtonHtml: '&times;',
	    closeButtonAriaLabel: 'Close this dialog',
	    loaderHtml: '',
	    showLoaderOnConfirm: false,
	    showLoaderOnDeny: false,
	    imageUrl: undefined,
	    imageWidth: undefined,
	    imageHeight: undefined,
	    imageAlt: '',
	    timer: undefined,
	    timerProgressBar: false,
	    width: undefined,
	    padding: undefined,
	    background: undefined,
	    input: undefined,
	    inputPlaceholder: '',
	    inputLabel: '',
	    inputValue: '',
	    inputOptions: {},
	    inputAutoFocus: true,
	    inputAutoTrim: true,
	    inputAttributes: {},
	    inputValidator: undefined,
	    returnInputValueOnDeny: false,
	    validationMessage: undefined,
	    grow: false,
	    position: 'center',
	    progressSteps: [],
	    currentProgressStep: undefined,
	    progressStepsDistance: undefined,
	    willOpen: undefined,
	    didOpen: undefined,
	    didRender: undefined,
	    willClose: undefined,
	    didClose: undefined,
	    didDestroy: undefined,
	    scrollbarPadding: true
	  };
	  var updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];

	  /** @type {Record<string, string>} */
	  var deprecatedParams = {};
	  var toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];

	  /**
	   * Is valid parameter
	   *
	   * @param {string} paramName
	   * @returns {boolean}
	   */
	  var isValidParameter = function isValidParameter(paramName) {
	    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);
	  };

	  /**
	   * Is valid parameter for Swal.update() method
	   *
	   * @param {string} paramName
	   * @returns {boolean}
	   */
	  var isUpdatableParameter = function isUpdatableParameter(paramName) {
	    return updatableParams.indexOf(paramName) !== -1;
	  };

	  /**
	   * Is deprecated parameter
	   *
	   * @param {string} paramName
	   * @returns {string | undefined}
	   */
	  var isDeprecatedParameter = function isDeprecatedParameter(paramName) {
	    return deprecatedParams[paramName];
	  };

	  /**
	   * @param {string} param
	   */
	  var checkIfParamIsValid = function checkIfParamIsValid(param) {
	    if (!isValidParameter(param)) {
	      warn("Unknown parameter \"".concat(param, "\""));
	    }
	  };

	  /**
	   * @param {string} param
	   */
	  var checkIfToastParamIsValid = function checkIfToastParamIsValid(param) {
	    if (toastIncompatibleParams.includes(param)) {
	      warn("The parameter \"".concat(param, "\" is incompatible with toasts"));
	    }
	  };

	  /**
	   * @param {string} param
	   */
	  var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(param) {
	    var isDeprecated = isDeprecatedParameter(param);
	    if (isDeprecated) {
	      warnAboutDeprecation(param, isDeprecated);
	    }
	  };

	  /**
	   * Show relevant warnings for given params
	   *
	   * @param {SweetAlertOptions} params
	   */
	  var showWarningsForParams = function showWarningsForParams(params) {
	    if (params.backdrop === false && params.allowOutsideClick) {
	      warn('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
	    }
	    for (var param in params) {
	      checkIfParamIsValid(param);
	      if (params.toast) {
	        checkIfToastParamIsValid(param);
	      }
	      checkIfParamIsDeprecated(param);
	    }
	  };

	  /**
	   * Updates popup parameters.
	   *
	   * @param {SweetAlertOptions} params
	   */
	  function update(params) {
	    var popup = getPopup();
	    var innerParams = privateProps.innerParams.get(this);
	    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {
	      warn("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
	      return;
	    }
	    var validUpdatableParams = filterValidParams(params);
	    var updatedParams = Object.assign({}, innerParams, validUpdatableParams);
	    render(this, updatedParams);
	    privateProps.innerParams.set(this, updatedParams);
	    Object.defineProperties(this, {
	      params: {
	        value: Object.assign({}, this.params, params),
	        writable: false,
	        enumerable: true
	      }
	    });
	  }

	  /**
	   * @param {SweetAlertOptions} params
	   * @returns {SweetAlertOptions}
	   */
	  var filterValidParams = function filterValidParams(params) {
	    var validUpdatableParams = {};
	    Object.keys(params).forEach(function (param) {
	      if (isUpdatableParameter(param)) {
	        validUpdatableParams[param] = params[param];
	      } else {
	        warn("Invalid parameter to update: ".concat(param));
	      }
	    });
	    return validUpdatableParams;
	  };

	  /**
	   * Dispose the current SweetAlert2 instance
	   */
	  function _destroy() {
	    var domCache = privateProps.domCache.get(this);
	    var innerParams = privateProps.innerParams.get(this);
	    if (!innerParams) {
	      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335
	      return; // This instance has already been destroyed
	    }

	    // Check if there is another Swal closing
	    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {
	      globalState.swalCloseEventFinishedCallback();
	      delete globalState.swalCloseEventFinishedCallback;
	    }
	    if (typeof innerParams.didDestroy === 'function') {
	      innerParams.didDestroy();
	    }
	    disposeSwal(this);
	  }

	  /**
	   * @param {SweetAlert} instance
	   */
	  var disposeSwal = function disposeSwal(instance) {
	    disposeWeakMaps(instance);
	    // Unset this.params so GC will dispose it (#1569)
	    delete instance.params;
	    // Unset globalState props so GC will dispose globalState (#1569)
	    delete globalState.keydownHandler;
	    delete globalState.keydownTarget;
	    // Unset currentInstance
	    delete globalState.currentInstance;
	  };

	  /**
	   * @param {SweetAlert} instance
	   */
	  var disposeWeakMaps = function disposeWeakMaps(instance) {
	    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335
	    if (instance.isAwaitingPromise) {
	      unsetWeakMaps(privateProps, instance);
	      instance.isAwaitingPromise = true;
	    } else {
	      unsetWeakMaps(privateMethods, instance);
	      unsetWeakMaps(privateProps, instance);
	      delete instance.isAwaitingPromise;
	      // Unset instance methods
	      delete instance.disableButtons;
	      delete instance.enableButtons;
	      delete instance.getInput;
	      delete instance.disableInput;
	      delete instance.enableInput;
	      delete instance.hideLoading;
	      delete instance.disableLoading;
	      delete instance.showValidationMessage;
	      delete instance.resetValidationMessage;
	      delete instance.close;
	      delete instance.closePopup;
	      delete instance.closeModal;
	      delete instance.closeToast;
	      delete instance.rejectPromise;
	      delete instance.update;
	      delete instance._destroy;
	    }
	  };

	  /**
	   * @param {object} obj
	   * @param {SweetAlert} instance
	   */
	  var unsetWeakMaps = function unsetWeakMaps(obj, instance) {
	    for (var i in obj) {
	      obj[i]["delete"](instance);
	    }
	  };

	  var instanceMethods = /*#__PURE__*/Object.freeze({
	    __proto__: null,
	    _destroy: _destroy,
	    close: close,
	    closeModal: close,
	    closePopup: close,
	    closeToast: close,
	    disableButtons: disableButtons,
	    disableInput: disableInput,
	    disableLoading: hideLoading,
	    enableButtons: enableButtons,
	    enableInput: enableInput,
	    getInput: getInput,
	    handleAwaitingPromise: handleAwaitingPromise,
	    hideLoading: hideLoading,
	    rejectPromise: rejectPromise,
	    resetValidationMessage: resetValidationMessage,
	    showValidationMessage: showValidationMessage,
	    update: update
	  });

	  /**
	   * @param {SweetAlertOptions} innerParams
	   * @param {DomCache} domCache
	   * @param {Function} dismissWith
	   */
	  var handlePopupClick = function handlePopupClick(innerParams, domCache, dismissWith) {
	    if (innerParams.toast) {
	      handleToastClick(innerParams, domCache, dismissWith);
	    } else {
	      // Ignore click events that had mousedown on the popup but mouseup on the container
	      // This can happen when the user drags a slider
	      handleModalMousedown(domCache);

	      // Ignore click events that had mousedown on the container but mouseup on the popup
	      handleContainerMousedown(domCache);
	      handleModalClick(innerParams, domCache, dismissWith);
	    }
	  };

	  /**
	   * @param {SweetAlertOptions} innerParams
	   * @param {DomCache} domCache
	   * @param {Function} dismissWith
	   */
	  var handleToastClick = function handleToastClick(innerParams, domCache, dismissWith) {
	    // Closing toast by internal click
	    domCache.popup.onclick = function () {
	      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {
	        return;
	      }
	      dismissWith(DismissReason.close);
	    };
	  };

	  /**
	   * @param {SweetAlertOptions} innerParams
	   * @returns {boolean}
	   */
	  var isAnyButtonShown = function isAnyButtonShown(innerParams) {
	    return !!(innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton);
	  };
	  var ignoreOutsideClick = false;

	  /**
	   * @param {DomCache} domCache
	   */
	  var handleModalMousedown = function handleModalMousedown(domCache) {
	    domCache.popup.onmousedown = function () {
	      domCache.container.onmouseup = function (e) {
	        domCache.container.onmouseup = function () {};
	        // We only check if the mouseup target is the container because usually it doesn't
	        // have any other direct children aside of the popup
	        if (e.target === domCache.container) {
	          ignoreOutsideClick = true;
	        }
	      };
	    };
	  };

	  /**
	   * @param {DomCache} domCache
	   */
	  var handleContainerMousedown = function handleContainerMousedown(domCache) {
	    domCache.container.onmousedown = function () {
	      domCache.popup.onmouseup = function (e) {
	        domCache.popup.onmouseup = function () {};
	        // We also need to check if the mouseup target is a child of the popup
	        if (e.target === domCache.popup || e.target instanceof HTMLElement && domCache.popup.contains(e.target)) {
	          ignoreOutsideClick = true;
	        }
	      };
	    };
	  };

	  /**
	   * @param {SweetAlertOptions} innerParams
	   * @param {DomCache} domCache
	   * @param {Function} dismissWith
	   */
	  var handleModalClick = function handleModalClick(innerParams, domCache, dismissWith) {
	    domCache.container.onclick = function (e) {
	      if (ignoreOutsideClick) {
	        ignoreOutsideClick = false;
	        return;
	      }
	      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {
	        dismissWith(DismissReason.backdrop);
	      }
	    };
	  };

	  var isJqueryElement = function isJqueryElement(elem) {
	    return _typeof(elem) === 'object' && elem.jquery;
	  };
	  var isElement = function isElement(elem) {
	    return elem instanceof Element || isJqueryElement(elem);
	  };
	  var argsToParams = function argsToParams(args) {
	    var params = {};
	    if (_typeof(args[0]) === 'object' && !isElement(args[0])) {
	      Object.assign(params, args[0]);
	    } else {
	      ['title', 'html', 'icon'].forEach(function (name, index) {
	        var arg = args[index];
	        if (typeof arg === 'string' || isElement(arg)) {
	          params[name] = arg;
	        } else if (arg !== undefined) {
	          error("Unexpected type of ".concat(name, "! Expected \"string\" or \"Element\", got ").concat(_typeof(arg)));
	        }
	      });
	    }
	    return params;
	  };

	  /**
	   * Main method to create a new SweetAlert2 popup
	   *
	   * @param  {...SweetAlertOptions} args
	   * @returns {Promise<SweetAlertResult>}
	   */
	  function fire() {
	    var Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	    return _construct(Swal, args);
	  }

	  /**
	   * Returns an extended version of `Swal` containing `params` as defaults.
	   * Useful for reusing Swal configuration.
	   *
	   * For example:
	   *
	   * Before:
	   * const textPromptOptions = { input: 'text', showCancelButton: true }
	   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
	   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
	   *
	   * After:
	   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
	   * const {value: firstName} = await TextPrompt('What is your first name?')
	   * const {value: lastName} = await TextPrompt('What is your last name?')
	   *
	   * @param {SweetAlertOptions} mixinParams
	   * @returns {SweetAlert}
	   */
	  function mixin(mixinParams) {
	    var MixinSwal = /*#__PURE__*/function (_this) {
	      _inherits(MixinSwal, _this);
	      function MixinSwal() {
	        _classCallCheck(this, MixinSwal);
	        return _callSuper(this, MixinSwal, arguments);
	      }
	      _createClass(MixinSwal, [{
	        key: "_main",
	        value: function _main(params, priorityMixinParams) {
	          return _get(_getPrototypeOf(MixinSwal.prototype), "_main", this).call(this, params, Object.assign({}, mixinParams, priorityMixinParams));
	        }
	      }]);
	      return MixinSwal;
	    }(this); // @ts-ignore
	    return MixinSwal;
	  }

	  /**
	   * If `timer` parameter is set, returns number of milliseconds of timer remained.
	   * Otherwise, returns undefined.
	   *
	   * @returns {number | undefined}
	   */
	  var getTimerLeft = function getTimerLeft() {
	    return globalState.timeout && globalState.timeout.getTimerLeft();
	  };

	  /**
	   * Stop timer. Returns number of milliseconds of timer remained.
	   * If `timer` parameter isn't set, returns undefined.
	   *
	   * @returns {number | undefined}
	   */
	  var stopTimer = function stopTimer() {
	    if (globalState.timeout) {
	      stopTimerProgressBar();
	      return globalState.timeout.stop();
	    }
	  };

	  /**
	   * Resume timer. Returns number of milliseconds of timer remained.
	   * If `timer` parameter isn't set, returns undefined.
	   *
	   * @returns {number | undefined}
	   */
	  var resumeTimer = function resumeTimer() {
	    if (globalState.timeout) {
	      var remaining = globalState.timeout.start();
	      animateTimerProgressBar(remaining);
	      return remaining;
	    }
	  };

	  /**
	   * Resume timer. Returns number of milliseconds of timer remained.
	   * If `timer` parameter isn't set, returns undefined.
	   *
	   * @returns {number | undefined}
	   */
	  var toggleTimer = function toggleTimer() {
	    var timer = globalState.timeout;
	    return timer && (timer.running ? stopTimer() : resumeTimer());
	  };

	  /**
	   * Increase timer. Returns number of milliseconds of an updated timer.
	   * If `timer` parameter isn't set, returns undefined.
	   *
	   * @param {number} ms
	   * @returns {number | undefined}
	   */
	  var increaseTimer = function increaseTimer(ms) {
	    if (globalState.timeout) {
	      var remaining = globalState.timeout.increase(ms);
	      animateTimerProgressBar(remaining, true);
	      return remaining;
	    }
	  };

	  /**
	   * Check if timer is running. Returns true if timer is running
	   * or false if timer is paused or stopped.
	   * If `timer` parameter isn't set, returns undefined
	   *
	   * @returns {boolean}
	   */
	  var isTimerRunning = function isTimerRunning() {
	    return !!(globalState.timeout && globalState.timeout.isRunning());
	  };

	  var bodyClickListenerAdded = false;
	  var clickHandlers = {};

	  /**
	   * @param {string} attr
	   */
	  function bindClickHandler() {
	    var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';
	    clickHandlers[attr] = this;
	    if (!bodyClickListenerAdded) {
	      document.body.addEventListener('click', bodyClickListener);
	      bodyClickListenerAdded = true;
	    }
	  }
	  var bodyClickListener = function bodyClickListener(event) {
	    for (var el = event.target; el && el !== document; el = el.parentNode) {
	      for (var attr in clickHandlers) {
	        var template = el.getAttribute(attr);
	        if (template) {
	          clickHandlers[attr].fire({
	            template: template
	          });
	          return;
	        }
	      }
	    }
	  };

	  var staticMethods = /*#__PURE__*/Object.freeze({
	    __proto__: null,
	    argsToParams: argsToParams,
	    bindClickHandler: bindClickHandler,
	    clickCancel: clickCancel,
	    clickConfirm: clickConfirm,
	    clickDeny: clickDeny,
	    enableLoading: showLoading,
	    fire: fire,
	    getActions: getActions,
	    getCancelButton: getCancelButton,
	    getCloseButton: getCloseButton,
	    getConfirmButton: getConfirmButton,
	    getContainer: getContainer,
	    getDenyButton: getDenyButton,
	    getFocusableElements: getFocusableElements,
	    getFooter: getFooter,
	    getHtmlContainer: getHtmlContainer,
	    getIcon: getIcon,
	    getIconContent: getIconContent,
	    getImage: getImage,
	    getInputLabel: getInputLabel,
	    getLoader: getLoader,
	    getPopup: getPopup,
	    getProgressSteps: getProgressSteps,
	    getTimerLeft: getTimerLeft,
	    getTimerProgressBar: getTimerProgressBar,
	    getTitle: getTitle,
	    getValidationMessage: getValidationMessage,
	    increaseTimer: increaseTimer,
	    isDeprecatedParameter: isDeprecatedParameter,
	    isLoading: isLoading,
	    isTimerRunning: isTimerRunning,
	    isUpdatableParameter: isUpdatableParameter,
	    isValidParameter: isValidParameter,
	    isVisible: isVisible,
	    mixin: mixin,
	    resumeTimer: resumeTimer,
	    showLoading: showLoading,
	    stopTimer: stopTimer,
	    toggleTimer: toggleTimer
	  });

	  var Timer = /*#__PURE__*/function () {
	    /**
	     * @param {Function} callback
	     * @param {number} delay
	     */
	    function Timer(callback, delay) {
	      _classCallCheck(this, Timer);
	      this.callback = callback;
	      this.remaining = delay;
	      this.running = false;
	      this.start();
	    }

	    /**
	     * @returns {number}
	     */
	    _createClass(Timer, [{
	      key: "start",
	      value: function start() {
	        if (!this.running) {
	          this.running = true;
	          this.started = new Date();
	          this.id = setTimeout(this.callback, this.remaining);
	        }
	        return this.remaining;
	      }

	      /**
	       * @returns {number}
	       */
	    }, {
	      key: "stop",
	      value: function stop() {
	        if (this.started && this.running) {
	          this.running = false;
	          clearTimeout(this.id);
	          this.remaining -= new Date().getTime() - this.started.getTime();
	        }
	        return this.remaining;
	      }

	      /**
	       * @param {number} n
	       * @returns {number}
	       */
	    }, {
	      key: "increase",
	      value: function increase(n) {
	        var running = this.running;
	        if (running) {
	          this.stop();
	        }
	        this.remaining += n;
	        if (running) {
	          this.start();
	        }
	        return this.remaining;
	      }

	      /**
	       * @returns {number}
	       */
	    }, {
	      key: "getTimerLeft",
	      value: function getTimerLeft() {
	        if (this.running) {
	          this.stop();
	          this.start();
	        }
	        return this.remaining;
	      }

	      /**
	       * @returns {boolean}
	       */
	    }, {
	      key: "isRunning",
	      value: function isRunning() {
	        return this.running;
	      }
	    }]);
	    return Timer;
	  }();

	  var swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];

	  /**
	   * @param {SweetAlertOptions} params
	   * @returns {SweetAlertOptions}
	   */
	  var getTemplateParams = function getTemplateParams(params) {
	    /** @type {HTMLTemplateElement} */
	    var template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;
	    if (!template) {
	      return {};
	    }
	    /** @type {DocumentFragment} */
	    var templateContent = template.content;
	    showWarningsForElements(templateContent);
	    var result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalParams = function getSwalParams(templateContent) {
	    var result = {};
	    /** @type {HTMLElement[]} */
	    var swalParams = Array.from(templateContent.querySelectorAll('swal-param'));
	    swalParams.forEach(function (param) {
	      showWarningsForAttributes(param, ['name', 'value']);
	      var paramName = param.getAttribute('name');
	      var value = param.getAttribute('value');
	      if (typeof defaultParams[paramName] === 'boolean') {
	        result[paramName] = value !== 'false';
	      } else if (_typeof(defaultParams[paramName]) === 'object') {
	        result[paramName] = JSON.parse(value);
	      } else {
	        result[paramName] = value;
	      }
	    });
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalFunctionParams = function getSwalFunctionParams(templateContent) {
	    var result = {};
	    /** @type {HTMLElement[]} */
	    var swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));
	    swalFunctions.forEach(function (param) {
	      var paramName = param.getAttribute('name');
	      var value = param.getAttribute('value');
	      result[paramName] = new Function("return ".concat(value))();
	    });
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalButtons = function getSwalButtons(templateContent) {
	    var result = {};
	    /** @type {HTMLElement[]} */
	    var swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));
	    swalButtons.forEach(function (button) {
	      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);
	      var type = button.getAttribute('type');
	      result["".concat(type, "ButtonText")] = button.innerHTML;
	      result["show".concat(capitalizeFirstLetter(type), "Button")] = true;
	      if (button.hasAttribute('color')) {
	        result["".concat(type, "ButtonColor")] = button.getAttribute('color');
	      }
	      if (button.hasAttribute('aria-label')) {
	        result["".concat(type, "ButtonAriaLabel")] = button.getAttribute('aria-label');
	      }
	    });
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalImage = function getSwalImage(templateContent) {
	    var result = {};
	    /** @type {HTMLElement} */
	    var image = templateContent.querySelector('swal-image');
	    if (image) {
	      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);
	      if (image.hasAttribute('src')) {
	        result.imageUrl = image.getAttribute('src');
	      }
	      if (image.hasAttribute('width')) {
	        result.imageWidth = image.getAttribute('width');
	      }
	      if (image.hasAttribute('height')) {
	        result.imageHeight = image.getAttribute('height');
	      }
	      if (image.hasAttribute('alt')) {
	        result.imageAlt = image.getAttribute('alt');
	      }
	    }
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalIcon = function getSwalIcon(templateContent) {
	    var result = {};
	    /** @type {HTMLElement} */
	    var icon = templateContent.querySelector('swal-icon');
	    if (icon) {
	      showWarningsForAttributes(icon, ['type', 'color']);
	      if (icon.hasAttribute('type')) {
	        /** @type {SweetAlertIcon} */
	        // @ts-ignore
	        result.icon = icon.getAttribute('type');
	      }
	      if (icon.hasAttribute('color')) {
	        result.iconColor = icon.getAttribute('color');
	      }
	      result.iconHtml = icon.innerHTML;
	    }
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalInput = function getSwalInput(templateContent) {
	    var result = {};
	    /** @type {HTMLElement} */
	    var input = templateContent.querySelector('swal-input');
	    if (input) {
	      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);
	      /** @type {SweetAlertInput} */
	      // @ts-ignore
	      result.input = input.getAttribute('type') || 'text';
	      if (input.hasAttribute('label')) {
	        result.inputLabel = input.getAttribute('label');
	      }
	      if (input.hasAttribute('placeholder')) {
	        result.inputPlaceholder = input.getAttribute('placeholder');
	      }
	      if (input.hasAttribute('value')) {
	        result.inputValue = input.getAttribute('value');
	      }
	    }
	    /** @type {HTMLElement[]} */
	    var inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));
	    if (inputOptions.length) {
	      result.inputOptions = {};
	      inputOptions.forEach(function (option) {
	        showWarningsForAttributes(option, ['value']);
	        var optionValue = option.getAttribute('value');
	        var optionName = option.innerHTML;
	        result.inputOptions[optionValue] = optionName;
	      });
	    }
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   * @param {string[]} paramNames
	   * @returns {SweetAlertOptions}
	   */
	  var getSwalStringParams = function getSwalStringParams(templateContent, paramNames) {
	    var result = {};
	    for (var i in paramNames) {
	      var paramName = paramNames[i];
	      /** @type {HTMLElement} */
	      var tag = templateContent.querySelector(paramName);
	      if (tag) {
	        showWarningsForAttributes(tag, []);
	        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();
	      }
	    }
	    return result;
	  };

	  /**
	   * @param {DocumentFragment} templateContent
	   */
	  var showWarningsForElements = function showWarningsForElements(templateContent) {
	    var allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);
	    Array.from(templateContent.children).forEach(function (el) {
	      var tagName = el.tagName.toLowerCase();
	      if (!allowedElements.includes(tagName)) {
	        warn("Unrecognized element <".concat(tagName, ">"));
	      }
	    });
	  };

	  /**
	   * @param {HTMLElement} el
	   * @param {string[]} allowedAttributes
	   */
	  var showWarningsForAttributes = function showWarningsForAttributes(el, allowedAttributes) {
	    Array.from(el.attributes).forEach(function (attribute) {
	      if (allowedAttributes.indexOf(attribute.name) === -1) {
	        warn(["Unrecognized attribute \"".concat(attribute.name, "\" on <").concat(el.tagName.toLowerCase(), ">."), "".concat(allowedAttributes.length ? "Allowed attributes are: ".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);
	      }
	    });
	  };

	  var SHOW_CLASS_TIMEOUT = 10;

	  /**
	   * Open popup, add necessary classes and styles, fix scrollbar
	   *
	   * @param {SweetAlertOptions} params
	   */
	  var openPopup = function openPopup(params) {
	    var container = getContainer();
	    var popup = getPopup();
	    if (typeof params.willOpen === 'function') {
	      params.willOpen(popup);
	    }
	    var bodyStyles = window.getComputedStyle(document.body);
	    var initialBodyOverflow = bodyStyles.overflowY;
	    addClasses(container, popup, params);

	    // scrolling is 'hidden' until animation is done, after that 'auto'
	    setTimeout(function () {
	      setScrollingVisibility(container, popup);
	    }, SHOW_CLASS_TIMEOUT);
	    if (isModal()) {
	      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);
	      setAriaHidden();
	    }
	    if (!isToast() && !globalState.previousActiveElement) {
	      globalState.previousActiveElement = document.activeElement;
	    }
	    if (typeof params.didOpen === 'function') {
	      setTimeout(function () {
	        return params.didOpen(popup);
	      });
	    }
	    removeClass(container, swalClasses['no-transition']);
	  };

	  /**
	   * @param {AnimationEvent} event
	   */
	  var swalOpenAnimationFinished = function swalOpenAnimationFinished(event) {
	    var popup = getPopup();
	    if (event.target !== popup || !animationEndEvent) {
	      return;
	    }
	    var container = getContainer();
	    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);
	    container.style.overflowY = 'auto';
	  };

	  /**
	   * @param {HTMLElement} container
	   * @param {HTMLElement} popup
	   */
	  var setScrollingVisibility = function setScrollingVisibility(container, popup) {
	    if (animationEndEvent && hasCssAnimation(popup)) {
	      container.style.overflowY = 'hidden';
	      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);
	    } else {
	      container.style.overflowY = 'auto';
	    }
	  };

	  /**
	   * @param {HTMLElement} container
	   * @param {boolean} scrollbarPadding
	   * @param {string} initialBodyOverflow
	   */
	  var fixScrollContainer = function fixScrollContainer(container, scrollbarPadding, initialBodyOverflow) {
	    iOSfix();
	    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {
	      replaceScrollbarWithPadding(initialBodyOverflow);
	    }

	    // sweetalert2/issues/1247
	    setTimeout(function () {
	      container.scrollTop = 0;
	    });
	  };

	  /**
	   * @param {HTMLElement} container
	   * @param {HTMLElement} popup
	   * @param {SweetAlertOptions} params
	   */
	  var addClasses = function addClasses(container, popup, params) {
	    addClass(container, params.showClass.backdrop);
	    if (params.animation) {
	      // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059
	      popup.style.setProperty('opacity', '0', 'important');
	      show(popup, 'grid');
	      setTimeout(function () {
	        // Animate popup right after showing it
	        addClass(popup, params.showClass.popup);
	        // and remove the opacity workaround
	        popup.style.removeProperty('opacity');
	      }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062
	    } else {
	      show(popup, 'grid');
	    }
	    addClass([document.documentElement, document.body], swalClasses.shown);
	    if (params.heightAuto && params.backdrop && !params.toast) {
	      addClass([document.documentElement, document.body], swalClasses['height-auto']);
	    }
	  };

	  var defaultInputValidators = {
	    /**
	     * @param {string} string
	     * @param {string} [validationMessage]
	     * @returns {Promise<string | void>}
	     */
	    email: function email(string, validationMessage) {
	      return (/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address')
	      );
	    },
	    /**
	     * @param {string} string
	     * @param {string} [validationMessage]
	     * @returns {Promise<string | void>}
	     */
	    url: function url(string, validationMessage) {
	      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013
	      return (/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL')
	      );
	    }
	  };

	  /**
	   * @param {SweetAlertOptions} params
	   */
	  function setDefaultInputValidators(params) {
	    // Use default `inputValidator` for supported input types if not provided
	    if (params.inputValidator) {
	      return;
	    }
	    if (params.input === 'email') {
	      params.inputValidator = defaultInputValidators['email'];
	    }
	    if (params.input === 'url') {
	      params.inputValidator = defaultInputValidators['url'];
	    }
	  }

	  /**
	   * @param {SweetAlertOptions} params
	   */
	  function validateCustomTargetElement(params) {
	    // Determine if the custom target element is valid
	    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {
	      warn('Target parameter is not valid, defaulting to "body"');
	      params.target = 'body';
	    }
	  }

	  /**
	   * Set type, text and actions on popup
	   *
	   * @param {SweetAlertOptions} params
	   */
	  function setParameters(params) {
	    setDefaultInputValidators(params);

	    // showLoaderOnConfirm && preConfirm
	    if (params.showLoaderOnConfirm && !params.preConfirm) {
	      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\n' + 'https://sweetalert2.github.io/#ajax-request');
	    }
	    validateCustomTargetElement(params);

	    // Replace newlines with <br> in title
	    if (typeof params.title === 'string') {
	      params.title = params.title.split('\n').join('<br />');
	    }
	    init(params);
	  }

	  /** @type {SweetAlert} */
	  var currentInstance;
	  var _promise = /*#__PURE__*/new WeakMap();
	  var SweetAlert = /*#__PURE__*/function () {
	    /**
	     * @param {...any} args
	     * @this {SweetAlert}
	     */
	    function SweetAlert() {
	      _classCallCheck(this, SweetAlert);
	      /**
	       * @type {Promise<SweetAlertResult>}
	       */
	      _classPrivateFieldInitSpec(this, _promise, {
	        writable: true,
	        value: void 0
	      });
	      // Prevent run in Node env
	      if (typeof window === 'undefined') {
	        return;
	      }
	      currentInstance = this;

	      // @ts-ignore
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	      var outerParams = Object.freeze(this.constructor.argsToParams(args));

	      /** @type {Readonly<SweetAlertOptions>} */
	      this.params = outerParams;

	      /** @type {boolean} */
	      this.isAwaitingPromise = false;
	      _classPrivateFieldSet(this, _promise, this._main(currentInstance.params));
	    }
	    _createClass(SweetAlert, [{
	      key: "_main",
	      value: function _main(userParams) {
	        var mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	        showWarningsForParams(Object.assign({}, mixinParams, userParams));
	        if (globalState.currentInstance) {
	          var swalPromiseResolve = privateMethods.swalPromiseResolve.get(globalState.currentInstance);
	          var isAwaitingPromise = globalState.currentInstance.isAwaitingPromise;
	          globalState.currentInstance._destroy();
	          if (!isAwaitingPromise) {
	            swalPromiseResolve({
	              isDismissed: true
	            });
	          }
	          if (isModal()) {
	            unsetAriaHidden();
	          }
	        }
	        globalState.currentInstance = currentInstance;
	        var innerParams = prepareParams(userParams, mixinParams);
	        setParameters(innerParams);
	        Object.freeze(innerParams);

	        // clear the previous timer
	        if (globalState.timeout) {
	          globalState.timeout.stop();
	          delete globalState.timeout;
	        }

	        // clear the restore focus timeout
	        clearTimeout(globalState.restoreFocusTimeout);
	        var domCache = populateDomCache(currentInstance);
	        render(currentInstance, innerParams);
	        privateProps.innerParams.set(currentInstance, innerParams);
	        return swalPromise(currentInstance, domCache, innerParams);
	      }

	      // `catch` cannot be the name of a module export, so we define our thenable methods here instead
	    }, {
	      key: "then",
	      value: function then(onFulfilled) {
	        return _classPrivateFieldGet(this, _promise).then(onFulfilled);
	      }
	    }, {
	      key: "finally",
	      value: function _finally(onFinally) {
	        return _classPrivateFieldGet(this, _promise)["finally"](onFinally);
	      }
	    }]);
	    return SweetAlert;
	  }();

	  /**
	   * @param {SweetAlert} instance
	   * @param {DomCache} domCache
	   * @param {SweetAlertOptions} innerParams
	   * @returns {Promise}
	   */
	  var swalPromise = function swalPromise(instance, domCache, innerParams) {
	    return new Promise(function (resolve, reject) {
	      // functions to handle all closings/dismissals
	      /**
	       * @param {DismissReason} dismiss
	       */
	      var dismissWith = function dismissWith(dismiss) {
	        instance.close({
	          isDismissed: true,
	          dismiss: dismiss
	        });
	      };
	      privateMethods.swalPromiseResolve.set(instance, resolve);
	      privateMethods.swalPromiseReject.set(instance, reject);
	      domCache.confirmButton.onclick = function () {
	        handleConfirmButtonClick(instance);
	      };
	      domCache.denyButton.onclick = function () {
	        handleDenyButtonClick(instance);
	      };
	      domCache.cancelButton.onclick = function () {
	        handleCancelButtonClick(instance, dismissWith);
	      };
	      domCache.closeButton.onclick = function () {
	        dismissWith(DismissReason.close);
	      };
	      handlePopupClick(innerParams, domCache, dismissWith);
	      addKeydownHandler(globalState, innerParams, dismissWith);
	      handleInputOptionsAndValue(instance, innerParams);
	      openPopup(innerParams);
	      setupTimer(globalState, innerParams, dismissWith);
	      initFocus(domCache, innerParams);

	      // Scroll container to top on open (#1247, #1946)
	      setTimeout(function () {
	        domCache.container.scrollTop = 0;
	      });
	    });
	  };

	  /**
	   * @param {SweetAlertOptions} userParams
	   * @param {SweetAlertOptions} mixinParams
	   * @returns {SweetAlertOptions}
	   */
	  var prepareParams = function prepareParams(userParams, mixinParams) {
	    var templateParams = getTemplateParams(userParams);
	    var params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131
	    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);
	    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);
	    if (params.animation === false) {
	      params.showClass = {
	        backdrop: 'swal2-noanimation'
	      };
	      params.hideClass = {};
	    }
	    return params;
	  };

	  /**
	   * @param {SweetAlert} instance
	   * @returns {DomCache}
	   */
	  var populateDomCache = function populateDomCache(instance) {
	    var domCache = {
	      popup: getPopup(),
	      container: getContainer(),
	      actions: getActions(),
	      confirmButton: getConfirmButton(),
	      denyButton: getDenyButton(),
	      cancelButton: getCancelButton(),
	      loader: getLoader(),
	      closeButton: getCloseButton(),
	      validationMessage: getValidationMessage(),
	      progressSteps: getProgressSteps()
	    };
	    privateProps.domCache.set(instance, domCache);
	    return domCache;
	  };

	  /**
	   * @param {GlobalState} globalState
	   * @param {SweetAlertOptions} innerParams
	   * @param {Function} dismissWith
	   */
	  var setupTimer = function setupTimer(globalState, innerParams, dismissWith) {
	    var timerProgressBar = getTimerProgressBar();
	    hide(timerProgressBar);
	    if (innerParams.timer) {
	      globalState.timeout = new Timer(function () {
	        dismissWith('timer');
	        delete globalState.timeout;
	      }, innerParams.timer);
	      if (innerParams.timerProgressBar) {
	        show(timerProgressBar);
	        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');
	        setTimeout(function () {
	          if (globalState.timeout && globalState.timeout.running) {
	            // timer can be already stopped or unset at this point
	            animateTimerProgressBar(innerParams.timer);
	          }
	        });
	      }
	    }
	  };

	  /**
	   * @param {DomCache} domCache
	   * @param {SweetAlertOptions} innerParams
	   */
	  var initFocus = function initFocus(domCache, innerParams) {
	    if (innerParams.toast) {
	      return;
	    }
	    if (!callIfFunction(innerParams.allowEnterKey)) {
	      blurActiveElement();
	      return;
	    }
	    if (!focusButton(domCache, innerParams)) {
	      setFocus(-1, 1);
	    }
	  };

	  /**
	   * @param {DomCache} domCache
	   * @param {SweetAlertOptions} innerParams
	   * @returns {boolean}
	   */
	  var focusButton = function focusButton(domCache, innerParams) {
	    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {
	      domCache.denyButton.focus();
	      return true;
	    }
	    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {
	      domCache.cancelButton.focus();
	      return true;
	    }
	    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {
	      domCache.confirmButton.focus();
	      return true;
	    }
	    return false;
	  };
	  var blurActiveElement = function blurActiveElement() {
	    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {
	      document.activeElement.blur();
	    }
	  };

	  // Dear russian users visiting russian sites. Let's have fun.
	  if (typeof window !== 'undefined' && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|by|xn--p1ai)$/)) {
	    var now = new Date();
	    var initiationDate = localStorage.getItem('swal-initiation');
	    if (!initiationDate) {
	      localStorage.setItem('swal-initiation', "".concat(now));
	    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {
	      setTimeout(function () {
	        document.body.style.pointerEvents = 'none';
	        var ukrainianAnthem = document.createElement('audio');
	        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';
	        ukrainianAnthem.loop = true;
	        document.body.appendChild(ukrainianAnthem);
	        setTimeout(function () {
	          ukrainianAnthem.play()["catch"](function () {
	            // ignore
	          });
	        }, 2500);
	      }, 500);
	    }
	  }

	  // Assign instance methods from src/instanceMethods/*.js to prototype
	  SweetAlert.prototype.disableButtons = disableButtons;
	  SweetAlert.prototype.enableButtons = enableButtons;
	  SweetAlert.prototype.getInput = getInput;
	  SweetAlert.prototype.disableInput = disableInput;
	  SweetAlert.prototype.enableInput = enableInput;
	  SweetAlert.prototype.hideLoading = hideLoading;
	  SweetAlert.prototype.disableLoading = hideLoading;
	  SweetAlert.prototype.showValidationMessage = showValidationMessage;
	  SweetAlert.prototype.resetValidationMessage = resetValidationMessage;
	  SweetAlert.prototype.close = close;
	  SweetAlert.prototype.closePopup = close;
	  SweetAlert.prototype.closeModal = close;
	  SweetAlert.prototype.closeToast = close;
	  SweetAlert.prototype.rejectPromise = rejectPromise;
	  SweetAlert.prototype.update = update;
	  SweetAlert.prototype._destroy = _destroy;

	  // Assign static methods from src/staticMethods/*.js to constructor
	  Object.assign(SweetAlert, staticMethods);

	  // Proxy to instance methods to constructor, for now, for backwards compatibility
	  Object.keys(instanceMethods).forEach(function (key) {
	    /**
	     * @param {...any} args
	     * @returns {any | undefined}
	     */
	    SweetAlert[key] = function () {
	      if (currentInstance && currentInstance[key]) {
	        var _currentInstance;
	        return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);
	      }
	      return null;
	    };
	  });
	  SweetAlert.DismissReason = DismissReason;
	  SweetAlert.version = '11.10.5';

	  var Swal = SweetAlert;
	  // @ts-ignore
	  Swal["default"] = Swal;

	  return Swal;
	});
	if (false) {
	  undefined.swal = undefined.sweetAlert = undefined.Swal = undefined.SweetAlert = undefined.Sweetalert2;
	}
	"undefined" != typeof document && function (e, t) {
	  var n = e.createElement("style");if (e.getElementsByTagName("head")[0].appendChild(n), n.styleSheet) n.styleSheet.disabled || (n.styleSheet.cssText = t);else try {
	    n.innerHTML = t;
	  } catch (e) {
	    n.innerText = t;
	  }
	}(document, ".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\"top-start     top            top-end\" \"center-start  center         center-end\" \"bottom-start  bottom-center  bottom-end\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:rgba(0,0,0,.4)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em;text-align:center}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em}div:where(.swal2-container) button:where(.swal2-close){z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) .swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:#fff}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\"!\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}div:where(.swal2-icon).swal2-warning{border-color:#facea8;color:#f8bb86}div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}div:where(.swal2-icon).swal2-info{border-color:#9de0f6;color:#3fc3ee}div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}div:where(.swal2-icon).swal2-question{border-color:#c9dae1;color:#87adbd}div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}");

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _sweetalert = __webpack_require__(186);

	var _sweetalert2 = _interopRequireDefault(_sweetalert);

	var _config = __webpack_require__(176);

	__webpack_require__(188);

	var _reactFlatpickr = __webpack_require__(191);

	var _reactFlatpickr2 = _interopRequireDefault(_reactFlatpickr);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var NotesDialog = function (_React$Component) {
	  _inherits(NotesDialog, _React$Component);

	  function NotesDialog(props) {
	    _classCallCheck(this, NotesDialog);

	    var _this = _possibleConstructorReturn(this, (NotesDialog.__proto__ || Object.getPrototypeOf(NotesDialog)).call(this, props));

	    _this.handleNote = _this.handleNote.bind(_this);
	    _this.clickCreateNote = _this.clickCreateNote.bind(_this);
	    _this.categoryChange = _this.categoryChange.bind(_this);
	    _this.sortCategoryTop = _this.sortCategoryTop.bind(_this);
	    _this.sortCategoryBottom = _this.sortCategoryBottom.bind(_this);
	    _this.handleDate = _this.handleDate.bind(_this);
	    _this.makeLogout = _this.makeLogout.bind(_this);
	    _this.reload = _this.reload.bind(_this);
	    _this.DB = null;

	    _this.state = {
	      notes: [],

	      categories: [],

	      createName: "",
	      createCategoryId: "1",

	      uid: _this.props.uidMain,
	      datecreate: new Date().toLocaleDateString("en-GB"),

	      showOnlyDate: false
	    };
	    return _this;
	  }

	  _createClass(NotesDialog, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _config.appConfig)();

	      this.DB = _config.APP.firestore();

	      this.listCategories();
	    }
	  }, {
	    key: "reload",
	    value: function reload() {
	      this.setState({
	        categories: []
	      });
	      this.listCategories();
	    }
	  }, {
	    key: "handleDate",
	    value: function handleDate(selectedDates, dateStr, instance) {
	      this.setState({ datecreate: dateStr });
	    }
	  }, {
	    key: "listCategories",
	    value: function listCategories() {
	      var self = this;

	      var categories = this.DB.collection("Categories").get();

	      var arrCategories = [];
	      categories.then(function (responce) {
	        responce.forEach(function (document) {
	          var category = document.data();
	          category.id = document.id;

	          console.log(category);

	          arrCategories.push(category);
	        });

	        console.log(arrCategories);

	        self.setState({
	          categories: arrCategories
	        });

	        self.listNotes();
	      });
	    }
	  }, {
	    key: "sortCategoryTop",
	    value: function sortCategoryTop() {
	      this.setState({
	        notes: this.state.notes.sort(this.compareTop)
	      });
	    }
	  }, {
	    key: "compareTop",
	    value: function compareTop(a, b) {
	      if (a.categoryId + a.name < b.categoryId + b.name) {
	        return -1;
	      }
	      if (a.categoryId + a.name > b.categoryId + b.name) {
	        return 1;
	      }

	      return 0;
	    }
	  }, {
	    key: "sortCategoryBottom",
	    value: function sortCategoryBottom() {
	      var notes = this.state.notes.sort(this.compareTopName);

	      this.setState({
	        notes: notes.sort(this.compareBottom)
	      });
	    }
	  }, {
	    key: "compareTopName",
	    value: function compareTopName(a, b) {
	      if (a.name < b.name) {
	        return -1;
	      }
	      if (a.name > b.name) {
	        return 1;
	      }

	      return 0;
	    }
	  }, {
	    key: "compareBottom",
	    value: function compareBottom(a, b) {
	      if (a.categoryId > b.categoryId) {
	        return -1;
	      }
	      if (a.categoryId < b.categoryId) {
	        return 1;
	      }

	      return 0;
	    }
	  }, {
	    key: "listNotes",
	    value: function listNotes() {
	      var self = this;

	      var notes = this.DB.collection("Notes").where("userId", "==", this.state.uid).get();

	      this.pushNotes(notes);
	    }
	  }, {
	    key: "getCategoryName",
	    value: function getCategoryName(categoryId) {
	      var categories = this.state.categories;
	      for (var i = 0; i < categories.length; ++i) {
	        if (categories[i].id == categoryId) {
	          return categories[i].name;
	        }
	      }
	    }
	  }, {
	    key: "handleNote",
	    value: function handleNote(event) {
	      this.setState({
	        createName: event.target.value
	      });
	    }
	  }, {
	    key: "categoryChange",
	    value: function categoryChange(event) {
	      this.setState({
	        createCategoryId: event.target.value
	      });
	    }
	  }, {
	    key: "clickCreateNote",
	    value: function clickCreateNote() {
	      if (this.state.createName) {
	        var createData = {
	          name: this.state.createName,
	          categoryId: this.state.createCategoryId,
	          userId: this.state.uid,
	          datecreate: this.state.datecreate
	        };

	        this.DB.collection("Notes").add(createData);

	        this.setState({
	          createName: "",
	          createCategoryId: "1",
	          datecreate: new Date().toLocaleDateString("en-GB")
	        });

	        this.listNotes();
	      } else {
	        _sweetalert2.default.fire({
	          icon: "error",
	          text: "Field Title must be filled in!"
	        });
	      }
	    }
	  }, {
	    key: "clickRemoveNote",
	    value: function clickRemoveNote(id) {
	      var _this2 = this;

	      this.DB.collection("Notes").doc(id).delete();

	      setTimeout(function () {
	        _this2.listNotes();
	      }, "200");
	    }
	  }, {
	    key: "listNotesCategory",
	    value: function listNotesCategory(id) {
	      var self = this;

	      var notes = this.DB.collection("Notes").where("categoryId", "==", id).where("userId", "==", this.state.uid).get();

	      this.pushNotes(notes);
	    }
	  }, {
	    key: "pushNotes",
	    value: function pushNotes(notes) {
	      var self = this;

	      var arrNotes = [];
	      notes.then(function (responce) {
	        responce.forEach(function (document) {
	          console.log(document.data());

	          var note = document.data();
	          note.id = document.id;

	          note.categoryName = self.getCategoryName(note.categoryId);

	          console.log(note);

	          arrNotes.push(note);
	        });

	        console.log(arrNotes);

	        self.setState({
	          notes: arrNotes
	        });
	      });
	    }
	  }, {
	    key: "makeLogout",
	    value: function makeLogout() {
	      this.props.handleLogoutMain();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this3 = this;

	      return _react2.default.createElement(
	        "div",
	        { className: "row" },
	        _react2.default.createElement(
	          "div",
	          { className: "col-md-2 text-right" },
	          _react2.default.createElement(
	            "button",
	            { className: "btn btn-link", onClick: this.makeLogout },
	            "Logout"
	          )
	        ),
	        _react2.default.createElement(
	          "div",
	          { className: "col-md-8 col-sm-6 col-xs-12" },
	          _react2.default.createElement(
	            "div",
	            { id: "myDIV", className: "header" },
	            _react2.default.createElement(
	              "h2",
	              null,
	              "My Notes List"
	            ),
	            _react2.default.createElement(
	              "div",
	              { className: "row" },
	              _react2.default.createElement(
	                "div",
	                { className: "col-md-2" },
	                _react2.default.createElement(_reactFlatpickr2.default, {
	                  className: "w-100",
	                  value: this.state.datecreate,
	                  onChange: this.handleDate,
	                  options: {
	                    dateFormat: "d/m/Y"
	                  }
	                })
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "col-md-2" },
	                _react2.default.createElement(
	                  "select",
	                  {
	                    className: "mySelect w-100",
	                    value: this.state.createCategoryId,
	                    onChange: this.categoryChange
	                  },
	                  this.state.categories.map(function (item, key) {
	                    return _react2.default.createElement(
	                      "option",
	                      { key: key, value: item.id },
	                      item.name
	                    );
	                  })
	                )
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "col-md-6" },
	                _react2.default.createElement("input", {
	                  type: "text",
	                  className: "w-100",
	                  id: "myInput",
	                  placeholder: "Title...",
	                  value: this.state.createName,
	                  onChange: this.handleNote
	                })
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "col-md-2" },
	                _react2.default.createElement(
	                  "span",
	                  { className: "addBtn w-100", onClick: this.clickCreateNote },
	                  "Add"
	                )
	              )
	            ),
	            _react2.default.createElement(
	              "div",
	              { className: "row" },
	              this.state.categories.map(function (item, key) {
	                return _react2.default.createElement(
	                  "div",
	                  { className: "col myRadio", key: key },
	                  _react2.default.createElement("input", {
	                    type: "radio",
	                    name: "rd",
	                    onClick: function onClick() {
	                      _this3.listNotesCategory(item.id);
	                    }
	                  }),
	                  item.name
	                );
	              })
	            )
	          ),
	          _react2.default.createElement(
	            "div",
	            null,
	            _react2.default.createElement(
	              "button",
	              { className: "btn btn-link", onClick: this.sortCategoryTop },
	              "sort category top"
	            ),
	            _react2.default.createElement(
	              "button",
	              { className: "btn btn-link", onClick: this.sortCategoryBottom },
	              "sort category bottom"
	            ),
	            _react2.default.createElement(
	              "button",
	              { className: "btn btn-link", onClick: this.reload },
	              "Reload from categories"
	            )
	          ),
	          _react2.default.createElement(
	            "div",
	            null,
	            _react2.default.createElement(
	              "ul",
	              { id: "myUL" },
	              this.state.notes.map(function (item, key) {
	                return _react2.default.createElement(
	                  "li",
	                  { key: key },
	                  _react2.default.createElement(
	                    "b",
	                    null,
	                    item.categoryName
	                  ),
	                  " ",
	                  item.name,
	                  " ",
	                  item.datecreate,
	                  (item.categoryId == 3 || item.categoryId == 4) && _react2.default.createElement(
	                    "span",
	                    {
	                      className: "close",
	                      onClick: function onClick(e) {
	                        _this3.clickRemoveNote(item.id);
	                        e.preventDefault();
	                      }
	                    },
	                    "\xD7"
	                  )
	                );
	              })
	            )
	          )
	        ),
	        _react2.default.createElement("div", { className: "col-md-2" })
	      );
	    }
	  }]);

	  return NotesDialog;
	}(_react2.default.Component);

	exports.default = NotesDialog;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(189);

	//# sourceMappingURL=index.cjs.js.map

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};Object.defineProperty(exports,"__esModule",{value:!0});var t=__webpack_require__(179),e=__webpack_require__(178),n=__webpack_require__(182),r=__webpack_require__(180),i=__webpack_require__(190),o=__webpack_require__(181);function s(t){return t&&"object"==(typeof t==="undefined"?"undefined":_typeof(t))&&"default"in t?t:{default:t};}var u=s(e),a={// Causes are copied from:
	// https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
	/** Not an error; returned on success. */OK:"ok",/** The operation was cancelled (typically by the caller). */CANCELLED:"cancelled",/** Unknown error or an error from a different error domain. */UNKNOWN:"unknown",/**
	     * Client specified an invalid argument. Note that this differs from
	     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
	     * problematic regardless of the state of the system (e.g., a malformed file
	     * name).
	     */INVALID_ARGUMENT:"invalid-argument",/**
	     * Deadline expired before operation could complete. For operations that
	     * change the state of the system, this error may be returned even if the
	     * operation has completed successfully. For example, a successful response
	     * from a server could have been delayed long enough for the deadline to
	     * expire.
	     */DEADLINE_EXCEEDED:"deadline-exceeded",/** Some requested entity (e.g., file or directory) was not found. */NOT_FOUND:"not-found",/**
	     * Some entity that we attempted to create (e.g., file or directory) already
	     * exists.
	     */ALREADY_EXISTS:"already-exists",/**
	     * The caller does not have permission to execute the specified operation.
	     * PERMISSION_DENIED must not be used for rejections caused by exhausting
	     * some resource (use RESOURCE_EXHAUSTED instead for those errors).
	     * PERMISSION_DENIED must not be used if the caller can not be identified
	     * (use UNAUTHENTICATED instead for those errors).
	     */PERMISSION_DENIED:"permission-denied",/**
	     * The request does not have valid authentication credentials for the
	     * operation.
	     */UNAUTHENTICATED:"unauthenticated",/**
	     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
	     * entire file system is out of space.
	     */RESOURCE_EXHAUSTED:"resource-exhausted",/**
	     * Operation was rejected because the system is not in a state required for
	     * the operation's execution. For example, directory to be deleted may be
	     * non-empty, an rmdir operation is applied to a non-directory, etc.
	     *
	     * A litmus test that may help a service implementor in deciding
	     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
	     *  (a) Use UNAVAILABLE if the client can retry just the failing call.
	     *  (b) Use ABORTED if the client should retry at a higher-level
	     *      (e.g., restarting a read-modify-write sequence).
	     *  (c) Use FAILED_PRECONDITION if the client should not retry until
	     *      the system state has been explicitly fixed. E.g., if an "rmdir"
	     *      fails because the directory is non-empty, FAILED_PRECONDITION
	     *      should be returned since the client should not retry unless
	     *      they have first fixed up the directory by deleting files from it.
	     *  (d) Use FAILED_PRECONDITION if the client performs conditional
	     *      REST Get/Update/Delete on a resource and the resource on the
	     *      server does not match the condition. E.g., conflicting
	     *      read-modify-write on the same resource.
	     */FAILED_PRECONDITION:"failed-precondition",/**
	     * The operation was aborted, typically due to a concurrency issue like
	     * sequencer check failures, transaction aborts, etc.
	     *
	     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
	     * and UNAVAILABLE.
	     */ABORTED:"aborted",/**
	     * Operation was attempted past the valid range. E.g., seeking or reading
	     * past end of file.
	     *
	     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
	     * if the system state changes. For example, a 32-bit file system will
	     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
	     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
	     * an offset past the current file size.
	     *
	     * There is a fair bit of overlap between FAILED_PRECONDITION and
	     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
	     * when it applies so that callers who are iterating through a space can
	     * easily look for an OUT_OF_RANGE error to detect when they are done.
	     */OUT_OF_RANGE:"out-of-range",/** Operation is not implemented or not supported/enabled in this service. */UNIMPLEMENTED:"unimplemented",/**
	     * Internal errors. Means some invariants expected by underlying System has
	     * been broken. If you see one of these errors, Something is very broken.
	     */INTERNAL:"internal",/**
	     * The service is currently unavailable. This is a most likely a transient
	     * condition and may be corrected by retrying with a backoff.
	     *
	     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
	     * and UNAVAILABLE.
	     */UNAVAILABLE:"unavailable",/** Unrecoverable data loss or corruption. */DATA_LOSS:"data-loss"},c=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,n)||this).code=t,r.message=n,r.name="FirebaseError",// HACK: We write a toString property directly because Error is not a real
	// class and so inheritance does not work correctly. We could alternatively
	// do the same "back-door inheritance" trick that FirebaseError does.
	r.toString=function(){return r.name+": [code="+r.code+"]: "+r.message;},r;}return t.__extends(n,e),n;}(Error),h=new n.Logger("@firebase/firestore");/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Converts a Base64 encoded string to a binary string. *//**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */// Helper methods are needed because variables can't be exported as read/write
	function f(){return h.logLevel;}/**
	 * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).
	 *
	 * @param logLevel
	 *   The verbosity you set for activity and error logging. Can be any of
	 *   the following values:
	 *
	 *   <ul>
	 *     <li>`debug` for the most verbose logging level, primarily for
	 *     debugging.</li>
	 *     <li>`error` to log errors only.</li>
	 *     <li><code>`silent` to turn off logging.</li>
	 *   </ul>
	 */function l(e){for(var r=[],i=1;i<arguments.length;i++){r[i-1]=arguments[i];}if(h.logLevel<=n.LogLevel.DEBUG){var o=r.map(v);h.debug.apply(h,t.__spreadArrays(["Firestore (7.24.0): "+e],o));}}function p(e){for(var r=[],i=1;i<arguments.length;i++){r[i-1]=arguments[i];}if(h.logLevel<=n.LogLevel.ERROR){var o=r.map(v);h.error.apply(h,t.__spreadArrays(["Firestore (7.24.0): "+e],o));}}function d(e){for(var r=[],i=1;i<arguments.length;i++){r[i-1]=arguments[i];}if(h.logLevel<=n.LogLevel.WARN){var o=r.map(v);h.warn.apply(h,t.__spreadArrays(["Firestore (7.24.0): "+e],o));}}/**
	 * Converts an additional log parameter to a string representation.
	 */function v(t){if("string"==typeof t)return t;try{return e=t,JSON.stringify(e);}catch(e){// Converting to JSON failed, just log the object directly
	return t;}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Formats an object as a JSON string, suitable for logging. */var e;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Unconditionally fails, throwing an Error with the given message.
	 * Messages are stripped in production builds.
	 *
	 * Returns `never` and can be used in expressions:
	 * @example
	 * let futureVar = fail('not implemented yet');
	 */function y(t){void 0===t&&(t="Unexpected state");// Log the failure in addition to throw an exception, just in case the
	// exception is swallowed.
	var e="FIRESTORE (7.24.0) INTERNAL ASSERTION FAILED: "+t;// NOTE: We don't use FirestoreError here because these are internal failures
	// that cannot be handled by the user. (Also it would create a circular
	// dependency between the error and assert modules which doesn't work.)
	throw p(e),new Error(e)/**
	 * Fails if the given assertion condition is false, throwing an Error with the
	 * given message if it did.
	 *
	 * Messages are stripped in production builds.
	 */;}function g(t,e){t||y();}/**
	 * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an
	 * instance of `T` before casting.
	 */function m(t,// eslint-disable-next-line @typescript-eslint/no-explicit-any
	e){return t;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */function w(t){var e=0;for(var n in t){Object.prototype.hasOwnProperty.call(t,n)&&e++;}return e;}function _(t,e){for(var n in t){Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n]);}}function b(t){for(var e in t){if(Object.prototype.hasOwnProperty.call(t,e))return!1;}return!0;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Path represents an ordered sequence of string segments.
	 */var I=/** @class */function(){function t(t,e,n){void 0===e?e=0:e>t.length&&y(),void 0===n?n=t.length-e:n>t.length-e&&y(),this.segments=t,this.offset=e,this.t=n;}return Object.defineProperty(t.prototype,"length",{get:function get(){return this.t;},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){return 0===t.i(this,e);},t.prototype.child=function(e){var n=this.segments.slice(this.offset,this.limit());return e instanceof t?e.forEach(function(t){n.push(t);}):n.push(e),this.o(n);},/** The index of one past the last segment of the path. */t.prototype.limit=function(){return this.offset+this.length;},t.prototype.u=function(t){return t=void 0===t?1:t,this.o(this.segments,this.offset+t,this.length-t);},t.prototype.h=function(){return this.o(this.segments,this.offset,this.length-1);},t.prototype.l=function(){return this.segments[this.offset];},t.prototype._=function(){return this.get(this.length-1);},t.prototype.get=function(t){return this.segments[this.offset+t];},t.prototype.m=function(){return 0===this.length;},t.prototype.T=function(t){if(t.length<this.length)return!1;for(var e=0;e<this.length;e++){if(this.get(e)!==t.get(e))return!1;}return!0;},t.prototype.I=function(t){if(this.length+1!==t.length)return!1;for(var e=0;e<this.length;e++){if(this.get(e)!==t.get(e))return!1;}return!0;},t.prototype.forEach=function(t){for(var e=this.offset,n=this.limit();e<n;e++){t(this.segments[e]);}},t.prototype.A=function(){return this.segments.slice(this.offset,this.limit());},t.i=function(t,e){for(var n=Math.min(t.length,e.length),r=0;r<n;r++){var i=t.get(r),o=e.get(r);if(i<o)return-1;if(i>o)return 1;}return t.length<e.length?-1:t.length>e.length?1:0;},t;}(),E=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.o=function(t,e,r){return new n(t,e,r);},n.prototype.R=function(){// NOTE: The client is ignorant of any path segments containing escape
	// sequences (e.g. __id123__) and just passes them through raw (they exist
	// for legacy reasons and should not be used frequently).
	return this.A().join("/");},n.prototype.toString=function(){return this.R();},/**
	     * Creates a resource path from the given slash-delimited string. If multiple
	     * arguments are provided, all components are combined. Leading and trailing
	     * slashes from all components are ignored.
	     */n.g=function(){for(var t=[],e=0;e<arguments.length;e++){t[e]=arguments[e];}// NOTE: The client is ignorant of any path segments containing escape
	// sequences (e.g. __id123__) and just passes them through raw (they exist
	// for legacy reasons and should not be used frequently).
	for(var r=[],i=0,o=t;i<o.length;i++){var s=o[i];if(s.indexOf("//")>=0)throw new c(a.INVALID_ARGUMENT,"Invalid segment ("+s+"). Paths must not contain // in them.");// Strip leading and traling slashed.
	r.push.apply(r,s.split("/").filter(function(t){return t.length>0;}));}return new n(r);},n.P=function(){return new n([]);},n;}(I),T=/^[_a-zA-Z][_a-zA-Z0-9]*$/,N=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.o=function(t,e,r){return new n(t,e,r);},/**
	     * Returns true if the string could be used as a segment in a field path
	     * without escaping.
	     */n.V=function(t){return T.test(t);},n.prototype.R=function(){return this.A().map(function(t){return t=t.replace("\\","\\\\").replace("`","\\`"),n.V(t)||(t="`"+t+"`"),t;}).join(".");},n.prototype.toString=function(){return this.R();},/**
	     * Returns true if this field references the key of a document.
	     */n.prototype.p=function(){return 1===this.length&&"__name__"===this.get(0);},/**
	     * The field designating the key of a document.
	     */n.v=function(){return new n(["__name__"]);},/**
	     * Parses a field string from the given server-formatted string.
	     *
	     * - Splitting the empty string is not allowed (for now at least).
	     * - Empty segments within the string (e.g. if there are two consecutive
	     *   separators) are not allowed.
	     *
	     * TODO(b/37244157): we should make this more strict. Right now, it allows
	     * non-identifier path components, even if they aren't escaped.
	     */n.S=function(t){for(var e=[],r="",i=0,o=function o(){if(0===r.length)throw new c(a.INVALID_ARGUMENT,"Invalid field path ("+t+"). Paths must not be empty, begin with '.', end with '.', or contain '..'");e.push(r),r="";},s=!1;i<t.length;){var u=t[i];if("\\"===u){if(i+1===t.length)throw new c(a.INVALID_ARGUMENT,"Path has trailing escape character: "+t);var h=t[i+1];if("\\"!==h&&"."!==h&&"`"!==h)throw new c(a.INVALID_ARGUMENT,"Path has invalid escape sequence: "+t);r+=h,i+=2;}else"`"===u?(s=!s,i++):"."!==u||s?(r+=u,i++):(o(),i++);}if(o(),s)throw new c(a.INVALID_ARGUMENT,"Unterminated ` in path: "+t);return new n(e);},n.P=function(){return new n([]);},n;}(I),A=/** @class */function(){function t(t){this.path=t;}return t.D=function(e){return new t(E.g(e));},t.C=function(e){return new t(E.g(e).u(5));},/** Returns true if the document is in the specified collectionId. */t.prototype.N=function(t){return this.path.length>=2&&this.path.get(this.path.length-2)===t;},t.prototype.isEqual=function(t){return null!==t&&0===E.i(this.path,t.path);},t.prototype.toString=function(){return this.path.toString();},t.i=function(t,e){return E.i(t.path,e.path);},t.F=function(t){return t.length%2==0;},/**
	     * Creates and returns a new document key with the given segments.
	     *
	     * @param segments The segments of the path to the document
	     * @return A new instance of DocumentKey
	     */t.$=function(e){return new t(new E(e.slice()));},t;}();/**
	 * A slash-separated path for navigating resources (documents and collections)
	 * within Firestore.
	 *//**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Validates that no arguments were passed in the invocation of functionName.
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateNoArgs('myFunction', arguments);
	 */function S(t,e){if(0!==e.length)throw new c(a.INVALID_ARGUMENT,"Function "+t+"() does not support arguments, but was called with "+W(e.length,"argument")+".");}/**
	 * Validates the invocation of functionName has the exact number of arguments.
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateExactNumberOfArgs('myFunction', arguments, 2);
	 */function D(t,e,n){if(e.length!==n)throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires "+W(n,"argument")+", but was called with "+W(e.length,"argument")+".");}/**
	 * Validates the invocation of functionName has at least the provided number of
	 * arguments (but can have many more).
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateAtLeastNumberOfArgs('myFunction', arguments, 2);
	 */function x(t,e,n){if(e.length<n)throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires at least "+W(n,"argument")+", but was called with "+W(e.length,"argument")+".");}/**
	 * Validates the invocation of functionName has number of arguments between
	 * the values provided.
	 *
	 * Forward the magic "arguments" variable as second parameter on which the
	 * parameter validation is performed:
	 * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);
	 */function L(t,e,n,r){if(e.length<n||e.length>r)throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires between "+n+" and "+r+" arguments, but was called with "+W(e.length,"argument")+".");}/**
	 * Validates the provided argument is an array and has as least the expected
	 * number of elements.
	 *//**
	 * Validates the provided positional argument has the native JavaScript type
	 * using typeof checks.
	 */function k(t,e,n,r){C(t,e,B(n)+" argument",r);}/**
	 * Validates the provided argument has the native JavaScript type using
	 * typeof checks or is undefined.
	 */function R(t,e,n,r){void 0!==r&&k(t,e,n,r);}/**
	 * Validates the provided named option has the native JavaScript type using
	 * typeof checks.
	 */function O(t,e,n,r){C(t,e,n+" option",r);}/**
	 * Validates the provided named option has the native JavaScript type using
	 * typeof checks or is undefined.
	 */function P(t,e,n,r){void 0!==r&&O(t,e,n,r);}/**
	 * Validates that two boolean options are not set at the same time.
	 *//**
	 * Validates that the provided named option equals one of the expected values.
	 *//**
	 * Validates that the provided named option equals one of the expected values or
	 * is undefined.
	 */function V(t,e,n,r,i){void 0!==r&&function(t,e,n,r,i){for(var o=[],s=0,u=i;s<u.length;s++){var h=u[s];if(h===r)return;o.push(M(h));}var f=M(r);throw new c(a.INVALID_ARGUMENT,"Invalid value "+f+" provided to function "+t+'() for option "'+n+'". Acceptable values: '+o.join(", "));}(t,0,n,r,i);}/**
	 * Validates that the provided argument is a valid enum.
	 *
	 * @param functionName Function making the validation call.
	 * @param enums Array containing all possible values for the enum.
	 * @param position Position of the argument in `functionName`.
	 * @param argument Argument to validate.
	 * @return The value as T if the argument can be converted.
	 */function U(t,e,n,r){if(!e.some(function(t){return t===r;}))throw new c(a.INVALID_ARGUMENT,"Invalid value "+M(r)+" provided to function "+t+"() for its "+B(n)+" argument. Acceptable values: "+e.join(", "));return r;}/** Helper to validate the type of a provided input. */function C(t,e,n,r){if(!("object"===e?F(r):"non-empty string"===e?"string"==typeof r&&""!==r:(typeof r==="undefined"?"undefined":_typeof(r))===e)){var i=M(r);throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires its "+n+" to be of type "+e+", but it was: "+i);}}/**
	 * Returns true if it's a non-null object without a custom prototype
	 * (i.e. excludes Array, Date, etc.).
	 */function F(t){return"object"==(typeof t==="undefined"?"undefined":_typeof(t))&&null!==t&&(Object.getPrototypeOf(t)===Object.prototype||null===Object.getPrototypeOf(t));}/** Returns a string describing the type / value of the provided input. */function M(t){if(void 0===t)return"undefined";if(null===t)return"null";if("string"==typeof t)return t.length>20&&(t=t.substring(0,20)+"..."),JSON.stringify(t);if("number"==typeof t||"boolean"==typeof t)return""+t;if("object"==(typeof t==="undefined"?"undefined":_typeof(t))){if(t instanceof Array)return"an array";var e=/** Hacky method to try to get the constructor name for an object. */function(t){if(t.constructor){var e=/function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());if(e&&e.length>1)return e[1];}return null;}(t);return e?"a custom "+e+" object":"an object";}return"function"==typeof t?"a function":y();}function q(t,e,n){if(void 0===n)throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires a valid "+B(e)+" argument, but it was undefined.");}/**
	 * Validates the provided positional argument is an object, and its keys and
	 * values match the expected keys and types provided in optionTypes.
	 */function j(t,e,n){_(e,function(e,r){if(n.indexOf(e)<0)throw new c(a.INVALID_ARGUMENT,"Unknown option '"+e+"' passed to function "+t+"(). Available options: "+n.join(", "));});}/**
	 * Helper method to throw an error that the provided argument did not pass
	 * an instanceof check.
	 */function G(t,e,n,r){var i=M(r);return new c(a.INVALID_ARGUMENT,"Function "+t+"() requires its "+B(n)+" argument to be a "+e+", but it was: "+i);}function z(t,e,n){if(n<=0)throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires its "+B(e)+" argument to be a positive number, but it was: "+n+".");}/** Converts a number to its english word representation */function B(t){switch(t){case 1:return"first";case 2:return"second";case 3:return"third";default:return t+"th";}}/**
	 * Formats the given word as plural conditionally given the preceding number.
	 */function W(t,e){return t+" "+e+(1===t?"":"s");}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Generates `nBytes` of random bytes.
	 *
	 * If `nBytes < 0` , an error will be thrown.
	 */function K(t){// Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.
	var e=// eslint-disable-next-line @typescript-eslint/no-explicit-any
	"undefined"!=typeof self&&(self.crypto||self.msCrypto),n=new Uint8Array(t);if(e&&"function"==typeof e.getRandomValues)e.getRandomValues(n);else// Falls back to Math.random
	for(var r=0;r<t;r++){n[r]=Math.floor(256*Math.random());}return n;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */var Q=/** @class */function(){function t(){}return t.k=function(){for(// Alphanumeric characters
	var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e=Math.floor(256/t.length)*t.length,n=""// The largest byte value that is a multiple of `char.length`.
	;n.length<20;){for(var r=K(40),i=0;i<r.length;++i){// Only accept values that are [0, maxMultiple), this ensures they can
	// be evenly mapped to indices of `chars` via a modulo operation.
	n.length<20&&r[i]<e&&(n+=t.charAt(r[i]%t.length));}}return n;},t;}();function H(t,e){return t<e?-1:t>e?1:0;}/** Helper to compare arrays using isEqual(). */function Y(t,e,n){return t.length===e.length&&t.every(function(t,r){return n(t,e[r]);});}/**
	 * Returns the immediate lexicographically-following string. This is useful to
	 * construct an inclusive range for indexeddb iterators.
	 */function $(t){// Return the input string, with an additional NUL byte appended.
	return t+"\0";}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Immutable class that represents a "proto" byte string.
	 *
	 * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when
	 * sent on the wire. This class abstracts away this differentiation by holding
	 * the proto byte string in a common class that must be converted into a string
	 * before being sent as a proto.
	 */var X=/** @class */function(){function t(t){this.M=t;}return t.fromBase64String=function(e){return new t(atob(e));},t.fromUint8Array=function(e){return new t(/**
	 * Helper function to convert an Uint8array to a binary string.
	 */function(t){for(var e="",n=0;n<t.length;++n){e+=String.fromCharCode(t[n]);}return e;}(e));},t.prototype.toBase64=function(){return t=this.M,btoa(t);/** Converts a binary string to a Base64 encoded string. */var t;/** True if and only if the Base64 conversion functions are available. */},t.prototype.toUint8Array=function(){return function(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++){e[n]=t.charCodeAt(n);}return e;}(this.M);},t.prototype.O=function(){return 2*this.M.length;},t.prototype.L=function(t){return H(this.M,t.M);},t.prototype.isEqual=function(t){return this.M===t.M;},t;}();X.B=new X("");var J=/** @class */function(){function t(t){this.q=t;}/**
	     * Creates a new `Bytes` object from the given Base64 string, converting it to
	     * bytes.
	     *
	     * @param base64 The Base64 string used to create the `Bytes` object.
	     */return t.fromBase64String=function(e){try{return new t(X.fromBase64String(e));}catch(e){throw new c(a.INVALID_ARGUMENT,"Failed to construct Bytes from Base64 string: "+e);}},/**
	     * Creates a new `Bytes` object from the given Uint8Array.
	     *
	     * @param array The Uint8Array used to create the `Bytes` object.
	     */t.fromUint8Array=function(e){return new t(X.fromUint8Array(e));},/**
	     * Returns the underlying bytes as a Base64-encoded string.
	     *
	     * @return The Base64-encoded string created from the `Bytes` object.
	     */t.prototype.toBase64=function(){return this.q.toBase64();},/**
	     * Returns the underlying bytes in a new `Uint8Array`.
	     *
	     * @return The Uint8Array created from the `Bytes` object.
	     */t.prototype.toUint8Array=function(){return this.q.toUint8Array();},/**
	     * Returns a string representation of the `Bytes` object.
	     *
	     * @return A string representation of the `Bytes` object.
	     */t.prototype.toString=function(){return"Bytes(base64: "+this.toBase64()+")";},/**
	     * Returns true if this `Bytes` object is equal to the provided one.
	     *
	     * @param other The `Bytes` object to compare against.
	     * @return true if this `Bytes` object is equal to the provided one.
	     */t.prototype.isEqual=function(t){return this.q.isEqual(t.q);},t;}();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Helper function to assert Uint8Array is available at runtime. */function Z(){if("undefined"==typeof Uint8Array)throw new c(a.UNIMPLEMENTED,"Uint8Arrays are not available in this environment.");}/** Helper function to assert Base64 functions are available at runtime. */function tt(){if("undefined"==typeof atob)throw new c(a.UNIMPLEMENTED,"Blobs are unavailable in Firestore in this environment.");}/**
	 * Immutable class holding a blob (binary data).
	 *
	 * This class is directly exposed in the public API. It extends the Bytes class
	 * of the firestore-exp API to support `instanceof Bytes` checks during user
	 * data conversion.
	 *
	 * Note that while you can't hide the constructor in JavaScript code, we are
	 * using the hack above to make sure no-one outside this module can call it.
	 */var et=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.fromBase64String=function(t){D("Blob.fromBase64String",arguments,1),k("Blob.fromBase64String","string",1,t),tt();try{return new n(X.fromBase64String(t));}catch(t){throw new c(a.INVALID_ARGUMENT,"Failed to construct Blob from Base64 string: "+t);}},n.fromUint8Array=function(t){if(D("Blob.fromUint8Array",arguments,1),Z(),!(t instanceof Uint8Array))throw G("Blob.fromUint8Array","Uint8Array",1,t);return new n(X.fromUint8Array(t));},n.prototype.toBase64=function(){return D("Blob.toBase64",arguments,0),tt(),e.prototype.toBase64.call(this);},n.prototype.toUint8Array=function(){return D("Blob.toUint8Array",arguments,0),Z(),e.prototype.toUint8Array.call(this);},n.prototype.toString=function(){return"Blob(base64: "+this.toBase64()+")";},n;}(J),nt=/**
	     * Constructs a DatabaseInfo using the provided host, databaseId and
	     * persistenceKey.
	     *
	     * @param databaseId The database to use.
	     * @param persistenceKey A unique identifier for this Firestore's local
	     * storage (used in conjunction with the databaseId).
	     * @param host The Firestore backend host to connect to.
	     * @param ssl Whether to use SSL when connecting.
	     * @param forceLongPolling Whether to use the forceLongPolling option
	     * when using WebChannel as the network transport.
	     * @param autoDetectLongPolling Whether to use the detectBufferingProxy
	     * option when using WebChannel as the network transport.
	     */function nt(t,e,n,r,i,o){this.U=t,this.persistenceKey=e,this.host=n,this.ssl=r,this.forceLongPolling=i,this.W=o;},rt=/** @class */function(){function t(t,e){this.projectId=t,this.database=e||"(default)";}return Object.defineProperty(t.prototype,"j",{get:function get(){return"(default)"===this.database;},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){return e instanceof t&&e.projectId===this.projectId&&e.database===this.database;},t.prototype.L=function(t){return H(this.projectId,t.projectId)||H(this.database,t.database);},t;}(),it=/** @class */function(){function t(t,e){this.K=t,this.G=e,/**
	             * The inner map for a key -> value pair. Due to the possibility of
	             * collisions we keep a list of entries that we do a linear search through
	             * to find an actual match. Note that collisions should be rare, so we still
	             * expect near constant time lookups in practice.
	             */this.H={}/** Get a value for this key, or undefined if it does not exist. */;}return t.prototype.get=function(t){var e=this.K(t),n=this.H[e];if(void 0!==n)for(var r=0,i=n;r<i.length;r++){var o=i[r],s=o[0],u=o[1];if(this.G(s,t))return u;}},t.prototype.has=function(t){return void 0!==this.get(t);},/** Put this key and value in the map. */t.prototype.set=function(t,e){var n=this.K(t),r=this.H[n];if(void 0!==r){for(var i=0;i<r.length;i++){if(this.G(r[i][0],t))return void(r[i]=[t,e]);}r.push([t,e]);}else this.H[n]=[[t,e]];},/**
	     * Remove this key from the map. Returns a boolean if anything was deleted.
	     */t.prototype.delete=function(t){var e=this.K(t),n=this.H[e];if(void 0===n)return!1;for(var r=0;r<n.length;r++){if(this.G(n[r][0],t))return 1===n.length?delete this.H[e]:n.splice(r,1),!0;}return!1;},t.prototype.forEach=function(t){_(this.H,function(e,n){for(var r=0,i=n;r<i.length;r++){var o=i[r],s=o[0],u=o[1];t(s,u);}});},t.prototype.m=function(){return b(this.H);},t;}(),ot=/** @class */function(){/**
	     * Creates a new timestamp.
	     *
	     * @param seconds The number of seconds of UTC time since Unix epoch
	     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	     *     9999-12-31T23:59:59Z inclusive.
	     * @param nanoseconds The non-negative fractions of a second at nanosecond
	     *     resolution. Negative second values with fractions must still have
	     *     non-negative nanoseconds values that count forward in time. Must be
	     *     from 0 to 999,999,999 inclusive.
	     */function t(t,e){if(this.seconds=t,this.nanoseconds=e,e<0)throw new c(a.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+e);if(e>=1e9)throw new c(a.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+e);if(t<-62135596800)throw new c(a.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t);// This will break in the year 10,000.
	if(t>=253402300800)throw new c(a.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t);}/**
	     * Creates a new timestamp with the current date, with millisecond precision.
	     *
	     * @return a new timestamp representing the current date.
	     */return t.now=function(){return t.fromMillis(Date.now());},/**
	     * Creates a new timestamp from the given date.
	     *
	     * @param date The date to initialize the `Timestamp` from.
	     * @return A new `Timestamp` representing the same point in time as the given
	     *     date.
	     */t.fromDate=function(e){return t.fromMillis(e.getTime());},/**
	     * Creates a new timestamp from the given number of milliseconds.
	     *
	     * @param milliseconds Number of milliseconds since Unix epoch
	     *     1970-01-01T00:00:00Z.
	     * @return A new `Timestamp` representing the same point in time as the given
	     *     number of milliseconds.
	     */t.fromMillis=function(e){var n=Math.floor(e/1e3);return new t(n,1e6*(e-1e3*n));},/**
	     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion causes
	     * a loss of precision since `Date` objects only support millisecond precision.
	     *
	     * @return JavaScript `Date` object representing the same point in time as
	     *     this `Timestamp`, with millisecond precision.
	     */t.prototype.toDate=function(){return new Date(this.toMillis());},/**
	     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since
	     * epoch). This operation causes a loss of precision.
	     *
	     * @return The point in time corresponding to this timestamp, represented as
	     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.
	     */t.prototype.toMillis=function(){return 1e3*this.seconds+this.nanoseconds/1e6;},t.prototype.Y=function(t){return this.seconds===t.seconds?H(this.nanoseconds,t.nanoseconds):H(this.seconds,t.seconds);},/**
	     * Returns true if this `Timestamp` is equal to the provided one.
	     *
	     * @param other The `Timestamp` to compare against.
	     * @return true if this `Timestamp` is equal to the provided one.
	     */t.prototype.isEqual=function(t){return t.seconds===this.seconds&&t.nanoseconds===this.nanoseconds;},t.prototype.toString=function(){return"Timestamp(seconds="+this.seconds+", nanoseconds="+this.nanoseconds+")";},t.prototype.toJSON=function(){return{seconds:this.seconds,nanoseconds:this.nanoseconds};},/**
	     * Converts this object to a primitive string, which allows Timestamp objects to be compared
	     * using the `>`, `<=`, `>=` and `>` operators.
	     */t.prototype.valueOf=function(){// This method returns a string of the form <seconds>.<nanoseconds> where <seconds> is
	// translated to have a non-negative value and both <seconds> and <nanoseconds> are left-padded
	// with zeroes to be a consistent length. Strings with this format then have a lexiographical
	// ordering that matches the expected ordering. The <seconds> translation is done to avoid
	// having a leading negative sign (i.e. a leading '-' character) in its string representation,
	// which would affect its lexiographical ordering.
	var t=this.seconds- -62135596800;// Note: Up to 12 decimal digits are required to represent all valid 'seconds' values.
	return String(t).padStart(12,"0")+"."+String(this.nanoseconds).padStart(9,"0");},t;}(),st=/** @class */function(){function t(t){this.timestamp=t;}return t.J=function(e){return new t(e);},t.min=function(){return new t(new ot(0,0));},t.prototype.L=function(t){return this.timestamp.Y(t.timestamp);},t.prototype.isEqual=function(t){return this.timestamp.isEqual(t.timestamp);},/** Returns a number representation of the version for use in spec tests. */t.prototype.X=function(){// Convert to microseconds.
	return 1e6*this.timestamp.seconds+this.timestamp.nanoseconds/1e3;},t.prototype.toString=function(){return"SnapshotVersion("+this.timestamp.toString()+")";},t.prototype.Z=function(){return this.timestamp;},t;}();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Returns whether a variable is either undefined or null.
	 */function ut(t){return null==t;}/** Returns whether the value represents -0. */function at(t){// Detect if the value is -0.0. Based on polyfill from
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	return 0===t&&1/t==-1/0;}/**
	 * Returns whether a value is an integer and in the safe integer range
	 * @param value The value to test for being an integer and in the safe range
	 */function ct(t){return"number"==typeof t&&Number.isInteger(t)&&!at(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER;}/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */// Visible for testing
	var ht=function ht(t,e,n,r,i,o,s){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===s&&(s=null),this.path=t,this.collectionGroup=e,this.orderBy=n,this.filters=r,this.limit=i,this.startAt=o,this.endAt=s,this.tt=null;};/**
	 * Initializes a Target with a path and optional additional query constraints.
	 * Path must currently be empty if this is a collection group query.
	 *
	 * NOTE: you should always construct `Target` from `Query.toTarget` instead of
	 * using this factory method, because `Query` provides an implicit `orderBy`
	 * property.
	 */function ft(t,e,n,r,i,o,s){return void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===s&&(s=null),new ht(t,e,n,r,i,o,s);}function lt(t){var e=m(t);if(null===e.tt){var n=e.path.R();null!==e.collectionGroup&&(n+="|cg:"+e.collectionGroup),n+="|f:",n+=e.filters.map(function(t){return function(t){// TODO(b/29183165): Technically, this won't be unique if two values have
	// the same description, such as the int 3 and the string "3". So we should
	// add the types in here somehow, too.
	return t.field.R()+t.op.toString()+re(t.value);}(t);}).join(","),n+="|ob:",n+=e.orderBy.map(function(t){return(e=t).field.R()+e.dir;var e;}).join(","),ut(e.limit)||(n+="|l:",n+=e.limit),e.startAt&&(n+="|lb:",n+=ar(e.startAt)),e.endAt&&(n+="|ub:",n+=ar(e.endAt)),e.tt=n;}return e.tt;}function pt(t,e){if(t.limit!==e.limit)return!1;if(t.orderBy.length!==e.orderBy.length)return!1;for(var n=0;n<t.orderBy.length;n++){if(!pr(t.orderBy[n],e.orderBy[n]))return!1;}if(t.filters.length!==e.filters.length)return!1;for(var r=0;r<t.filters.length;r++){if(i=t.filters[r],o=e.filters[r],i.op!==o.op||!i.field.isEqual(o.field)||!Zt(i.value,o.value))return!1;}var i,o;return t.collectionGroup===e.collectionGroup&&!!t.path.isEqual(e.path)&&!!hr(t.startAt,e.startAt)&&hr(t.endAt,e.endAt);}function dt(t){return A.F(t.path)&&null===t.collectionGroup&&0===t.filters.length;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * An immutable set of metadata that the local store tracks for each target.
	 */var vt,yt,gt=/** @class */function(){function t(/** The target being listened to. */t,/**
	     * The target ID to which the target corresponds; Assigned by the
	     * LocalStore for user listens and by the SyncEngine for limbo watches.
	     */e,/** The purpose of the target. */n,/**
	     * The sequence number of the last transaction during which this target data
	     * was modified.
	     */r,/** The latest snapshot version seen for this target. */i/**
	     * The maximum snapshot version at which the associated view
	     * contained no limbo documents.
	     */,o/**
	     * An opaque, server-assigned token that allows watching a target to be
	     * resumed after disconnecting without retransmitting all the data that
	     * matches the target. The resume token essentially identifies a point in
	     * time from which the server should resume sending results.
	     */,s){void 0===i&&(i=st.min()),void 0===o&&(o=st.min()),void 0===s&&(s=X.B),this.target=t,this.targetId=e,this.et=n,this.sequenceNumber=r,this.nt=i,this.lastLimboFreeSnapshotVersion=o,this.resumeToken=s;}/** Creates a new target data instance with an updated sequence number. */return t.prototype.st=function(e){return new t(this.target,this.targetId,this.et,e,this.nt,this.lastLimboFreeSnapshotVersion,this.resumeToken);},/**
	     * Creates a new target data instance with an updated resume token and
	     * snapshot version.
	     */t.prototype.it=function(e,n){return new t(this.target,this.targetId,this.et,this.sequenceNumber,n,this.lastLimboFreeSnapshotVersion,e);},/**
	     * Creates a new target data instance with an updated last limbo free
	     * snapshot version number.
	     */t.prototype.rt=function(e){return new t(this.target,this.targetId,this.et,this.sequenceNumber,this.nt,e,this.resumeToken);},t;}(),mt=// TODO(b/33078163): just use simplest form of existence filter for now
	function mt(t){this.count=t;};/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Determines whether an error code represents a permanent error when received
	 * in response to a non-write operation.
	 *
	 * See isPermanentWriteError for classifying write errors.
	 */function wt(t){switch(t){case a.OK:return y();case a.CANCELLED:case a.UNKNOWN:case a.DEADLINE_EXCEEDED:case a.RESOURCE_EXHAUSTED:case a.INTERNAL:case a.UNAVAILABLE:// Unauthenticated means something went wrong with our token and we need
	// to retry with new credentials which will happen automatically.
	case a.UNAUTHENTICATED:return!1;case a.INVALID_ARGUMENT:case a.NOT_FOUND:case a.ALREADY_EXISTS:case a.PERMISSION_DENIED:case a.FAILED_PRECONDITION:// Aborted might be retried in some scenarios, but that is dependant on
	// the context and should handled individually by the calling code.
	// See https://cloud.google.com/apis/design/errors.
	case a.ABORTED:case a.OUT_OF_RANGE:case a.UNIMPLEMENTED:case a.DATA_LOSS:return!0;default:return y();}}/**
	 * Determines whether an error code represents a permanent error when received
	 * in response to a write operation.
	 *
	 * Write operations must be handled specially because as of b/119437764, ABORTED
	 * errors on the write stream should be retried too (even though ABORTED errors
	 * are not generally retryable).
	 *
	 * Note that during the initial handshake on the write stream an ABORTED error
	 * signals that we should discard our stream token (i.e. it is permanent). This
	 * means a handshake error should be classified with isPermanentError, above.
	 *//**
	 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
	 * are not the same as HTTP status codes.
	 *
	 * @returns The Code equivalent to the given GRPC status code. Fails if there
	 *     is no match.
	 */function _t(t){if(void 0===t)// This shouldn't normally happen, but in certain error cases (like trying
	// to send invalid proto messages) we may get an error with no GRPC code.
	return p("GRPC error has no .code"),a.UNKNOWN;switch(t){case vt.OK:return a.OK;case vt.CANCELLED:return a.CANCELLED;case vt.UNKNOWN:return a.UNKNOWN;case vt.DEADLINE_EXCEEDED:return a.DEADLINE_EXCEEDED;case vt.RESOURCE_EXHAUSTED:return a.RESOURCE_EXHAUSTED;case vt.INTERNAL:return a.INTERNAL;case vt.UNAVAILABLE:return a.UNAVAILABLE;case vt.UNAUTHENTICATED:return a.UNAUTHENTICATED;case vt.INVALID_ARGUMENT:return a.INVALID_ARGUMENT;case vt.NOT_FOUND:return a.NOT_FOUND;case vt.ALREADY_EXISTS:return a.ALREADY_EXISTS;case vt.PERMISSION_DENIED:return a.PERMISSION_DENIED;case vt.FAILED_PRECONDITION:return a.FAILED_PRECONDITION;case vt.ABORTED:return a.ABORTED;case vt.OUT_OF_RANGE:return a.OUT_OF_RANGE;case vt.UNIMPLEMENTED:return a.UNIMPLEMENTED;case vt.DATA_LOSS:return a.DATA_LOSS;default:return y();}}/**
	 * Converts an HTTP response's error status to the equivalent error code.
	 *
	 * @param status An HTTP error response status ("FAILED_PRECONDITION",
	 * "UNKNOWN", etc.)
	 * @returns The equivalent Code. Non-matching responses are mapped to
	 *     Code.UNKNOWN.
	 */(yt=vt||(vt={}))[yt.OK=0]="OK",yt[yt.CANCELLED=1]="CANCELLED",yt[yt.UNKNOWN=2]="UNKNOWN",yt[yt.INVALID_ARGUMENT=3]="INVALID_ARGUMENT",yt[yt.DEADLINE_EXCEEDED=4]="DEADLINE_EXCEEDED",yt[yt.NOT_FOUND=5]="NOT_FOUND",yt[yt.ALREADY_EXISTS=6]="ALREADY_EXISTS",yt[yt.PERMISSION_DENIED=7]="PERMISSION_DENIED",yt[yt.UNAUTHENTICATED=16]="UNAUTHENTICATED",yt[yt.RESOURCE_EXHAUSTED=8]="RESOURCE_EXHAUSTED",yt[yt.FAILED_PRECONDITION=9]="FAILED_PRECONDITION",yt[yt.ABORTED=10]="ABORTED",yt[yt.OUT_OF_RANGE=11]="OUT_OF_RANGE",yt[yt.UNIMPLEMENTED=12]="UNIMPLEMENTED",yt[yt.INTERNAL=13]="INTERNAL",yt[yt.UNAVAILABLE=14]="UNAVAILABLE",yt[yt.DATA_LOSS=15]="DATA_LOSS";/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */// An immutable sorted map implementation, based on a Left-leaning Red-Black
	// tree.
	var bt=/** @class */function(){function t(t,e){this.i=t,this.root=e||Et.EMPTY;}// Returns a copy of the map, with the specified key/value added or replaced.
	return t.prototype.ot=function(e,n){return new t(this.i,this.root.ot(e,n,this.i).copy(null,null,Et.at,null,null));},// Returns a copy of the map, with the specified key removed.
	t.prototype.remove=function(e){return new t(this.i,this.root.remove(e,this.i).copy(null,null,Et.at,null,null));},// Returns the value of the node with the given key, or null.
	t.prototype.get=function(t){for(var e=this.root;!e.m();){var n=this.i(t,e.key);if(0===n)return e.value;n<0?e=e.left:n>0&&(e=e.right);}return null;},// Returns the index of the element in this sorted map, or -1 if it doesn't
	// exist.
	t.prototype.indexOf=function(t){for(// Number of nodes that were pruned when descending right
	var e=0,n=this.root;!n.m();){var r=this.i(t,n.key);if(0===r)return e+n.left.size;r<0?n=n.left:(// Count all nodes left of the node plus the node itself
	e+=n.left.size+1,n=n.right);}// Node not found
	return-1;},t.prototype.m=function(){return this.root.m();},Object.defineProperty(t.prototype,"size",{// Returns the total number of nodes in the map.
	get:function get(){return this.root.size;},enumerable:!1,configurable:!0}),// Returns the minimum key in the map.
	t.prototype.ct=function(){return this.root.ct();},// Returns the maximum key in the map.
	t.prototype.ut=function(){return this.root.ut();},// Traverses the map in key order and calls the specified action function
	// for each key/value pair. If action returns true, traversal is aborted.
	// Returns the first truthy value returned by action, or the last falsey
	// value returned by action.
	t.prototype.ht=function(t){return this.root.ht(t);},t.prototype.forEach=function(t){this.ht(function(e,n){return t(e,n),!1;});},t.prototype.toString=function(){var t=[];return this.ht(function(e,n){return t.push(e+":"+n),!1;}),"{"+t.join(", ")+"}";},// Traverses the map in reverse key order and calls the specified action
	// function for each key/value pair. If action returns true, traversal is
	// aborted.
	// Returns the first truthy value returned by action, or the last falsey
	// value returned by action.
	t.prototype.lt=function(t){return this.root.lt(t);},// Returns an iterator over the SortedMap.
	t.prototype._t=function(){return new It(this.root,null,this.i,!1);},t.prototype.ft=function(t){return new It(this.root,t,this.i,!1);},t.prototype.dt=function(){return new It(this.root,null,this.i,!0);},t.prototype.wt=function(t){return new It(this.root,t,this.i,!0);},t;}(),It=/** @class */function(){function t(t,e,n,r){this.Tt=r,this.Et=[];for(var i=1;!t.m();){if(i=e?n(t.key,e):1,// flip the comparison if we're going in reverse
	r&&(i*=-1),i<0)// This node is less than our start key. ignore it
	t=this.Tt?t.left:t.right;else{if(0===i){// This node is exactly equal to our start key. Push it on the stack,
	// but stop iterating;
	this.Et.push(t);break;}// This node is greater than our start key, add it to the stack and move
	// to the next one
	this.Et.push(t),t=this.Tt?t.right:t.left;}}}return t.prototype.It=function(){var t=this.Et.pop(),e={key:t.key,value:t.value};if(this.Tt)for(t=t.left;!t.m();){this.Et.push(t),t=t.right;}else for(t=t.right;!t.m();){this.Et.push(t),t=t.left;}return e;},t.prototype.At=function(){return this.Et.length>0;},t.prototype.Rt=function(){if(0===this.Et.length)return null;var t=this.Et[this.Et.length-1];return{key:t.key,value:t.value};},t;}(),Et=/** @class */function(){function t(e,n,r,i,o){this.key=e,this.value=n,this.color=null!=r?r:t.RED,this.left=null!=i?i:t.EMPTY,this.right=null!=o?o:t.EMPTY,this.size=this.left.size+1+this.right.size;}// Returns a copy of the current node, optionally replacing pieces of it.
	return t.prototype.copy=function(e,n,r,i,o){return new t(null!=e?e:this.key,null!=n?n:this.value,null!=r?r:this.color,null!=i?i:this.left,null!=o?o:this.right);},t.prototype.m=function(){return!1;},// Traverses the tree in key order and calls the specified action function
	// for each node. If action returns true, traversal is aborted.
	// Returns the first truthy value returned by action, or the last falsey
	// value returned by action.
	t.prototype.ht=function(t){return this.left.ht(t)||t(this.key,this.value)||this.right.ht(t);},// Traverses the tree in reverse key order and calls the specified action
	// function for each node. If action returns true, traversal is aborted.
	// Returns the first truthy value returned by action, or the last falsey
	// value returned by action.
	t.prototype.lt=function(t){return this.right.lt(t)||t(this.key,this.value)||this.left.lt(t);},// Returns the minimum node in the tree.
	t.prototype.min=function(){return this.left.m()?this:this.left.min();},// Returns the maximum key in the tree.
	t.prototype.ct=function(){return this.min().key;},// Returns the maximum key in the tree.
	t.prototype.ut=function(){return this.right.m()?this.key:this.right.ut();},// Returns new tree, with the key/value added.
	t.prototype.ot=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.ot(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.ot(t,e,n))).gt();},t.prototype.Pt=function(){if(this.left.m())return t.EMPTY;var e=this;return e.left.yt()||e.left.left.yt()||(e=e.Vt()),(e=e.copy(null,null,null,e.left.Pt(),null)).gt();},// Returns new tree, with the specified item removed.
	t.prototype.remove=function(e,n){var r,i=this;if(n(e,i.key)<0)i.left.m()||i.left.yt()||i.left.left.yt()||(i=i.Vt()),i=i.copy(null,null,null,i.left.remove(e,n),null);else{if(i.left.yt()&&(i=i.bt()),i.right.m()||i.right.yt()||i.right.left.yt()||(i=i.vt()),0===n(e,i.key)){if(i.right.m())return t.EMPTY;r=i.right.min(),i=i.copy(r.key,r.value,null,null,i.right.Pt());}i=i.copy(null,null,null,null,i.right.remove(e,n));}return i.gt();},t.prototype.yt=function(){return this.color;},// Returns new tree after performing any needed rotations.
	t.prototype.gt=function(){var t=this;return t.right.yt()&&!t.left.yt()&&(t=t.St()),t.left.yt()&&t.left.left.yt()&&(t=t.bt()),t.left.yt()&&t.right.yt()&&(t=t.Dt()),t;},t.prototype.Vt=function(){var t=this.Dt();return t.right.left.yt()&&(t=(t=(t=t.copy(null,null,null,null,t.right.bt())).St()).Dt()),t;},t.prototype.vt=function(){var t=this.Dt();return t.left.left.yt()&&(t=(t=t.bt()).Dt()),t;},t.prototype.St=function(){var e=this.copy(null,null,t.RED,null,this.right.left);return this.right.copy(null,null,this.color,e,null);},t.prototype.bt=function(){var e=this.copy(null,null,t.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,e);},t.prototype.Dt=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e);},// For testing.
	t.prototype.Ct=function(){var t=this.Nt();return Math.pow(2,t)<=this.size+1;},// In a balanced RB tree, the black-depth (number of black nodes) from root to
	// leaves is equal on both sides.  This function verifies that or asserts.
	t.prototype.Nt=function(){if(this.yt()&&this.left.yt())throw y();if(this.right.yt())throw y();var t=this.left.Nt();if(t!==this.right.Nt())throw y();return t+(this.yt()?0:1);},t;}();// end SortedMap
	// An iterator over an LLRBNode.
	// end LLRBNode
	// Empty node is shared between all LLRB trees.
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	Et.EMPTY=null,Et.RED=!0,Et.at=!1,// end LLRBEmptyNode
	Et.EMPTY=new(/** @class */function(){function t(){this.size=0;}return Object.defineProperty(t.prototype,"key",{get:function get(){throw y();},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function get(){throw y();},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function get(){throw y();},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"left",{get:function get(){throw y();},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"right",{get:function get(){throw y();},enumerable:!1,configurable:!0}),// Returns a copy of the current node.
	t.prototype.copy=function(t,e,n,r,i){return this;},// Returns a copy of the tree, with the specified key/value added.
	t.prototype.ot=function(t,e,n){return new Et(t,e);},// Returns a copy of the tree, with the specified key removed.
	t.prototype.remove=function(t,e){return this;},t.prototype.m=function(){return!0;},t.prototype.ht=function(t){return!1;},t.prototype.lt=function(t){return!1;},t.prototype.ct=function(){return null;},t.prototype.ut=function(){return null;},t.prototype.yt=function(){return!1;},// For testing.
	t.prototype.Ct=function(){return!0;},t.prototype.Nt=function(){return 0;},t;}())();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * SortedSet is an immutable (copy-on-write) collection that holds elements
	 * in order specified by the provided comparator.
	 *
	 * NOTE: if provided comparator returns 0 for two elements, we consider them to
	 * be equal!
	 */var Tt=/** @class */function(){function t(t){this.i=t,this.data=new bt(this.i);}return t.prototype.has=function(t){return null!==this.data.get(t);},t.prototype.first=function(){return this.data.ct();},t.prototype.last=function(){return this.data.ut();},Object.defineProperty(t.prototype,"size",{get:function get(){return this.data.size;},enumerable:!1,configurable:!0}),t.prototype.indexOf=function(t){return this.data.indexOf(t);},/** Iterates elements in order defined by "comparator" */t.prototype.forEach=function(t){this.data.ht(function(e,n){return t(e),!1;});},/** Iterates over `elem`s such that: range[0] <= elem < range[1]. */t.prototype.Ft=function(t,e){for(var n=this.data.ft(t[0]);n.At();){var r=n.It();if(this.i(r.key,t[1])>=0)return;e(r.key);}},/**
	     * Iterates over `elem`s such that: start <= elem until false is returned.
	     */t.prototype.xt=function(t,e){var n;for(n=void 0!==e?this.data.ft(e):this.data._t();n.At();){if(!t(n.It().key))return;}},/** Finds the least element greater than or equal to `elem`. */t.prototype.$t=function(t){var e=this.data.ft(t);return e.At()?e.It().key:null;},t.prototype._t=function(){return new Nt(this.data._t());},t.prototype.ft=function(t){return new Nt(this.data.ft(t));},/** Inserts or updates an element */t.prototype.add=function(t){return this.copy(this.data.remove(t).ot(t,!0));},/** Deletes an element */t.prototype.delete=function(t){return this.has(t)?this.copy(this.data.remove(t)):this;},t.prototype.m=function(){return this.data.m();},t.prototype.kt=function(t){var e=this;// Make sure `result` always refers to the larger one of the two sets.
	return e.size<t.size&&(e=t,t=this),t.forEach(function(t){e=e.add(t);}),e;},t.prototype.isEqual=function(e){if(!(e instanceof t))return!1;if(this.size!==e.size)return!1;for(var n=this.data._t(),r=e.data._t();n.At();){var i=n.It().key,o=r.It().key;if(0!==this.i(i,o))return!1;}return!0;},t.prototype.A=function(){var t=[];return this.forEach(function(e){t.push(e);}),t;},t.prototype.toString=function(){var t=[];return this.forEach(function(e){return t.push(e);}),"SortedSet("+t.toString()+")";},t.prototype.copy=function(e){var n=new t(this.i);return n.data=e,n;},t;}(),Nt=/** @class */function(){function t(t){this.Mt=t;}return t.prototype.It=function(){return this.Mt.It().key;},t.prototype.At=function(){return this.Mt.At();},t;}(),At=new bt(A.i);function St(){return At;}function Dt(){return St();}var xt=new bt(A.i);function Lt(){return xt;}var kt=new bt(A.i),Rt=new Tt(A.i);function Ot(){for(var t=[],e=0;e<arguments.length;e++){t[e]=arguments[e];}for(var n=Rt,r=0,i=t;r<i.length;r++){var o=i[r];n=n.add(o);}return n;}var Pt=new Tt(H);function Vt(){return Pt;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * DocumentSet is an immutable (copy-on-write) collection that holds documents
	 * in order specified by the provided comparator. We always add a document key
	 * comparator on top of what is provided to guarantee document equality based on
	 * the key.
	 */var Ut=/** @class */function(){/** The default ordering is by key if the comparator is omitted */function t(t){// We are adding document key comparator to the end as it's the only
	// guaranteed unique property of a document.
	this.i=t?function(e,n){return t(e,n)||A.i(e.key,n.key);}:function(t,e){return A.i(t.key,e.key);},this.Ot=Lt(),this.Lt=new bt(this.i)/**
	     * Returns an empty copy of the existing DocumentSet, using the same
	     * comparator.
	     */;}return t.Bt=function(e){return new t(e.i);},t.prototype.has=function(t){return null!=this.Ot.get(t);},t.prototype.get=function(t){return this.Ot.get(t);},t.prototype.first=function(){return this.Lt.ct();},t.prototype.last=function(){return this.Lt.ut();},t.prototype.m=function(){return this.Lt.m();},/**
	     * Returns the index of the provided key in the document set, or -1 if the
	     * document key is not present in the set;
	     */t.prototype.indexOf=function(t){var e=this.Ot.get(t);return e?this.Lt.indexOf(e):-1;},Object.defineProperty(t.prototype,"size",{get:function get(){return this.Lt.size;},enumerable:!1,configurable:!0}),/** Iterates documents in order defined by "comparator" */t.prototype.forEach=function(t){this.Lt.ht(function(e,n){return t(e),!1;});},/** Inserts or updates a document with the same key */t.prototype.add=function(t){// First remove the element if we have it.
	var e=this.delete(t.key);return e.copy(e.Ot.ot(t.key,t),e.Lt.ot(t,null));},/** Deletes a document with a given key */t.prototype.delete=function(t){var e=this.get(t);return e?this.copy(this.Ot.remove(t),this.Lt.remove(e)):this;},t.prototype.isEqual=function(e){if(!(e instanceof t))return!1;if(this.size!==e.size)return!1;for(var n=this.Lt._t(),r=e.Lt._t();n.At();){var i=n.It().key,o=r.It().key;if(!i.isEqual(o))return!1;}return!0;},t.prototype.toString=function(){var t=[];return this.forEach(function(e){t.push(e.toString());}),0===t.length?"DocumentSet ()":"DocumentSet (\n  "+t.join("  \n")+"\n)";},t.prototype.copy=function(e,n){var r=new t();return r.i=this.i,r.Ot=e,r.Lt=n,r;},t;}(),Ct=/** @class */function(){function t(){this.qt=new bt(A.i);}return t.prototype.track=function(t){var e=t.doc.key,n=this.qt.get(e);n?// Merge the new change with the existing change.
	0/* Added */!==t.type&&3/* Metadata */===n.type?this.qt=this.qt.ot(e,t):3/* Metadata */===t.type&&1/* Removed */!==n.type?this.qt=this.qt.ot(e,{type:n.type,doc:t.doc}):2/* Modified */===t.type&&2/* Modified */===n.type?this.qt=this.qt.ot(e,{type:2/* Modified */,doc:t.doc}):2/* Modified */===t.type&&0/* Added */===n.type?this.qt=this.qt.ot(e,{type:0/* Added */,doc:t.doc}):1/* Removed */===t.type&&0/* Added */===n.type?this.qt=this.qt.remove(e):1/* Removed */===t.type&&2/* Modified */===n.type?this.qt=this.qt.ot(e,{type:1/* Removed */,doc:n.doc}):0/* Added */===t.type&&1/* Removed */===n.type?this.qt=this.qt.ot(e,{type:2/* Modified */,doc:t.doc}):// This includes these cases, which don't make sense:
	// Added->Added
	// Removed->Removed
	// Modified->Added
	// Removed->Modified
	// Metadata->Added
	// Removed->Metadata
	y():this.qt=this.qt.ot(e,t);},t.prototype.Ut=function(){var t=[];return this.qt.ht(function(e,n){t.push(n);}),t;},t;}(),Ft=/** @class */function(){function t(t,e,n,r,i,o,s,u){this.query=t,this.docs=e,this.Qt=n,this.docChanges=r,this.Wt=i,this.fromCache=o,this.jt=s,this.Kt=u/** Returns a view snapshot as if all documents in the snapshot were added. */;}return t.Gt=function(e,n,r,i){var o=[];return n.forEach(function(t){o.push({type:0/* Added */,doc:t});}),new t(e,n,Ut.Bt(n),o,r,i,/* syncStateChanged= */!0,/* excludesMetadataChanges= */!1);},Object.defineProperty(t.prototype,"hasPendingWrites",{get:function get(){return!this.Wt.m();},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){if(!(this.fromCache===t.fromCache&&this.jt===t.jt&&this.Wt.isEqual(t.Wt)&&Qn(this.query,t.query)&&this.docs.isEqual(t.docs)&&this.Qt.isEqual(t.Qt)))return!1;var e=this.docChanges,n=t.docChanges;if(e.length!==n.length)return!1;for(var r=0;r<e.length;r++){if(e[r].type!==n[r].type||!e[r].doc.isEqual(n[r].doc))return!1;}return!0;},t;}(),Mt=/** @class */function(){function t(/**
	     * The snapshot version this event brings us up to, or MIN if not set.
	     */t,/**
	     * A map from target to changes to the target. See TargetChange.
	     */e,/**
	     * A set of targets that is known to be inconsistent. Listens for these
	     * targets should be re-established without resume tokens.
	     */n,/**
	     * A set of which documents have changed or been deleted, along with the
	     * doc's new values (if not deleted).
	     */r,/**
	     * A set of which document updates are due only to limbo resolution targets.
	     */i){this.nt=t,this.zt=e,this.Ht=n,this.Yt=r,this.Jt=i;}/**
	     * HACK: Views require RemoteEvents in order to determine whether the view is
	     * CURRENT, but secondary tabs don't receive remote events. So this method is
	     * used to create a synthesized RemoteEvent that can be used to apply a
	     * CURRENT status change to a View, for queries executed in a different tab.
	     */// PORTING NOTE: Multi-tab only
	return t.Xt=function(e,n){var r=new Map();return r.set(e,qt.Zt(e,n)),new t(st.min(),r,Vt(),St(),Ot());},t;}(),qt=/** @class */function(){function t(/**
	     * An opaque, server-assigned token that allows watching a query to be resumed
	     * after disconnecting without retransmitting all the data that matches the
	     * query. The resume token essentially identifies a point in time from which
	     * the server should resume sending results.
	     */t,/**
	     * The "current" (synced) status of this target. Note that "current"
	     * has special meaning in the RPC protocol that implies that a target is
	     * both up-to-date and consistent with the rest of the watch stream.
	     */e,/**
	     * The set of documents that were newly assigned to this target as part of
	     * this remote event.
	     */n,/**
	     * The set of documents that were already assigned to this target but received
	     * an update during this remote event.
	     */r,/**
	     * The set of documents that were removed from this target as part of this
	     * remote event.
	     */i){this.resumeToken=t,this.te=e,this.ee=n,this.ne=r,this.se=i/**
	     * This method is used to create a synthesized TargetChanges that can be used to
	     * apply a CURRENT status change to a View (for queries executed in a different
	     * tab) or for new queries (to raise snapshots with correct CURRENT status).
	     */;}return t.Zt=function(e,n){return new t(X.B,n,Ot(),Ot(),Ot());},t;}(),jt=function jt(/** The new document applies to all of these targets. */t,/** The new document is removed from all of these targets. */e,/** The key of the document for this change. */n,/**
	     * The new document or NoDocument if it was deleted. Is null if the
	     * document went out of view without the server sending a new document.
	     */r){this.ie=t,this.removedTargetIds=e,this.key=n,this.re=r;},Gt=function Gt(t,e){this.targetId=t,this.oe=e;},zt=function zt(/** What kind of change occurred to the watch target. */t,/** The target IDs that were added/removed/set. */e,/**
	     * An opaque, server-assigned token that allows watching a target to be
	     * resumed after disconnecting without retransmitting all the data that
	     * matches the target. The resume token essentially identifies a point in
	     * time from which the server should resume sending results.
	     */n/** An RPC error indicating why the watch failed. */,r){void 0===n&&(n=X.B),void 0===r&&(r=null),this.state=t,this.targetIds=e,this.resumeToken=n,this.cause=r;},Bt=/** @class */function(){function t(){/**
	         * The number of pending responses (adds or removes) that we are waiting on.
	         * We only consider targets active that have no pending responses.
	         */this.ae=0,/**
	             * Keeps track of the document changes since the last raised snapshot.
	             *
	             * These changes are continuously updated as we receive document updates and
	             * always reflect the current set of changes against the last issued snapshot.
	             */this.ce=Qt(),/** See public getters for explanations of these fields. */this.ue=X.B,this.he=!1,/**
	             * Whether this target state should be included in the next snapshot. We
	             * initialize to true so that newly-added targets are included in the next
	             * RemoteEvent.
	             */this.le=!0;}return Object.defineProperty(t.prototype,"te",{/**
	         * Whether this target has been marked 'current'.
	         *
	         * 'Current' has special meaning in the RPC protocol: It implies that the
	         * Watch backend has sent us all changes up to the point at which the target
	         * was added and that the target is consistent with the rest of the watch
	         * stream.
	         */get:function get(){return this.he;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"resumeToken",{/** The last resume token sent to us for this target. */get:function get(){return this.ue;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_e",{/** Whether this target has pending target adds or target removes. */get:function get(){return 0!==this.ae;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fe",{/** Whether we have modified any state that should trigger a snapshot. */get:function get(){return this.le;},enumerable:!1,configurable:!0}),/**
	     * Applies the resume token to the TargetChange, but only when it has a new
	     * value. Empty resumeTokens are discarded.
	     */t.prototype.de=function(t){t.O()>0&&(this.le=!0,this.ue=t);},/**
	     * Creates a target change from the current set of changes.
	     *
	     * To reset the document changes after raising this snapshot, call
	     * `clearPendingChanges()`.
	     */t.prototype.we=function(){var t=Ot(),e=Ot(),n=Ot();return this.ce.forEach(function(r,i){switch(i){case 0/* Added */:t=t.add(r);break;case 2/* Modified */:e=e.add(r);break;case 1/* Removed */:n=n.add(r);break;default:y();}}),new qt(this.ue,this.he,t,e,n);},/**
	     * Resets the document changes and sets `hasPendingChanges` to false.
	     */t.prototype.me=function(){this.le=!1,this.ce=Qt();},t.prototype.Te=function(t,e){this.le=!0,this.ce=this.ce.ot(t,e);},t.prototype.Ee=function(t){this.le=!0,this.ce=this.ce.remove(t);},t.prototype.Ie=function(){this.ae+=1;},t.prototype.Ae=function(){this.ae-=1;},t.prototype.Re=function(){this.le=!0,this.he=!0;},t;}(),Wt=/** @class */function(){function t(t){this.ge=t,/** The internal state of all tracked targets. */this.Pe=new Map(),/** Keeps track of the documents to update since the last raised snapshot. */this.ye=St(),/** A mapping of document keys to their set of target IDs. */this.Ve=Kt(),/**
	             * A list of targets with existence filter mismatches. These targets are
	             * known to be inconsistent and their listens needs to be re-established by
	             * RemoteStore.
	             */this.pe=new Tt(H)/**
	     * Processes and adds the DocumentWatchChange to the current set of changes.
	     */;}return t.prototype.be=function(t){for(var e=0,n=t.ie;e<n.length;e++){var r=n[e];t.re instanceof kn?this.ve(r,t.re):t.re instanceof Rn&&this.Se(r,t.key,t.re);}for(var i=0,o=t.removedTargetIds;i<o.length;i++){var s=o[i];this.Se(s,t.key,t.re);}},/** Processes and adds the WatchTargetChange to the current set of changes. */t.prototype.De=function(t){var e=this;this.Ce(t,function(n){var r=e.Ne(n);switch(t.state){case 0/* NoChange */:e.Fe(n)&&r.de(t.resumeToken);break;case 1/* Added */:// We need to decrement the number of pending acks needed from watch
	// for this targetId.
	r.Ae(),r._e||// We have a freshly added target, so we need to reset any state
	// that we had previously. This can happen e.g. when remove and add
	// back a target for existence filter mismatches.
	r.me(),r.de(t.resumeToken);break;case 2/* Removed */:// We need to keep track of removed targets to we can post-filter and
	// remove any target changes.
	// We need to decrement the number of pending acks needed from watch
	// for this targetId.
	r.Ae(),r._e||e.removeTarget(n);break;case 3/* Current */:e.Fe(n)&&(r.Re(),r.de(t.resumeToken));break;case 4/* Reset */:e.Fe(n)&&(// Reset the target and synthesizes removes for all existing
	// documents. The backend will re-add any documents that still
	// match the target before it sends the next global snapshot.
	e.xe(n),r.de(t.resumeToken));break;default:y();}});},/**
	     * Iterates over all targetIds that the watch change applies to: either the
	     * targetIds explicitly listed in the change or the targetIds of all currently
	     * active targets.
	     */t.prototype.Ce=function(t,e){var n=this;t.targetIds.length>0?t.targetIds.forEach(e):this.Pe.forEach(function(t,r){n.Fe(r)&&e(r);});},/**
	     * Handles existence filters and synthesizes deletes for filter mismatches.
	     * Targets that are invalidated by filter mismatches are added to
	     * `pendingTargetResets`.
	     */t.prototype.$e=function(t){var e=t.targetId,n=t.oe.count,r=this.ke(e);if(r){var i=r.target;if(dt(i)){if(0===n){// The existence filter told us the document does not exist. We deduce
	// that this document does not exist and apply a deleted document to
	// our updates. Without applying this deleted document there might be
	// another query that will raise this document as part of a snapshot
	// until it is resolved, essentially exposing inconsistency between
	// queries.
	var o=new A(i.path);this.Se(e,o,new Rn(o,st.min()));}else g(1===n);}else this.Me(e)!==n&&(// Existence filter mismatch: We reset the mapping and raise a new
	// snapshot with `isFromCache:true`.
	this.xe(e),this.pe=this.pe.add(e));}},/**
	     * Converts the currently accumulated state into a remote event at the
	     * provided snapshot version. Resets the accumulated changes before returning.
	     */t.prototype.Oe=function(t){var e=this,n=new Map();this.Pe.forEach(function(r,i){var o=e.ke(i);if(o){if(r.te&&dt(o.target)){// Document queries for document that don't exist can produce an empty
	// result set. To update our local cache, we synthesize a document
	// delete if we have not previously received the document. This
	// resolves the limbo state of the document, removing it from
	// limboDocumentRefs.
	// TODO(dimond): Ideally we would have an explicit lookup target
	// instead resulting in an explicit delete message and we could
	// remove this special logic.
	var s=new A(o.target.path);null!==e.ye.get(s)||e.Le(i,s)||e.Se(i,s,new Rn(s,t));}r.fe&&(n.set(i,r.we()),r.me());}});var r=Ot();// We extract the set of limbo-only document updates as the GC logic
	// special-cases documents that do not appear in the target cache.
	// TODO(gsoltis): Expand on this comment once GC is available in the JS
	// client.
	this.Ve.forEach(function(t,n){var i=!0;n.xt(function(t){var n=e.ke(t);return!n||2/* LimboResolution */===n.et||(i=!1,!1);}),i&&(r=r.add(t));});var i=new Mt(t,n,this.pe,this.ye,r);return this.ye=St(),this.Ve=Kt(),this.pe=new Tt(H),i;},/**
	     * Adds the provided document to the internal list of document updates and
	     * its document key to the given target's mapping.
	     */// Visible for testing.
	t.prototype.ve=function(t,e){if(this.Fe(t)){var n=this.Le(t,e.key)?2/* Modified */:0/* Added */;this.Ne(t).Te(e.key,n),this.ye=this.ye.ot(e.key,e),this.Ve=this.Ve.ot(e.key,this.Be(e.key).add(t));}},/**
	     * Removes the provided document from the target mapping. If the
	     * document no longer matches the target, but the document's state is still
	     * known (e.g. we know that the document was deleted or we received the change
	     * that caused the filter mismatch), the new document can be provided
	     * to update the remote document cache.
	     */// Visible for testing.
	t.prototype.Se=function(t,e,n){if(this.Fe(t)){var r=this.Ne(t);this.Le(t,e)?r.Te(e,1/* Removed */):// The document may have entered and left the target before we raised a
	// snapshot, so we can just ignore the change.
	r.Ee(e),this.Ve=this.Ve.ot(e,this.Be(e).delete(t)),n&&(this.ye=this.ye.ot(e,n));}},t.prototype.removeTarget=function(t){this.Pe.delete(t);},/**
	     * Returns the current count of documents in the target. This includes both
	     * the number of documents that the LocalStore considers to be part of the
	     * target as well as any accumulated changes.
	     */t.prototype.Me=function(t){var e=this.Ne(t).we();return this.ge.qe(t).size+e.ee.size-e.se.size;},/**
	     * Increment the number of acks needed from watch before we can consider the
	     * server to be 'in-sync' with the client's active targets.
	     */t.prototype.Ie=function(t){this.Ne(t).Ie();},t.prototype.Ne=function(t){var e=this.Pe.get(t);return e||(e=new Bt(),this.Pe.set(t,e)),e;},t.prototype.Be=function(t){var e=this.Ve.get(t);return e||(e=new Tt(H),this.Ve=this.Ve.ot(t,e)),e;},/**
	     * Verifies that the user is still interested in this target (by calling
	     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
	     * from watch.
	     */t.prototype.Fe=function(t){var e=null!==this.ke(t);return e||l("WatchChangeAggregator","Detected inactive target",t),e;},/**
	     * Returns the TargetData for an active target (i.e. a target that the user
	     * is still interested in that has no outstanding target change requests).
	     */t.prototype.ke=function(t){var e=this.Pe.get(t);return e&&e._e?null:this.ge.Ue(t);},/**
	     * Resets the state of a Watch target to its initial state (e.g. sets
	     * 'current' to false, clears the resume token and removes its target mapping
	     * from all documents).
	     */t.prototype.xe=function(t){var e=this;this.Pe.set(t,new Bt()),this.ge.qe(t).forEach(function(n){e.Se(t,n,/*updatedDocument=*/null);});},/**
	     * Returns whether the LocalStore considers the document to be part of the
	     * specified target.
	     */t.prototype.Le=function(t,e){return this.ge.qe(t).has(e);},t;}();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
	 * duplicate events for the same doc.
	 */function Kt(){return new bt(A.i);}function Qt(){return new bt(A.i);}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Represents a locally-applied ServerTimestamp.
	 *
	 * Server Timestamps are backed by MapValues that contain an internal field
	 * `__type__` with a value of `server_timestamp`. The previous value and local
	 * write time are stored in its `__previous_value__` and `__local_write_time__`
	 * fields respectively.
	 *
	 * Notes:
	 * - ServerTimestampValue instances are created as the result of applying a
	 *   TransformMutation (see TransformMutation.applyTo()). They can only exist in
	 *   the local view of a document. Therefore they do not need to be parsed or
	 *   serialized.
	 * - When evaluated locally (e.g. for snapshot.data()), they by default
	 *   evaluate to `null`. This behavior can be configured by passing custom
	 *   FieldValueOptions to value().
	 * - With respect to other ServerTimestampValues, they sort by their
	 *   localWriteTime.
	 */function Ht(t){var e,n;return"server_timestamp"===(null===(n=((null===(e=null==t?void 0:t.mapValue)||void 0===e?void 0:e.fields)||{}).__type__)||void 0===n?void 0:n.stringValue);}/**
	 * Creates a new ServerTimestamp proto value (using the internal format).
	 *//**
	 * Returns the value of the field before this ServerTimestamp was set.
	 *
	 * Preserving the previous values allows the user to display the last resoled
	 * value until the backend responds with the timestamp.
	 */function Yt(t){var e=t.mapValue.fields.__previous_value__;return Ht(e)?Yt(e):e;}/**
	 * Returns the local time at which this timestamp was first set.
	 */function $t(t){var e=oe(t.mapValue.fields.__local_write_time__.timestampValue);return new ot(e.seconds,e.nanos);}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */// A RegExp matching ISO 8601 UTC timestamps with optional fraction.
	var Xt=new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);/** Extracts the backend's type order for the provided value. */function Jt(t){return"nullValue"in t?0/* NullValue */:"booleanValue"in t?1/* BooleanValue */:"integerValue"in t||"doubleValue"in t?2/* NumberValue */:"timestampValue"in t?3/* TimestampValue */:"stringValue"in t?5/* StringValue */:"bytesValue"in t?6/* BlobValue */:"referenceValue"in t?7/* RefValue */:"geoPointValue"in t?8/* GeoPointValue */:"arrayValue"in t?9/* ArrayValue */:"mapValue"in t?Ht(t)?4/* ServerTimestampValue */:10/* ObjectValue */:y();}/** Tests `left` and `right` for equality based on the backend semantics. */function Zt(t,e){var n=Jt(t);if(n!==Jt(e))return!1;switch(n){case 0/* NullValue */:return!0;case 1/* BooleanValue */:return t.booleanValue===e.booleanValue;case 4/* ServerTimestampValue */:return $t(t).isEqual($t(e));case 3/* TimestampValue */:return function(t,e){if("string"==typeof t.timestampValue&&"string"==typeof e.timestampValue&&t.timestampValue.length===e.timestampValue.length)// Use string equality for ISO 8601 timestamps
	return t.timestampValue===e.timestampValue;var n=oe(t.timestampValue),r=oe(e.timestampValue);return n.seconds===r.seconds&&n.nanos===r.nanos;}(t,e);case 5/* StringValue */:return t.stringValue===e.stringValue;case 6/* BlobValue */:return function(t,e){return ue(t.bytesValue).isEqual(ue(e.bytesValue));}(t,e);case 7/* RefValue */:return t.referenceValue===e.referenceValue;case 8/* GeoPointValue */:return function(t,e){return se(t.geoPointValue.latitude)===se(e.geoPointValue.latitude)&&se(t.geoPointValue.longitude)===se(e.geoPointValue.longitude);}(t,e);case 2/* NumberValue */:return function(t,e){if("integerValue"in t&&"integerValue"in e)return se(t.integerValue)===se(e.integerValue);if("doubleValue"in t&&"doubleValue"in e){var n=se(t.doubleValue),r=se(e.doubleValue);return n===r?at(n)===at(r):isNaN(n)&&isNaN(r);}return!1;}(t,e);case 9/* ArrayValue */:return Y(t.arrayValue.values||[],e.arrayValue.values||[],Zt);case 10/* ObjectValue */:return function(t,e){var n=t.mapValue.fields||{},r=e.mapValue.fields||{};if(w(n)!==w(r))return!1;for(var i in n){if(n.hasOwnProperty(i)&&(void 0===r[i]||!Zt(n[i],r[i])))return!1;}return!0;}(t,e);default:return y();}}function te(t,e){return void 0!==(t.values||[]).find(function(t){return Zt(t,e);});}function ee(t,e){var n=Jt(t),r=Jt(e);if(n!==r)return H(n,r);switch(n){case 0/* NullValue */:return 0;case 1/* BooleanValue */:return H(t.booleanValue,e.booleanValue);case 2/* NumberValue */:return function(t,e){var n=se(t.integerValue||t.doubleValue),r=se(e.integerValue||e.doubleValue);return n<r?-1:n>r?1:n===r?0:// one or both are NaN.
	isNaN(n)?isNaN(r)?0:-1:1;}(t,e);case 3/* TimestampValue */:return ne(t.timestampValue,e.timestampValue);case 4/* ServerTimestampValue */:return ne($t(t),$t(e));case 5/* StringValue */:return H(t.stringValue,e.stringValue);case 6/* BlobValue */:return function(t,e){var n=ue(t),r=ue(e);return n.L(r);}(t.bytesValue,e.bytesValue);case 7/* RefValue */:return function(t,e){for(var n=t.split("/"),r=e.split("/"),i=0;i<n.length&&i<r.length;i++){var o=H(n[i],r[i]);if(0!==o)return o;}return H(n.length,r.length);}(t.referenceValue,e.referenceValue);case 8/* GeoPointValue */:return function(t,e){var n=H(se(t.latitude),se(e.latitude));return 0!==n?n:H(se(t.longitude),se(e.longitude));}(t.geoPointValue,e.geoPointValue);case 9/* ArrayValue */:return function(t,e){for(var n=t.values||[],r=e.values||[],i=0;i<n.length&&i<r.length;++i){var o=ee(n[i],r[i]);if(o)return o;}return H(n.length,r.length);}(t.arrayValue,e.arrayValue);case 10/* ObjectValue */:return function(t,e){var n=t.fields||{},r=Object.keys(n),i=e.fields||{},o=Object.keys(i);// Even though MapValues are likely sorted correctly based on their insertion
	// order (e.g. when received from the backend), local modifications can bring
	// elements out of order. We need to re-sort the elements to ensure that
	// canonical IDs are independent of insertion order.
	r.sort(),o.sort();for(var s=0;s<r.length&&s<o.length;++s){var u=H(r[s],o[s]);if(0!==u)return u;var a=ee(n[r[s]],i[o[s]]);if(0!==a)return a;}return H(r.length,o.length);}(t.mapValue,e.mapValue);default:throw y();}}function ne(t,e){if("string"==typeof t&&"string"==typeof e&&t.length===e.length)return H(t,e);var n=oe(t),r=oe(e),i=H(n.seconds,r.seconds);return 0!==i?i:H(n.nanos,r.nanos);}function re(t){return ie(t);}function ie(t){return"nullValue"in t?"null":"booleanValue"in t?""+t.booleanValue:"integerValue"in t?""+t.integerValue:"doubleValue"in t?""+t.doubleValue:"timestampValue"in t?function(t){var e=oe(t);return"time("+e.seconds+","+e.nanos+")";}(t.timestampValue):"stringValue"in t?t.stringValue:"bytesValue"in t?ue(t.bytesValue).toBase64():"referenceValue"in t?(n=t.referenceValue,A.C(n).toString()):"geoPointValue"in t?"geo("+(e=t.geoPointValue).latitude+","+e.longitude+")":"arrayValue"in t?function(t){for(var e="[",n=!0,r=0,i=t.values||[];r<i.length;r++){n?n=!1:e+=",",e+=ie(i[r]);}return e+"]";}(t.arrayValue):"mapValue"in t?function(t){for(// Iteration order in JavaScript is not guaranteed. To ensure that we generate
	// matching canonical IDs for identical maps, we need to sort the keys.
	var e="{",n=!0,r=0,i=Object.keys(t.fields||{}).sort();r<i.length;r++){var o=i[r];n?n=!1:e+=",",e+=o+":"+ie(t.fields[o]);}return e+"}";}(t.mapValue):y();var e,n;}function oe(t){// The json interface (for the browser) will return an iso timestamp string,
	// while the proto js library (for node) will return a
	// google.protobuf.Timestamp instance.
	if(g(!!t),"string"==typeof t){// The date string can have higher precision (nanos) than the Date class
	// (millis), so we do some custom parsing here.
	// Parse the nanos right out of the string.
	var e=0,n=Xt.exec(t);if(g(!!n),n[1]){// Pad the fraction out to 9 digits (nanos).
	var r=n[1];r=(r+"000000000").substr(0,9),e=Number(r);}// Parse the date to get the seconds.
	var i=new Date(t);return{seconds:Math.floor(i.getTime()/1e3),nanos:e};}return{seconds:se(t.seconds),nanos:se(t.nanos)};}/**
	 * Converts the possible Proto types for numbers into a JavaScript number.
	 * Returns 0 if the value is not numeric.
	 */function se(t){// TODO(bjornick): Handle int64 greater than 53 bits.
	return"number"==typeof t?t:"string"==typeof t?Number(t):0;}/** Converts the possible Proto types for Blobs into a ByteString. */function ue(t){return"string"==typeof t?X.fromBase64String(t):X.fromUint8Array(t);}/** Returns a reference value for the provided database and key. */function ae(t,e){return{referenceValue:"projects/"+t.projectId+"/databases/"+t.database+"/documents/"+e.path.R()};}/** Returns true if `value` is an IntegerValue . */function ce(t){return!!t&&"integerValue"in t;}/** Returns true if `value` is a DoubleValue. *//** Returns true if `value` is an ArrayValue. */function he(t){return!!t&&"arrayValue"in t;}/** Returns true if `value` is a NullValue. */function fe(t){return!!t&&"nullValue"in t;}/** Returns true if `value` is NaN. */function le(t){return!!t&&"doubleValue"in t&&isNaN(Number(t.doubleValue));}/** Returns true if `value` is a MapValue. */function pe(t){return!!t&&"mapValue"in t;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */var de={asc:"ASCENDING",desc:"DESCENDING"},ve={"<":"LESS_THAN","<=":"LESS_THAN_OR_EQUAL",">":"GREATER_THAN",">=":"GREATER_THAN_OR_EQUAL","==":"EQUAL","!=":"NOT_EQUAL","array-contains":"ARRAY_CONTAINS",in:"IN","not-in":"NOT_IN","array-contains-any":"ARRAY_CONTAINS_ANY"},ye=function ye(t,e){this.U=t,this.Qe=e;};/**
	 * This class generates JsonObject values for the Datastore API suitable for
	 * sending to either GRPC stub methods or via the JSON/HTTP REST API.
	 *
	 * The serializer supports both Protobuf.js and Proto3 JSON formats. By
	 * setting `useProto3Json` to true, the serializer will use the Proto3 JSON
	 * format.
	 *
	 * For a description of the Proto3 JSON format check
	 * https://developers.google.com/protocol-buffers/docs/proto3#json
	 *
	 * TODO(klimt): We can remove the databaseId argument if we keep the full
	 * resource name in documents.
	 *//**
	 * Returns an IntegerValue for `value`.
	 */function ge(t){return{integerValue:""+t};}/**
	 * Returns an DoubleValue for `value` that is encoded based the serializer's
	 * `useProto3Json` setting.
	 */function me(t,e){if(t.Qe){if(isNaN(e))return{doubleValue:"NaN"};if(e===1/0)return{doubleValue:"Infinity"};if(e===-1/0)return{doubleValue:"-Infinity"};}return{doubleValue:at(e)?"-0":e};}/**
	 * Returns a value for a number that's appropriate to put into a proto.
	 * The return value is an IntegerValue if it can safely represent the value,
	 * otherwise a DoubleValue is returned.
	 */function we(t,e){return ct(e)?ge(e):me(t,e);}/**
	 * Returns a value for a Date that's appropriate to put into a proto.
	 */function _e(t,e){return t.Qe?new Date(1e3*e.seconds).toISOString().replace(/\.\d*/,"").replace("Z","")+"."+("000000000"+e.nanoseconds).slice(-9)+"Z":{seconds:""+e.seconds,nanos:e.nanoseconds};}/**
	 * Returns a value for bytes that's appropriate to put in a proto.
	 *
	 * Visible for testing.
	 */function be(t,e){return t.Qe?e.toBase64():e.toUint8Array();}/**
	 * Returns a ByteString based on the proto string value.
	 */function Ie(t,e){return _e(t,e.Z());}function Ee(t){return g(!!t),st.J(function(t){var e=oe(t);return new ot(e.seconds,e.nanos);}(t));}function Te(t,e){return function(t){return new E(["projects",t.projectId,"databases",t.database]);}(t).child("documents").child(e).R();}function Ne(t){var e=E.g(t);return g(He(e)),e;}function Ae(t,e){return Te(t.U,e.path);}function Se(t,e){var n=Ne(e);return g(n.get(1)===t.U.projectId),g(!n.get(3)&&!t.U.database||n.get(3)===t.U.database),new A(ke(n));}function De(t,e){return Te(t.U,e);}function xe(t){var e=Ne(t);// In v1beta1 queries for collections at the root did not have a trailing
	// "/documents". In v1 all resource paths contain "/documents". Preserve the
	// ability to read the v1beta1 form for compatibility with queries persisted
	// in the local target cache.
	return 4===e.length?E.P():ke(e);}function Le(t){return new E(["projects",t.U.projectId,"databases",t.U.database]).R();}function ke(t){return g(t.length>4&&"documents"===t.get(4)),t.u(5)/** Creates a Document proto from key and fields (but no create/update time) */;}function Re(t,e,n){return{name:Ae(t,e),fields:n.proto.mapValue.fields};}function Oe(t,e){var n;if(e instanceof wn)n={update:Re(t,e.key,e.value)};else if(e instanceof Nn)n={delete:Ae(t,e.key)};else if(e instanceof _n)n={update:Re(t,e.key,e.data),updateMask:Qe(e.We)};else if(e instanceof In)n={transform:{document:Ae(t,e.key),fieldTransforms:e.fieldTransforms.map(function(t){return function(t,e){var n=e.transform;if(n instanceof Ze)return{fieldPath:e.field.R(),setToServerValue:"REQUEST_TIME"};if(n instanceof tn)return{fieldPath:e.field.R(),appendMissingElements:{values:n.elements}};if(n instanceof nn)return{fieldPath:e.field.R(),removeAllFromArray:{values:n.elements}};if(n instanceof on)return{fieldPath:e.field.R(),increment:n.je};throw y();}(0,t);})}};else{if(!(e instanceof An))return y();n={verify:Ae(t,e.key)};}return e.Ge.Ke||(n.currentDocument=function(t,e){return void 0!==e.updateTime?{updateTime:Ie(t,e.updateTime)}:void 0!==e.exists?{exists:e.exists}:y();}(t,e.Ge)),n;}function Pe(t,e){var n=e.currentDocument?function(t){return void 0!==t.updateTime?fn.updateTime(Ee(t.updateTime)):void 0!==t.exists?fn.exists(t.exists):fn.ze();}(e.currentDocument):fn.ze();if(e.update){e.update.name;var r=Se(t,e.update.name),i=new Sn({mapValue:{fields:e.update.fields}});if(e.updateMask){var o=function(t){var e=t.fieldPaths||[];return new an(e.map(function(t){return N.S(t);}));}(e.updateMask);return new _n(r,i,o,n);}return new wn(r,i,n);}if(e.delete){var s=Se(t,e.delete);return new Nn(s,n);}if(e.transform){var u=Se(t,e.transform.document),a=e.transform.fieldTransforms.map(function(e){return function(t,e){var n=null;if("setToServerValue"in e)g("REQUEST_TIME"===e.setToServerValue),n=new Ze();else if("appendMissingElements"in e){var r=e.appendMissingElements.values||[];n=new tn(r);}else if("removeAllFromArray"in e){var i=e.removeAllFromArray.values||[];n=new nn(i);}else"increment"in e?n=new on(t,e.increment):y();var o=N.S(e.fieldPath);return new cn(o,n);}(t,e);});return g(!0===n.exists),new In(u,a);}if(e.verify){var c=Se(t,e.verify);return new An(c,n);}return y();}function Ve(t,e){return{documents:[De(t,e.path)]};}function Ue(t,e){// Dissect the path into parent, collectionId, and optional key filter.
	var n={structuredQuery:{}},r=e.path;null!==e.collectionGroup?(n.parent=De(t,r),n.structuredQuery.from=[{collectionId:e.collectionGroup,allDescendants:!0}]):(n.parent=De(t,r.h()),n.structuredQuery.from=[{collectionId:r._()}]);var i=function(t){if(0!==t.length){var e=t.map(function(t){// visible for testing
	return function(t){if("=="/* EQUAL */===t.op){if(le(t.value))return{unaryFilter:{field:ze(t.field),op:"IS_NAN"}};if(fe(t.value))return{unaryFilter:{field:ze(t.field),op:"IS_NULL"}};}else if("!="/* NOT_EQUAL */===t.op){if(le(t.value))return{unaryFilter:{field:ze(t.field),op:"IS_NOT_NAN"}};if(fe(t.value))return{unaryFilter:{field:ze(t.field),op:"IS_NOT_NULL"}};}return{fieldFilter:{field:ze(t.field),op:Ge(t.op),value:t.value}};}(t);});return 1===e.length?e[0]:{compositeFilter:{op:"AND",filters:e}};}}(e.filters);i&&(n.structuredQuery.where=i);var o=function(t){if(0!==t.length)return t.map(function(t){// visible for testing
	return function(t){return{field:ze(t.field),direction:je(t.dir)};}(t);});}(e.orderBy);o&&(n.structuredQuery.orderBy=o);var s=function(t,e){return t.Qe||ut(e)?e:{value:e};}(t,e.limit);return null!==s&&(n.structuredQuery.limit=s),e.startAt&&(n.structuredQuery.startAt=Me(e.startAt)),e.endAt&&(n.structuredQuery.endAt=Me(e.endAt)),n;}function Ce(t){var e=xe(t.parent),n=t.structuredQuery,r=n.from?n.from.length:0,i=null;if(r>0){g(1===r);var o=n.from[0];o.allDescendants?i=o.collectionId:e=e.child(o.collectionId);}var s=[];n.where&&(s=Fe(n.where));var u=[];n.orderBy&&(u=n.orderBy.map(function(t){return function(t){return new fr(Be(t.field),// visible for testing
	function(t){switch(t){case"ASCENDING":return"asc"/* ASCENDING */;case"DESCENDING":return"desc"/* DESCENDING */;default:return;}}(t.direction));}(t);}));var a=null;n.limit&&(a=function(t){var e;return ut(e="object"==(typeof t==="undefined"?"undefined":_typeof(t))?t.value:t)?null:e;}(n.limit));var c=null;n.startAt&&(c=qe(n.startAt));var h=null;return n.endAt&&(h=qe(n.endAt)),zn(Vn(e,i,u,s,a,"F"/* First */,c,h));}function Fe(t){return t?void 0!==t.unaryFilter?[Ke(t)]:void 0!==t.fieldFilter?[We(t)]:void 0!==t.compositeFilter?t.compositeFilter.filters.map(function(t){return Fe(t);}).reduce(function(t,e){return t.concat(e);}):y():[];}function Me(t){return{before:t.before,values:t.position};}function qe(t){var e=!!t.before,n=t.values||[];return new ur(n,e);}// visible for testing
	function je(t){return de[t];}function Ge(t){return ve[t];}function ze(t){return{fieldPath:t.R()};}function Be(t){return N.S(t.fieldPath);}function We(t){return Jn.create(Be(t.fieldFilter.field),function(t){switch(t){case"EQUAL":return"=="/* EQUAL */;case"NOT_EQUAL":return"!="/* NOT_EQUAL */;case"GREATER_THAN":return">"/* GREATER_THAN */;case"GREATER_THAN_OR_EQUAL":return">="/* GREATER_THAN_OR_EQUAL */;case"LESS_THAN":return"<"/* LESS_THAN */;case"LESS_THAN_OR_EQUAL":return"<="/* LESS_THAN_OR_EQUAL */;case"ARRAY_CONTAINS":return"array-contains"/* ARRAY_CONTAINS */;case"IN":return"in"/* IN */;case"NOT_IN":return"not-in"/* NOT_IN */;case"ARRAY_CONTAINS_ANY":return"array-contains-any"/* ARRAY_CONTAINS_ANY */;case"OPERATOR_UNSPECIFIED":default:return y();}}(t.fieldFilter.op),t.fieldFilter.value);}function Ke(t){switch(t.unaryFilter.op){case"IS_NAN":var e=Be(t.unaryFilter.field);return Jn.create(e,"=="/* EQUAL */,{doubleValue:NaN});case"IS_NULL":var n=Be(t.unaryFilter.field);return Jn.create(n,"=="/* EQUAL */,{nullValue:"NULL_VALUE"});case"IS_NOT_NAN":var r=Be(t.unaryFilter.field);return Jn.create(r,"!="/* NOT_EQUAL */,{doubleValue:NaN});case"IS_NOT_NULL":var i=Be(t.unaryFilter.field);return Jn.create(i,"!="/* NOT_EQUAL */,{nullValue:"NULL_VALUE"});case"OPERATOR_UNSPECIFIED":default:return y();}}function Qe(t){var e=[];return t.fields.forEach(function(t){return e.push(t.R());}),{fieldPaths:e};}function He(t){// Resource names have at least 4 components (project ID, database ID)
	return t.length>=4&&"projects"===t.get(0)&&"databases"===t.get(2);}/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Represents a transform within a TransformMutation. */var Ye=function Ye(){// Make sure that the structural type of `TransformOperation` is unique.
	// See https://github.com/microsoft/TypeScript/issues/5451
	this.He=void 0;};/**
	 * Computes the local transform result against the provided `previousValue`,
	 * optionally using the provided localWriteTime.
	 */function $e(t,e,n){return t instanceof Ze?function(t,e){var n={fields:{__type__:{stringValue:"server_timestamp"},__local_write_time__:{timestampValue:{seconds:t.seconds,nanos:t.nanoseconds}}}};return e&&(n.fields.__previous_value__=e),{mapValue:n};}(n,e):t instanceof tn?en(t,e):t instanceof nn?rn(t,e):function(t,e){// PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
	// precision and resolves overflows by reducing precision, we do not
	// manually cap overflows at 2^63.
	var n=Je(t,e),r=sn(n)+sn(t.je);return ce(n)&&ce(t.je)?ge(r):me(t.serializer,r);}(t,e);}/**
	 * Computes a final transform result after the transform has been acknowledged
	 * by the server, potentially using the server-provided transformResult.
	 */function Xe(t,e,n){// The server just sends null as the transform result for array operations,
	// so we have to calculate a result the same as we do for local
	// applications.
	return t instanceof tn?en(t,e):t instanceof nn?rn(t,e):n;}/**
	 * If this transform operation is not idempotent, returns the base value to
	 * persist for this transform. If a base value is returned, the transform
	 * operation is always applied to this base value, even if document has
	 * already been updated.
	 *
	 * Base values provide consistent behavior for non-idempotent transforms and
	 * allow us to return the same latency-compensated value even if the backend
	 * has already applied the transform operation. The base value is null for
	 * idempotent transforms, as they can be re-played even if the backend has
	 * already applied them.
	 *
	 * @return a base value to store along with the mutation, or null for
	 * idempotent transforms.
	 */function Je(t,e){return t instanceof on?ce(n=e)||function(t){return!!t&&"doubleValue"in t;}(n)?e:{integerValue:0}:null;var n;}/** Transforms a value into a server-generated timestamp. */var Ze=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n;}(Ye),tn=/** @class */function(e){function n(t){var n=this;return(n=e.call(this)||this).elements=t,n;}return t.__extends(n,e),n;}(Ye);/** Transforms an array value via a union operation. */function en(t,e){for(var n=un(e),r=function r(t){n.some(function(e){return Zt(e,t);})||n.push(t);},i=0,o=t.elements;i<o.length;i++){r(o[i]);}return{arrayValue:{values:n}};}/** Transforms an array value via a remove operation. */var nn=/** @class */function(e){function n(t){var n=this;return(n=e.call(this)||this).elements=t,n;}return t.__extends(n,e),n;}(Ye);function rn(t,e){for(var n=un(e),r=function r(t){n=n.filter(function(e){return!Zt(e,t);});},i=0,o=t.elements;i<o.length;i++){r(o[i]);}return{arrayValue:{values:n}};}/**
	 * Implements the backend semantics for locally computed NUMERIC_ADD (increment)
	 * transforms. Converts all field values to integers or doubles, but unlike the
	 * backend does not cap integer values at 2^63. Instead, JavaScript number
	 * arithmetic is used and precision loss can occur for values greater than 2^53.
	 */var on=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this)||this).serializer=t,r.je=n,r;}return t.__extends(n,e),n;}(Ye);function sn(t){return se(t.integerValue||t.doubleValue);}function un(t){return he(t)&&t.arrayValue.values?t.arrayValue.values.slice():[];}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Provides a set of fields that can be used to partially patch a document.
	 * FieldMask is used in conjunction with ObjectValue.
	 * Examples:
	 *   foo - Overwrites foo entirely with the provided value. If foo is not
	 *         present in the companion ObjectValue, the field is deleted.
	 *   foo.bar - Overwrites only the field bar of the object foo.
	 *             If foo is not an object, foo is replaced with an object
	 *             containing foo
	 */var an=/** @class */function(){function t(t){this.fields=t,// TODO(dimond): validation of FieldMask
	// Sort the field mask to support `FieldMask.isEqual()` and assert below.
	t.sort(N.i)/**
	     * Verifies that `fieldPath` is included by at least one field in this field
	     * mask.
	     *
	     * This is an O(n) operation, where `n` is the size of the field mask.
	     */;}return t.prototype.Ye=function(t){for(var e=0,n=this.fields;e<n.length;e++){if(n[e].T(t))return!0;}return!1;},t.prototype.isEqual=function(t){return Y(this.fields,t.fields,function(t,e){return t.isEqual(e);});},t;}(),cn=function cn(t,e){this.field=t,this.transform=e;};/** A field path and the TransformOperation to perform upon it. *//** The result of successfully applying a mutation to the backend. */var hn=function hn(/**
	     * The version at which the mutation was committed:
	     *
	     * - For most operations, this is the updateTime in the WriteResult.
	     * - For deletes, the commitTime of the WriteResponse (because deletes are
	     *   not stored and have no updateTime).
	     *
	     * Note that these versions can be different: No-op writes will not change
	     * the updateTime even though the commitTime advances.
	     */t,/**
	     * The resulting fields returned from the backend after a
	     * TransformMutation has been committed. Contains one FieldValue for each
	     * FieldTransform that was in the mutation.
	     *
	     * Will be null if the mutation was not a TransformMutation.
	     */e){this.version=t,this.transformResults=e;},fn=/** @class */function(){function t(t,e){this.updateTime=t,this.exists=e/** Creates a new empty Precondition. */;}return t.ze=function(){return new t();},/** Creates a new Precondition with an exists flag. */t.exists=function(e){return new t(void 0,e);},/** Creates a new Precondition based on a version a document exists at. */t.updateTime=function(e){return new t(e);},Object.defineProperty(t.prototype,"Ke",{/** Returns whether this Precondition is empty. */get:function get(){return void 0===this.updateTime&&void 0===this.exists;},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){return this.exists===t.exists&&(this.updateTime?!!t.updateTime&&this.updateTime.isEqual(t.updateTime):!t.updateTime);},t;}();/**
	 * Encodes a precondition for a mutation. This follows the model that the
	 * backend accepts with the special case of an explicit "empty" precondition
	 * (meaning no precondition).
	 *//**
	 * Returns true if the preconditions is valid for the given document
	 * (or null if no document is available).
	 */function ln(t,e){return void 0!==t.updateTime?e instanceof kn&&e.version.isEqual(t.updateTime):void 0===t.exists||t.exists===e instanceof kn;}/**
	 * A mutation describes a self-contained change to a document. Mutations can
	 * create, replace, delete, and update subsets of documents.
	 *
	 * Mutations not only act on the value of the document but also its version.
	 *
	 * For local mutations (mutations that haven't been committed yet), we preserve
	 * the existing version for Set, Patch, and Transform mutations. For Delete
	 * mutations, we reset the version to 0.
	 *
	 * Here's the expected transition table.
	 *
	 * MUTATION           APPLIED TO            RESULTS IN
	 *
	 * SetMutation        Document(v3)          Document(v3)
	 * SetMutation        NoDocument(v3)        Document(v0)
	 * SetMutation        null                  Document(v0)
	 * PatchMutation      Document(v3)          Document(v3)
	 * PatchMutation      NoDocument(v3)        NoDocument(v3)
	 * PatchMutation      null                  null
	 * TransformMutation  Document(v3)          Document(v3)
	 * TransformMutation  NoDocument(v3)        NoDocument(v3)
	 * TransformMutation  null                  null
	 * DeleteMutation     Document(v3)          NoDocument(v0)
	 * DeleteMutation     NoDocument(v3)        NoDocument(v0)
	 * DeleteMutation     null                  NoDocument(v0)
	 *
	 * For acknowledged mutations, we use the updateTime of the WriteResponse as
	 * the resulting version for Set, Patch, and Transform mutations. As deletes
	 * have no explicit update time, we use the commitTime of the WriteResponse for
	 * Delete mutations.
	 *
	 * If a mutation is acknowledged by the backend but fails the precondition check
	 * locally, we return an `UnknownDocument` and rely on Watch to send us the
	 * updated version.
	 *
	 * Note that TransformMutations don't create Documents (in the case of being
	 * applied to a NoDocument), even though they would on the backend. This is
	 * because the client always combines the TransformMutation with a SetMutation
	 * or PatchMutation and we only want to apply the transform if the prior
	 * mutation resulted in a Document (always true for a SetMutation, but not
	 * necessarily for a PatchMutation).
	 *
	 * ## Subclassing Notes
	 *
	 * Subclasses of Mutation need to implement applyToRemoteDocument() and
	 * applyToLocalView() to implement the actual behavior of applying the mutation
	 * to some source document.
	 */var pn=function pn(){};/**
	 * Applies this mutation to the given MaybeDocument or null for the purposes
	 * of computing a new remote document. If the input document doesn't match the
	 * expected state (e.g. it is null or outdated), an `UnknownDocument` can be
	 * returned.
	 *
	 * @param mutation The mutation to apply.
	 * @param maybeDoc The document to mutate. The input document can be null if
	 *     the client has no knowledge of the pre-mutation state of the document.
	 * @param mutationResult The result of applying the mutation from the backend.
	 * @return The mutated document. The returned document may be an
	 *     UnknownDocument if the mutation could not be applied to the locally
	 *     cached base document.
	 */function dn(t,e,n){return t instanceof wn?function(t,e,n){// Unlike applySetMutationToLocalView, if we're applying a mutation to a
	// remote document the server has accepted the mutation so the precondition
	// must have held.
	return new kn(t.key,n.version,t.value,{hasCommittedMutations:!0});}(t,0,n):t instanceof _n?function(t,e,n){if(!ln(t.Ge,e))// Since the mutation was not rejected, we know that the  precondition
	// matched on the backend. We therefore must not have the expected version
	// of the document in our cache and return an UnknownDocument with the
	// known updateTime.
	return new On(t.key,n.version);var r=bn(t,e);return new kn(t.key,n.version,r,{hasCommittedMutations:!0});}(t,e,n):t instanceof In?function(t,e,n){if(g(null!=n.transformResults),!ln(t.Ge,e))// Since the mutation was not rejected, we know that the  precondition
	// matched on the backend. We therefore must not have the expected version
	// of the document in our cache and return an UnknownDocument with the
	// known updateTime.
	return new On(t.key,n.version);var r=En(t,e),i=/**
	 * Creates a list of "transform results" (a transform result is a field value
	 * representing the result of applying a transform) for use after a
	 * TransformMutation has been acknowledged by the server.
	 *
	 * @param fieldTransforms The field transforms to apply the result to.
	 * @param baseDoc The document prior to applying this mutation batch.
	 * @param serverTransformResults The transform results received by the server.
	 * @return The transform results list.
	 */function(t,e,n){var r=[];g(t.length===n.length);for(var i=0;i<n.length;i++){var o=t[i],s=o.transform,u=null;e instanceof kn&&(u=e.field(o.field)),r.push(Xe(s,u,n[i]));}return r;}(t.fieldTransforms,e,n.transformResults),o=n.version,s=Tn(t,r.data(),i);return new kn(t.key,o,s,{hasCommittedMutations:!0});}(t,e,n):function(t,e,n){// Unlike applyToLocalView, if we're applying a mutation to a remote
	// document the server has accepted the mutation so the precondition must
	// have held.
	return new Rn(t.key,n.version,{hasCommittedMutations:!0});}(t,0,n);}/**
	 * Applies this mutation to the given MaybeDocument or null for the purposes
	 * of computing the new local view of a document. Both the input and returned
	 * documents can be null.
	 *
	 * @param mutation The mutation to apply.
	 * @param maybeDoc The document to mutate. The input document can be null if
	 *     the client has no knowledge of the pre-mutation state of the document.
	 * @param baseDoc The state of the document prior to this mutation batch. The
	 *     input document can be null if the client has no knowledge of the
	 *     pre-mutation state of the document.
	 * @param localWriteTime A timestamp indicating the local write time of the
	 *     batch this mutation is a part of.
	 * @return The mutated document. The returned document may be null, but only
	 *     if maybeDoc was null and the mutation would not create a new document.
	 */function vn(t,e,n,r){return t instanceof wn?function(t,e){if(!ln(t.Ge,e))return e;var n=mn(e);return new kn(t.key,n,t.value,{Je:!0});}(t,e):t instanceof _n?function(t,e){if(!ln(t.Ge,e))return e;var n=mn(e),r=bn(t,e);return new kn(t.key,n,r,{Je:!0});}(t,e):t instanceof In?function(t,e,n,r){if(!ln(t.Ge,e))return e;var i=En(t,e),o=function(t,e,n,r){for(var i=[],o=0,s=t;o<s.length;o++){var u=s[o],a=u.transform,c=null;n instanceof kn&&(c=n.field(u.field)),null===c&&r instanceof kn&&(// If the current document does not contain a value for the mutated
	// field, use the value that existed before applying this mutation
	// batch. This solves an edge case where a PatchMutation clears the
	// values in a nested map before the TransformMutation is applied.
	c=r.field(u.field)),i.push($e(a,c,e));}return i;}(t.fieldTransforms,n,e,r),s=Tn(t,i.data(),o);return new kn(t.key,i.version,s,{Je:!0});}(t,e,r,n):function(t,e){return ln(t.Ge,e)?new Rn(t.key,st.min()):e;}(t,e);}/**
	 * If this mutation is not idempotent, returns the base value to persist with
	 * this mutation. If a base value is returned, the mutation is always applied
	 * to this base value, even if document has already been updated.
	 *
	 * The base value is a sparse object that consists of only the document
	 * fields for which this mutation contains a non-idempotent transformation
	 * (e.g. a numeric increment). The provided value guarantees consistent
	 * behavior for non-idempotent transforms and allow us to return the same
	 * latency-compensated value even if the backend has already applied the
	 * mutation. The base value is null for idempotent mutations, as they can be
	 * re-played even if the backend has already applied them.
	 *
	 * @return a base value to store along with the mutation, or null for
	 * idempotent mutations.
	 */function yn(t,e){return t instanceof In?function(t,e){for(var n=null,r=0,i=t.fieldTransforms;r<i.length;r++){var o=i[r],s=e instanceof kn?e.field(o.field):void 0,u=Je(o.transform,s||null);null!=u&&(n=null==n?new Dn().set(o.field,u):n.set(o.field,u));}return n?n.Xe():null;}(t,e):null;}function gn(t,e){return t.type===e.type&&!!t.key.isEqual(e.key)&&!!t.Ge.isEqual(e.Ge)&&(0/* Set */===t.type?t.value.isEqual(e.value):1/* Patch */===t.type?t.data.isEqual(e.data)&&t.We.isEqual(e.We):2/* Transform */!==t.type||Y(t.fieldTransforms,t.fieldTransforms,function(t,e){return function(t,e){return t.field.isEqual(e.field)&&function(t,e){return t instanceof tn&&e instanceof tn||t instanceof nn&&e instanceof nn?Y(t.elements,e.elements,Zt):t instanceof on&&e instanceof on?Zt(t.je,e.je):t instanceof Ze&&e instanceof Ze;}(t.transform,e.transform);}(t,e);}));}/**
	 * Returns the version from the given document for use as the result of a
	 * mutation. Mutations are defined to return the version of the base document
	 * only if it is an existing document. Deleted and unknown documents have a
	 * post-mutation version of SnapshotVersion.min().
	 */function mn(t){return t instanceof kn?t.version:st.min();}/**
	 * A mutation that creates or replaces the document at the given key with the
	 * object value contents.
	 */var wn=/** @class */function(e){function n(t,n,r){var i=this;return(i=e.call(this)||this).key=t,i.value=n,i.Ge=r,i.type=0/* Set */,i;}return t.__extends(n,e),n;}(pn),_n=/** @class */function(e){function n(t,n,r,i){var o=this;return(o=e.call(this)||this).key=t,o.data=n,o.We=r,o.Ge=i,o.type=1/* Patch */,o;}return t.__extends(n,e),n;}(pn);function bn(t,e){return function(t,e){var n=new Dn(e);return t.We.fields.forEach(function(e){if(!e.m()){var r=t.data.field(e);null!==r?n.set(e,r):n.delete(e);}}),n.Xe();}(t,e instanceof kn?e.data():Sn.empty());}var In=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this)||this).key=t,r.fieldTransforms=n,r.type=2/* Transform */,// NOTE: We set a precondition of exists: true as a safety-check, since we
	// always combine TransformMutations with a SetMutation or PatchMutation which
	// (if successful) should end up with an existing document.
	r.Ge=fn.exists(!0),r;}return t.__extends(n,e),n;}(pn);function En(t,e){return e;}function Tn(t,e,n){for(var r=new Dn(e),i=0;i<t.fieldTransforms.length;i++){var o=t.fieldTransforms[i];r.set(o.field,n[i]);}return r.Xe();}/** A mutation that deletes the document at the given key. */var Nn=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this)||this).key=t,r.Ge=n,r.type=3/* Delete */,r;}return t.__extends(n,e),n;}(pn),An=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this)||this).key=t,r.Ge=n,r.type=4/* Verify */,r;}return t.__extends(n,e),n;}(pn),Sn=/** @class */function(){function t(t){this.proto=t;}return t.empty=function(){return new t({mapValue:{}});},/**
	     * Returns the value at the given path or null.
	     *
	     * @param path the path to search
	     * @return The value at the path or if there it doesn't exist.
	     */t.prototype.field=function(t){if(t.m())return this.proto;for(var e=this.proto,n=0;n<t.length-1;++n){if(!e.mapValue.fields)return null;if(!pe(e=e.mapValue.fields[t.get(n)]))return null;}return(e=(e.mapValue.fields||{})[t._()])||null;},t.prototype.isEqual=function(t){return Zt(this.proto,t.proto);},t;}(),Dn=/** @class */function(){/**
	     * @param baseObject The object to mutate.
	     */function t(t){void 0===t&&(t=Sn.empty()),this.Ze=t,/** A map that contains the accumulated changes in this builder. */this.tn=new Map();}/**
	     * Sets the field to the provided value.
	     *
	     * @param path The field path to set.
	     * @param value The value to set.
	     * @return The current Builder instance.
	     */return t.prototype.set=function(t,e){return this.en(t,e),this;},/**
	     * Removes the field at the specified path. If there is no field at the
	     * specified path, nothing is changed.
	     *
	     * @param path The field path to remove.
	     * @return The current Builder instance.
	     */t.prototype.delete=function(t){return this.en(t,null),this;},/**
	     * Adds `value` to the overlay map at `path`. Creates nested map entries if
	     * needed.
	     */t.prototype.en=function(t,e){for(var n=this.tn,r=0;r<t.length-1;++r){var i=t.get(r),o=n.get(i);o instanceof Map?// Re-use a previously created map
	n=o:o&&10/* ObjectValue */===Jt(o)?(// Convert the existing Protobuf MapValue into a map
	o=new Map(Object.entries(o.mapValue.fields||{})),n.set(i,o),n=o):(// Create an empty map to represent the current nesting level
	o=new Map(),n.set(i,o),n=o);}n.set(t._(),e);},/** Returns an ObjectValue with all mutations applied. */t.prototype.Xe=function(){var t=this.nn(N.P(),this.tn);return null!=t?new Sn(t):this.Ze;},/**
	     * Applies any overlays from `currentOverlays` that exist at `currentPath`
	     * and returns the merged data at `currentPath` (or null if there were no
	     * changes).
	     *
	     * @param currentPath The path at the current nesting level. Can be set to
	     * FieldValue.emptyPath() to represent the root.
	     * @param currentOverlays The overlays at the current nesting level in the
	     * same format as `overlayMap`.
	     * @return The merged data at `currentPath` or null if no modifications
	     * were applied.
	     */t.prototype.nn=function(t,e){var n=this,r=!1,i=this.Ze.field(t),o=pe(i)?// If there is already data at the current path, base our
	Object.assign({},i.mapValue.fields):{};return e.forEach(function(e,i){if(e instanceof Map){var s=n.nn(t.child(i),e);null!=s&&(o[i]=s,r=!0);}else null!==e?(o[i]=e,r=!0):o.hasOwnProperty(i)&&(delete o[i],r=!0);}),r?{mapValue:{fields:o}}:null;},t;}();/**
	 * Returns a FieldMask built from all fields in a MapValue.
	 */function xn(t){var e=[];return _(t.fields||{},function(t,n){var r=new N([t]);if(pe(n)){var i=xn(n.mapValue).fields;if(0===i.length)// Preserve the empty map by adding it to the FieldMask.
	e.push(r);else// For nested and non-empty ObjectValues, add the FieldPath of the
	// leaf nodes.
	for(var o=0,s=i;o<s.length;o++){var u=s[o];e.push(r.child(u));}}else// For nested and non-empty ObjectValues, add the FieldPath of the leaf
	// nodes.
	e.push(r);}),new an(e)/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * The result of a lookup for a given path may be an existing document or a
	 * marker that this document does not exist at a given version.
	 */;}var Ln=function Ln(t,e){this.key=t,this.version=e;},kn=/** @class */function(e){function n(t,n,r,i){var o=this;return(o=e.call(this,t,n)||this).sn=r,o.Je=!!i.Je,o.hasCommittedMutations=!!i.hasCommittedMutations,o;}return t.__extends(n,e),n.prototype.field=function(t){return this.sn.field(t);},n.prototype.data=function(){return this.sn;},n.prototype.rn=function(){return this.sn.proto;},n.prototype.isEqual=function(t){return t instanceof n&&this.key.isEqual(t.key)&&this.version.isEqual(t.version)&&this.Je===t.Je&&this.hasCommittedMutations===t.hasCommittedMutations&&this.sn.isEqual(t.sn);},n.prototype.toString=function(){return"Document("+this.key+", "+this.version+", "+this.sn.toString()+", {hasLocalMutations: "+this.Je+"}), {hasCommittedMutations: "+this.hasCommittedMutations+"})";},Object.defineProperty(n.prototype,"hasPendingWrites",{get:function get(){return this.Je||this.hasCommittedMutations;},enumerable:!1,configurable:!0}),n;}(Ln),Rn=/** @class */function(e){function n(t,n,r){var i=this;return(i=e.call(this,t,n)||this).hasCommittedMutations=!(!r||!r.hasCommittedMutations),i;}return t.__extends(n,e),n.prototype.toString=function(){return"NoDocument("+this.key+", "+this.version+")";},Object.defineProperty(n.prototype,"hasPendingWrites",{get:function get(){return this.hasCommittedMutations;},enumerable:!1,configurable:!0}),n.prototype.isEqual=function(t){return t instanceof n&&t.hasCommittedMutations===this.hasCommittedMutations&&t.version.isEqual(this.version)&&t.key.isEqual(this.key);},n;}(Ln),On=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.toString=function(){return"UnknownDocument("+this.key+", "+this.version+")";},Object.defineProperty(n.prototype,"hasPendingWrites",{get:function get(){return!0;},enumerable:!1,configurable:!0}),n.prototype.isEqual=function(t){return t instanceof n&&t.version.isEqual(this.version)&&t.key.isEqual(this.key);},n;}(Ln),Pn=/**
	     * Initializes a Query with a path and optional additional query constraints.
	     * Path must currently be empty if this is a collection group query.
	     */function Pn(t,e,n,r,i,o/* First */,s,u){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o="F"),void 0===s&&(s=null),void 0===u&&(u=null),this.path=t,this.collectionGroup=e,this.on=n,this.filters=r,this.limit=i,this.an=o,this.startAt=s,this.endAt=u,this.cn=null,// The corresponding `Target` of this `Query` instance.
	this.un=null,this.startAt,this.endAt;};/**
	 * Represents a document in Firestore with a key, version, data and whether the
	 * data has local mutations applied to it.
	 *//** Creates a new Query instance with the options provided. */function Vn(t,e,n,r,i,o,s,u){return new Pn(t,e,n,r,i,o,s,u);}/** Creates a new Query for a query that matches all documents at `path` */function Un(t){return new Pn(t);}/**
	 * Helper to convert a collection group query into a collection query at a
	 * specific path. This is used when executing collection group queries, since
	 * we have to split the query into a set of collection queries at multiple
	 * paths.
	 */function Cn(t){return!ut(t.limit)&&"F"/* First */===t.an;}function Fn(t){return!ut(t.limit)&&"L"/* Last */===t.an;}function Mn(t){return t.on.length>0?t.on[0].field:null;}function qn(t){for(var e=0,n=t.filters;e<n.length;e++){var r=n[e];if(r.hn())return r.field;}return null;}/**
	 * Checks if any of the provided Operators are included in the query and
	 * returns the first one that is, or null if none are.
	 *//**
	 * Returns whether the query matches a collection group rather than a specific
	 * collection.
	 */function jn(t){return null!==t.collectionGroup;}/**
	 * Returns the implicit order by constraint that is used to execute the Query,
	 * which can be different from the order by constraints the user provided (e.g.
	 * the SDK and backend always orders by `__name__`).
	 */function Gn(t){var e=m(t);if(null===e.cn){e.cn=[];var n=qn(e),r=Mn(e);if(null!==n&&null===r)// In order to implicitly add key ordering, we must also add the
	// inequality filter field for it to be a valid query.
	// Note that the default inequality field and key ordering is ascending.
	n.p()||e.cn.push(new fr(n)),e.cn.push(new fr(N.v(),"asc"/* ASCENDING */));else{for(var i=!1,o=0,s=e.on;o<s.length;o++){var u=s[o];e.cn.push(u),u.field.p()&&(i=!0);}if(!i){// The order of the implicit key ordering always matches the last
	// explicit order by
	var a=e.on.length>0?e.on[e.on.length-1].dir:"asc"/* ASCENDING */;e.cn.push(new fr(N.v(),a));}}}return e.cn;}/**
	 * Converts this `Query` instance to it's corresponding `Target` representation.
	 */function zn(t){var e=m(t);if(!e.un)if("F"/* First */===e.an)e.un=ft(e.path,e.collectionGroup,Gn(e),e.filters,e.limit,e.startAt,e.endAt);else{for(// Flip the orderBy directions since we want the last results
	var n=[],r=0,i=Gn(e);r<i.length;r++){var o=i[r],s="desc"/* DESCENDING */===o.dir?"asc"/* ASCENDING */:"desc"/* DESCENDING */;n.push(new fr(o.field,s));}// We need to swap the cursors to match the now-flipped query ordering.
	var u=e.endAt?new ur(e.endAt.position,!e.endAt.before):null,a=e.startAt?new ur(e.startAt.position,!e.startAt.before):null;// Now return as a LimitType.First query.
	e.un=ft(e.path,e.collectionGroup,n,e.filters,e.limit,u,a);}return e.un;}function Bn(t,e,n){return new Pn(t.path,t.collectionGroup,t.on.slice(),t.filters.slice(),e,n,t.startAt,t.endAt);}function Wn(t,e){return new Pn(t.path,t.collectionGroup,t.on.slice(),t.filters.slice(),t.limit,t.an,e,t.endAt);}function Kn(t,e){return new Pn(t.path,t.collectionGroup,t.on.slice(),t.filters.slice(),t.limit,t.an,t.startAt,e);}function Qn(t,e){return pt(zn(t),zn(e))&&t.an===e.an;}// TODO(b/29183165): This is used to get a unique string from a query to, for
	// example, use as a dictionary key, but the implementation is subject to
	// collisions. Make it collision-free.
	function Hn(t){return lt(zn(t))+"|lt:"+t.an;}function Yn(t){return"Query(target="+function(t){var e=t.path.R();return null!==t.collectionGroup&&(e+=" collectionGroup="+t.collectionGroup),t.filters.length>0&&(e+=", filters: ["+t.filters.map(function(t){return(e=t).field.R()+" "+e.op+" "+re(e.value);/** Returns a debug description for `filter`. */var e;/** Filter that matches on key fields (i.e. '__name__'). */}).join(", ")+"]"),ut(t.limit)||(e+=", limit: "+t.limit),t.orderBy.length>0&&(e+=", orderBy: ["+t.orderBy.map(function(t){return(e=t).field.R()+" ("+e.dir+")";var e;}).join(", ")+"]"),t.startAt&&(e+=", startAt: "+ar(t.startAt)),t.endAt&&(e+=", endAt: "+ar(t.endAt)),"Target("+e+")";}(zn(t))+"; limitType="+t.an+")";}/** Returns whether `doc` matches the constraints of `query`. */function $n(t,e){return function(t,e){var n=e.key.path;return null!==t.collectionGroup?e.key.N(t.collectionGroup)&&t.path.T(n):A.F(t.path)?t.path.isEqual(n):t.path.I(n);}(t,e)&&function(t,e){for(var n=0,r=t.on;n<r.length;n++){var i=r[n];// order by key always matches
	if(!i.field.p()&&null===e.field(i.field))return!1;}return!0;}(t,e)&&function(t,e){for(var n=0,r=t.filters;n<r.length;n++){if(!r[n].matches(e))return!1;}return!0;}(t,e)&&function(t,e){return!(t.startAt&&!cr(t.startAt,Gn(t),e))&&(!t.endAt||!cr(t.endAt,Gn(t),e));}(t,e);}function Xn(t){return function(e,n){for(var r=!1,i=0,o=Gn(t);i<o.length;i++){var s=o[i],u=lr(s,e,n);if(0!==u)return u;r=r||s.field.p();}return 0;};}var Jn=/** @class */function(e){function n(t,n,r){var i=this;return(i=e.call(this)||this).field=t,i.op=n,i.value=r,i;}/**
	     * Creates a filter based on the provided arguments.
	     */return t.__extends(n,e),n.create=function(t,e,r){if(t.p())return"in"/* IN */===e||"not-in"/* NOT_IN */===e?this.ln(t,e,r):new Zn(t,e,r);if(fe(r)){if("=="/* EQUAL */!==e&&"!="/* NOT_EQUAL */!==e)throw new c(a.INVALID_ARGUMENT,"Invalid query. Null only supports '==' and '!=' comparisons.");return new n(t,e,r);}if(le(r)){if("=="/* EQUAL */!==e&&"!="/* NOT_EQUAL */!==e)throw new c(a.INVALID_ARGUMENT,"Invalid query. NaN only supports '==' and '!=' comparisons.");return new n(t,e,r);}return"array-contains"/* ARRAY_CONTAINS */===e?new rr(t,r):"in"/* IN */===e?new ir(t,r):"not-in"/* NOT_IN */===e?new or(t,r):"array-contains-any"/* ARRAY_CONTAINS_ANY */===e?new sr(t,r):new n(t,e,r);},n.ln=function(t,e,n){return"in"/* IN */===e?new tr(t,n):new er(t,n);},n.prototype.matches=function(t){var e=t.field(this.field);// Types do not have to match in NOT_EQUAL filters.
	return"!="/* NOT_EQUAL */===this.op?null!==e&&this._n(ee(e,this.value)):null!==e&&Jt(this.value)===Jt(e)&&this._n(ee(e,this.value));// Only compare types with matching backend order (such as double and int).
	},n.prototype._n=function(t){switch(this.op){case"<"/* LESS_THAN */:return t<0;case"<="/* LESS_THAN_OR_EQUAL */:return t<=0;case"=="/* EQUAL */:return 0===t;case"!="/* NOT_EQUAL */:return 0!==t;case">"/* GREATER_THAN */:return t>0;case">="/* GREATER_THAN_OR_EQUAL */:return t>=0;default:return y();}},n.prototype.hn=function(){return["<"/* LESS_THAN */,"<="/* LESS_THAN_OR_EQUAL */,">"/* GREATER_THAN */,">="/* GREATER_THAN_OR_EQUAL */,"!="/* NOT_EQUAL */,"not-in"/* NOT_IN */].indexOf(this.op)>=0;},n;}(function(){});var Zn=/** @class */function(e){function n(t,n,r){var i=this;return(i=e.call(this,t,n,r)||this).key=A.C(r.referenceValue),i;}return t.__extends(n,e),n.prototype.matches=function(t){var e=A.i(t.key,this.key);return this._n(e);},n;}(Jn),tr=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,t,"in"/* IN */,n)||this).keys=nr("in"/* IN */,n),r;}return t.__extends(n,e),n.prototype.matches=function(t){return this.keys.some(function(e){return e.isEqual(t.key);});},n;}(Jn),er=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,t,"not-in"/* NOT_IN */,n)||this).keys=nr("not-in"/* NOT_IN */,n),r;}return t.__extends(n,e),n.prototype.matches=function(t){return!this.keys.some(function(e){return e.isEqual(t.key);});},n;}(Jn);/** Filter that matches on key fields within an array. */function nr(t,e){var n;return((null===(n=e.arrayValue)||void 0===n?void 0:n.values)||[]).map(function(t){return A.C(t.referenceValue);});}/** A Filter that implements the array-contains operator. */var rr=/** @class */function(e){function n(t,n){return e.call(this,t,"array-contains"/* ARRAY_CONTAINS */,n)||this;}return t.__extends(n,e),n.prototype.matches=function(t){var e=t.field(this.field);return he(e)&&te(e.arrayValue,this.value);},n;}(Jn),ir=/** @class */function(e){function n(t,n){return e.call(this,t,"in"/* IN */,n)||this;}return t.__extends(n,e),n.prototype.matches=function(t){var e=t.field(this.field);return null!==e&&te(this.value.arrayValue,e);},n;}(Jn),or=/** @class */function(e){function n(t,n){return e.call(this,t,"not-in"/* NOT_IN */,n)||this;}return t.__extends(n,e),n.prototype.matches=function(t){if(te(this.value.arrayValue,{nullValue:"NULL_VALUE"}))return!1;var e=t.field(this.field);return null!==e&&!te(this.value.arrayValue,e);},n;}(Jn),sr=/** @class */function(e){function n(t,n){return e.call(this,t,"array-contains-any"/* ARRAY_CONTAINS_ANY */,n)||this;}return t.__extends(n,e),n.prototype.matches=function(t){var e=this,n=t.field(this.field);return!(!he(n)||!n.arrayValue.values)&&n.arrayValue.values.some(function(t){return te(e.value.arrayValue,t);});},n;}(Jn),ur=function ur(t,e){this.position=t,this.before=e;};/** A Filter that implements the IN operator. */function ar(t){// TODO(b/29183165): Make this collision robust.
	return(t.before?"b":"a")+":"+t.position.map(function(t){return re(t);}).join(",");}/**
	 * Returns true if a document sorts before a bound using the provided sort
	 * order.
	 */function cr(t,e,n){for(var r=0,i=0;i<t.position.length;i++){var o=e[i],s=t.position[i];if(r=o.field.p()?A.i(A.C(s.referenceValue),n.key):ee(s,n.field(o.field)),"desc"/* DESCENDING */===o.dir&&(r*=-1),0!==r)break;}return t.before?r<=0:r<0;}function hr(t,e){if(null===t)return null===e;if(null===e)return!1;if(t.before!==e.before||t.position.length!==e.position.length)return!1;for(var n=0;n<t.position.length;n++){if(!Zt(t.position[n],e.position[n]))return!1;}return!0;}/**
	 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
	 */var fr=function fr(t,e/* ASCENDING */){void 0===e&&(e="asc"),this.field=t,this.dir=e;};function lr(t,e,n){var r=t.field.p()?A.i(e.key,n.key):function(t,e,n){var r=e.field(t),i=n.field(t);return null!==r&&null!==i?ee(r,i):y();}(t.field,e,n);switch(t.dir){case"asc"/* ASCENDING */:return r;case"desc"/* DESCENDING */:return-1*r;default:return y();}}function pr(t,e){return t.dir===e.dir&&t.field.isEqual(e.field);}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */var dr=function dr(){var t=this;this.promise=new Promise(function(e,n){t.resolve=e,t.reject=n;});},vr=/** @class */function(){function t(/**
	     * The AsyncQueue to run backoff operations on.
	     */t,/**
	     * The ID to use when scheduling backoff operations on the AsyncQueue.
	     */e,/**
	     * The initial delay (used as the base delay on the first retry attempt).
	     * Note that jitter will still be applied, so the actual delay could be as
	     * little as 0.5*initialDelayMs.
	     */n/**
	     * The multiplier to use to determine the extended base delay after each
	     * attempt.
	     */,r/**
	     * The maximum base delay after which no further backoff is performed.
	     * Note that jitter will still be applied, so the actual delay could be as
	     * much as 1.5*maxDelayMs.
	     */,i){void 0===n&&(n=1e3),void 0===r&&(r=1.5),void 0===i&&(i=6e4),this.fn=t,this.dn=e,this.wn=n,this.mn=r,this.Tn=i,this.En=0,this.In=null,/** The last backoff attempt, as epoch milliseconds. */this.An=Date.now(),this.reset();}/**
	     * Resets the backoff delay.
	     *
	     * The very next backoffAndWait() will have no delay. If it is called again
	     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
	     * subsequent ones will increase according to the backoffFactor.
	     */return t.prototype.reset=function(){this.En=0;},/**
	     * Resets the backoff delay to the maximum delay (e.g. for use after a
	     * RESOURCE_EXHAUSTED error).
	     */t.prototype.Rn=function(){this.En=this.Tn;},/**
	     * Returns a promise that resolves after currentDelayMs, and increases the
	     * delay for any subsequent attempts. If there was a pending backoff operation
	     * already, it will be canceled.
	     */t.prototype.gn=function(t){var e=this;// Cancel any pending backoff operation.
	this.cancel();// First schedule using the current base (which may be 0 and should be
	// honored as such).
	var n=Math.floor(this.En+this.Pn()),r=Math.max(0,Date.now()-this.An),i=Math.max(0,n-r);// Guard against lastAttemptTime being in the future due to a clock change.
	i>0&&l("ExponentialBackoff","Backing off for "+i+" ms (base delay: "+this.En+" ms, delay with jitter: "+n+" ms, last attempt: "+r+" ms ago)"),this.In=this.fn.yn(this.dn,i,function(){return e.An=Date.now(),t();}),// Apply backoff factor to determine next delay and ensure it is within
	// bounds.
	this.En*=this.mn,this.En<this.wn&&(this.En=this.wn),this.En>this.Tn&&(this.En=this.Tn);},t.prototype.Vn=function(){null!==this.In&&(this.In.pn(),this.In=null);},t.prototype.cancel=function(){null!==this.In&&(this.In.cancel(),this.In=null);},/** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */t.prototype.Pn=function(){return(Math.random()-.5)*this.En;},t;}(),yr=/** @class */function(){function t(t){var e=this;// NOTE: next/catchCallback will always point to our own wrapper functions,
	// not the user's raw next() or catch() callbacks.
	this.bn=null,this.vn=null,// When the operation resolves, we'll set result or error and mark isDone.
	this.result=void 0,this.error=void 0,this.Sn=!1,// Set to true when .then() or .catch() are called and prevents additional
	// chaining.
	this.Dn=!1,t(function(t){e.Sn=!0,e.result=t,e.bn&&// value should be defined unless T is Void, but we can't express
	// that in the type system.
	e.bn(t);},function(t){e.Sn=!0,e.error=t,e.vn&&e.vn(t);});}return t.prototype.catch=function(t){return this.next(void 0,t);},t.prototype.next=function(e,n){var r=this;return this.Dn&&y(),this.Dn=!0,this.Sn?this.error?this.Cn(n,this.error):this.Nn(e,this.result):new t(function(t,i){r.bn=function(n){r.Nn(e,n).next(t,i);},r.vn=function(e){r.Cn(n,e).next(t,i);};});},t.prototype.Fn=function(){var t=this;return new Promise(function(e,n){t.next(e,n);});},t.prototype.xn=function(e){try{var n=e();return n instanceof t?n:t.resolve(n);}catch(e){return t.reject(e);}},t.prototype.Nn=function(e,n){return e?this.xn(function(){return e(n);}):t.resolve(n);},t.prototype.Cn=function(e,n){return e?this.xn(function(){return e(n);}):t.reject(n);},t.resolve=function(e){return new t(function(t,n){t(e);});},t.reject=function(e){return new t(function(t,n){n(e);});},t.$n=function(// Accept all Promise types in waitFor().
	e){return new t(function(t,n){var r=0,i=0,o=!1;e.forEach(function(e){++r,e.next(function(){++i,o&&i===r&&t();},function(t){return n(t);});}),o=!0,i===r&&t();});},/**
	     * Given an array of predicate functions that asynchronously evaluate to a
	     * boolean, implements a short-circuiting `or` between the results. Predicates
	     * will be evaluated until one of them returns `true`, then stop. The final
	     * result will be whether any of them returned `true`.
	     */t.kn=function(e){for(var n=t.resolve(!1),r=function r(e){n=n.next(function(n){return n?t.resolve(n):e();});},i=0,o=e;i<o.length;i++){r(o[i]);}return n;},t.forEach=function(t,e){var n=this,r=[];return t.forEach(function(t,i){r.push(e.call(n,t,i));}),this.$n(r);},t;}(),gr=/** @class */function(){/*
	     * Creates a new SimpleDb wrapper for IndexedDb database `name`.
	     *
	     * Note that `version` must not be a downgrade. IndexedDB does not support
	     * downgrading the schema version. We currently do not support any way to do
	     * versioning outside of IndexedDB's versioning mechanism, as only
	     * version-upgrade transactions are allowed to do things like create
	     * objectstores.
	     */function e(t,n,i){this.name=t,this.version=n,this.Mn=i,// NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
	// bug we're checking for should exist in iOS >= 12.2 and < 13, but for
	// whatever reason it's much harder to hit after 12.2 so we only proactively
	// log on 12.2.
	12.2===e.On(r.getUA())&&p("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");}/** Deletes the specified database. */return e.delete=function(t){return l("SimpleDb","Removing database:",t),Er(window.indexedDB.deleteDatabase(t)).Fn();},/** Returns true if IndexedDB is available in the current environment. */e.Ln=function(){if("undefined"==typeof indexedDB)return!1;if(e.Bn())return!0;// We extensively use indexed array values and compound keys,
	// which IE and Edge do not support. However, they still have indexedDB
	// defined on the window, so we need to check for them here and make sure
	// to return that persistence is not enabled for those browsers.
	// For tracking support of this feature, see here:
	// https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
	// Check the UA string to find out the browser.
	var t=r.getUA(),n=e.On(t),i=0<n&&n<10,o=e.qn(t),s=0<o&&o<4.5;// IE 10
	// ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
	// IE 11
	// ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
	// Edge
	// ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
	// like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
	// iOS Safari: Disable for users running iOS version < 10.
	return!(t.indexOf("MSIE ")>0||t.indexOf("Trident/")>0||t.indexOf("Edge/")>0||i||s);},/**
	     * Returns true if the backing IndexedDB store is the Node IndexedDBShim
	     * (see https://github.com/axemclion/IndexedDBShim).
	     */e.Bn=function(){var t;return"undefined"!=typeof process&&"YES"===(null===(t=process.env)||void 0===t?void 0:t.Un);},/** Helper to get a typed SimpleDbStore from a transaction. */e.Qn=function(t,e){return t.store(e);},// visible for testing
	/** Parse User Agent to determine iOS version. Returns -1 if not found. */e.On=function(t){var e=t.match(/i(?:phone|pad|pod) os ([\d_]+)/i),n=e?e[1].split("_").slice(0,2).join("."):"-1";return Number(n);},// visible for testing
	/** Parse User Agent to determine Android version. Returns -1 if not found. */e.qn=function(t){var e=t.match(/Android ([\d.]+)/i),n=e?e[1].split(".").slice(0,2).join("."):"-1";return Number(n);},/**
	     * Opens the specified database, creating or upgrading it if necessary.
	     */e.prototype.Wn=function(e){return t.__awaiter(this,void 0,void 0,function(){var n,r=this;return t.__generator(this,function(t){switch(t.label){case 0:return this.db?[3/*break*/,2]:(l("SimpleDb","Opening database:",this.name),n=this,[4/*yield*/,new Promise(function(t,n){// TODO(mikelehen): Investigate browser compatibility.
	// https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
	// suggests IE9 and older WebKit browsers handle upgrade
	// differently. They expect setVersion, as described here:
	// https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
	var i=indexedDB.open(r.name,r.version);i.onsuccess=function(e){var n=e.target.result;t(n);},i.onblocked=function(){n(new wr(e,"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));},i.onerror=function(t){var r=t.target.error;"VersionError"===r.name?n(new c(a.FAILED_PRECONDITION,"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")):n(new wr(e,r));},i.onupgradeneeded=function(t){l("SimpleDb",'Database "'+r.name+'" requires upgrade from version:',t.oldVersion);var e=t.target.result;r.Mn.createOrUpgrade(e,i.transaction,t.oldVersion,r.version).next(function(){l("SimpleDb","Database upgrade to version "+r.version+" complete");});};})]);case 1:n.db=t.sent(),t.label=2;case 2:return[2/*return*/,(this.jn&&(this.db.onversionchange=function(t){return r.jn(t);}),this.db)];}});});},e.prototype.Kn=function(t){this.jn=t,this.db&&(this.db.onversionchange=function(e){return t(e);});},e.prototype.runTransaction=function(e,n,r,i){return t.__awaiter(this,void 0,void 0,function(){var o,s,u,a,c;return t.__generator(this,function(h){switch(h.label){case 0:o="readonly"===n,s=0,u=function u(){var n,u,c,h,f;return t.__generator(this,function(t){switch(t.label){case 0:++s,t.label=1;case 1:return t.trys.push([1,4,,5]),[4/*yield*/,a.Wn(e)];case 2:// Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
	// fire), but still return the original transactionFnResult back to the
	// caller.
	return a.db=t.sent(),n=br.open(a.db,e,o?"readonly":"readwrite",r),u=i(n).catch(function(t){// Abort the transaction if there was an error.
	return n.abort(t),yr.reject(t);}).Fn(),c={},u.catch(function(){}),[4/*yield*/,n.Gn];case 3:return[2/*return*/,(c.value=(// Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
	// fire), but still return the original transactionFnResult back to the
	// caller.
	t.sent(),u),c)];case 4:return h=t.sent(),f="FirebaseError"!==h.name&&s<3,l("SimpleDb","Transaction failed with error:",h.message,"Retrying:",f),a.close(),f?[3/*break*/,5]:[2/*return*/,{value:Promise.reject(h)}];case 5:return[2/*return*/];}});},a=this,h.label=1;case 1:return[5/*yield**/,u()];case 2:if("object"==_typeof(c=h.sent()))return[2/*return*/,c.value];h.label=3;case 3:return[3/*break*/,1];case 4:return[2/*return*/];}});});},e.prototype.close=function(){this.db&&this.db.close(),this.db=void 0;},e;}(),mr=/** @class */function(){function t(t){this.zn=t,this.Hn=!1,this.Yn=null;}return Object.defineProperty(t.prototype,"Sn",{get:function get(){return this.Hn;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"Jn",{get:function get(){return this.Yn;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"cursor",{set:function set(t){this.zn=t;},enumerable:!1,configurable:!0}),/**
	     * This function can be called to stop iteration at any point.
	     */t.prototype.done=function(){this.Hn=!0;},/**
	     * This function can be called to skip to that next key, which could be
	     * an index or a primary key.
	     */t.prototype.Xn=function(t){this.Yn=t;},/**
	     * Delete the current cursor value from the object store.
	     *
	     * NOTE: You CANNOT do this with a keysOnly query.
	     */t.prototype.delete=function(){return Er(this.zn.delete());},t;}(),wr=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,a.UNAVAILABLE,"IndexedDB transaction '"+t+"' failed: "+n)||this).name="IndexedDbTransactionError",r;}return t.__extends(n,e),n;}(c);/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * A helper for running delayed tasks following an exponential backoff curve
	 * between attempts.
	 *
	 * Each delay is made up of a "base" delay which follows the exponential
	 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
	 * base delay. This prevents clients from accidentally synchronizing their
	 * delays causing spikes of load to the backend.
	 *//** Verifies whether `e` is an IndexedDbTransactionError. */function _r(t){// Use name equality, as instanceof checks on errors don't work with errors
	// that wrap other errors.
	return"IndexedDbTransactionError"===t.name;}/**
	 * Wraps an IDBTransaction and exposes a store() method to get a handle to a
	 * specific object store.
	 */var br=/** @class */function(){function t(t,e){var n=this;this.action=t,this.transaction=e,this.aborted=!1,/**
	             * A promise that resolves with the result of the IndexedDb transaction.
	             */this.Zn=new dr(),this.transaction.oncomplete=function(){n.Zn.resolve();},this.transaction.onabort=function(){e.error?n.Zn.reject(new wr(t,e.error)):n.Zn.resolve();},this.transaction.onerror=function(e){var r=Nr(e.target.error);n.Zn.reject(new wr(t,r));};}return t.open=function(e,n,r,i){try{return new t(n,e.transaction(i,r));}catch(e){throw new wr(n,e);}},Object.defineProperty(t.prototype,"Gn",{get:function get(){return this.Zn.promise;},enumerable:!1,configurable:!0}),t.prototype.abort=function(t){t&&this.Zn.reject(t),this.aborted||(l("SimpleDb","Aborting transaction:",t?t.message:"Client-initiated abort"),this.aborted=!0,this.transaction.abort());},/**
	     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
	     * operations performed on the SimpleDbStore happen within the context of this
	     * transaction and it cannot be used anymore once the transaction is
	     * completed.
	     *
	     * Note that we can't actually enforce that the KeyType and ValueType are
	     * correct, but they allow type safety through the rest of the consuming code.
	     */t.prototype.store=function(t){var e=this.transaction.objectStore(t);return new Ir(e);},t;}(),Ir=/** @class */function(){function t(t){this.store=t;}return t.prototype.put=function(t,e){var n;return void 0!==e?(l("SimpleDb","PUT",this.store.name,t,e),n=this.store.put(e,t)):(l("SimpleDb","PUT",this.store.name,"<auto-key>",t),n=this.store.put(t)),Er(n);},/**
	     * Adds a new value into an Object Store and returns the new key. Similar to
	     * IndexedDb's `add()`, this method will fail on primary key collisions.
	     *
	     * @param value The object to write.
	     * @return The key of the value to add.
	     */t.prototype.add=function(t){return l("SimpleDb","ADD",this.store.name,t,t),Er(this.store.add(t));},/**
	     * Gets the object with the specified key from the specified store, or null
	     * if no object exists with the specified key.
	     *
	     * @key The key of the object to get.
	     * @return The object with the specified key or null if no object exists.
	     */t.prototype.get=function(t){var e=this;// We're doing an unsafe cast to ValueType.
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	return Er(this.store.get(t)).next(function(n){// Normalize nonexistence to null.
	return void 0===n&&(n=null),l("SimpleDb","GET",e.store.name,t,n),n;});},t.prototype.delete=function(t){return l("SimpleDb","DELETE",this.store.name,t),Er(this.store.delete(t));},/**
	     * If we ever need more of the count variants, we can add overloads. For now,
	     * all we need is to count everything in a store.
	     *
	     * Returns the number of rows in the store.
	     */t.prototype.count=function(){return l("SimpleDb","COUNT",this.store.name),Er(this.store.count());},t.prototype.ts=function(t,e){var n=this.cursor(this.options(t,e)),r=[];return this.es(n,function(t,e){r.push(e);}).next(function(){return r;});},t.prototype.ns=function(t,e){l("SimpleDb","DELETE ALL",this.store.name);var n=this.options(t,e);n.ss=!1;var r=this.cursor(n);return this.es(r,function(t,e,n){return n.delete();});},t.prototype.rs=function(t,e){var n;e?n=t:(n={},e=t);var r=this.cursor(n);return this.es(r,e);},/**
	     * Iterates over a store, but waits for the given callback to complete for
	     * each entry before iterating the next entry. This allows the callback to do
	     * asynchronous work to determine if this iteration should continue.
	     *
	     * The provided callback should return `true` to continue iteration, and
	     * `false` otherwise.
	     */t.prototype.os=function(t){var e=this.cursor({});return new yr(function(n,r){e.onerror=function(t){var e=Nr(t.target.error);r(e);},e.onsuccess=function(e){var r=e.target.result;r?t(r.primaryKey,r.value).next(function(t){t?r.continue():n();}):n();};});},t.prototype.es=function(t,e){var n=[];return new yr(function(r,i){t.onerror=function(t){i(t.target.error);},t.onsuccess=function(t){var i=t.target.result;if(i){var o=new mr(i),s=e(i.primaryKey,i.value,o);if(s instanceof yr){var u=s.catch(function(t){return o.done(),yr.reject(t);});n.push(u);}o.Sn?r():null===o.Jn?i.continue():i.continue(o.Jn);}else r();};}).next(function(){return yr.$n(n);});},t.prototype.options=function(t,e){var n=void 0;return void 0!==t&&("string"==typeof t?n=t:e=t),{index:n,range:e};},t.prototype.cursor=function(t){var e="next";if(t.reverse&&(e="prev"),t.index){var n=this.store.index(t.index);return t.ss?n.openKeyCursor(t.range,e):n.openCursor(t.range,e);}return this.store.openCursor(t.range,e);},t;}();/**
	 * A wrapper around an IDBObjectStore providing an API that:
	 *
	 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
	 * methods for acting against the object store.
	 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
	 * method return a PersistencePromise instead.
	 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
	 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
	 *//**
	 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
	 * handlers to resolve / reject the PersistencePromise as appropriate.
	 */function Er(t){return new yr(function(e,n){t.onsuccess=function(t){var n=t.target.result;e(n);},t.onerror=function(t){var e=Nr(t.target.error);n(e);};});}// Guard so we only report the error once.
	var Tr=!1;function Nr(t){var e=gr.On(r.getUA());if(e>=12.2&&e<13){var n="An internal error was encountered in the Indexed Database server";if(t.message.indexOf(n)>=0){// Wrap error in a more descriptive one.
	var i=new c("internal","IOS_INDEXEDDB_BUG1: IndexedDb has thrown '"+n+"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");return Tr||(Tr=!0,// Throw a global exception outside of this promise chain, for the user to
	// potentially catch.
	setTimeout(function(){throw i;},0)),i;}}return t;}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** The Platform's 'window' implementation or null if not available. */function Ar(){// `window` is not always available, e.g. in ReactNative and WebWorkers.
	// eslint-disable-next-line no-restricted-globals
	return"undefined"!=typeof window?window:null;}/** The Platform's 'document' implementation or null if not available. */function Sr(){// `document` is not always available, e.g. in ReactNative and WebWorkers.
	// eslint-disable-next-line no-restricted-globals
	return"undefined"!=typeof document?document:null;}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Represents an operation scheduled to be run in the future on an AsyncQueue.
	 *
	 * It is created via DelayedOperation.createAndSchedule().
	 *
	 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
	 *
	 * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type
	 * in newer versions of TypeScript defines `finally`, which is not available in
	 * IE.
	 */var Dr=/** @class */function(){function t(t,e,n,r,i){this.cs=t,this.dn=e,this.us=n,this.op=r,this.hs=i,this.ls=new dr(),this.then=this.ls.promise.then.bind(this.ls.promise),// It's normal for the deferred promise to be canceled (due to cancellation)
	// and so we attach a dummy catch callback to avoid
	// 'UnhandledPromiseRejectionWarning' log spam.
	this.ls.promise.catch(function(t){})/**
	     * Creates and returns a DelayedOperation that has been scheduled to be
	     * executed on the provided asyncQueue after the provided delayMs.
	     *
	     * @param asyncQueue The queue to schedule the operation on.
	     * @param id A Timer ID identifying the type of operation this is.
	     * @param delayMs The delay (ms) before the operation should be scheduled.
	     * @param op The operation to run.
	     * @param removalCallback A callback to be called synchronously once the
	     *   operation is executed or canceled, notifying the AsyncQueue to remove it
	     *   from its delayedOperations list.
	     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
	     *   the DelayedOperation class public.
	     */;}return t._s=function(e,n,r,i,o){var s=new t(e,n,Date.now()+r,i,o);return s.start(r),s;},/**
	     * Starts the timer. This is called immediately after construction by
	     * createAndSchedule().
	     */t.prototype.start=function(t){var e=this;this.fs=setTimeout(function(){return e.ds();},t);},/**
	     * Queues the operation to run immediately (if it hasn't already been run or
	     * canceled).
	     */t.prototype.pn=function(){return this.ds();},/**
	     * Cancels the operation if it hasn't already been executed or canceled. The
	     * promise will be rejected.
	     *
	     * As long as the operation has not yet been run, calling cancel() provides a
	     * guarantee that the operation will not be run.
	     */t.prototype.cancel=function(t){null!==this.fs&&(this.clearTimeout(),this.ls.reject(new c(a.CANCELLED,"Operation cancelled"+(t?": "+t:""))));},t.prototype.ds=function(){var t=this;this.cs.ws(function(){return null!==t.fs?(t.clearTimeout(),t.op().then(function(e){return t.ls.resolve(e);})):Promise.resolve();});},t.prototype.clearTimeout=function(){null!==this.fs&&(this.hs(this),clearTimeout(this.fs),this.fs=null);},t;}(),xr=/** @class */function(){function e(){var t=this;// The last promise in the queue.
	this.Ts=Promise.resolve(),// A list of retryable operations. Retryable operations are run in order and
	// retried with backoff.
	this.Es=[],// Is this AsyncQueue being shut down? Once it is set to true, it will not
	// be changed again.
	this.Is=!1,// Operations scheduled to be queued in the future. Operations are
	// automatically removed after they are run or canceled.
	this.As=[],// visible for testing
	this.Rs=null,// Flag set while there's an outstanding AsyncQueue operation, used for
	// assertion sanity-checks.
	this.gs=!1,// List of TimerIds to fast-forward delays for.
	this.Ps=[],// Backoff timer used to schedule retries for retryable operations
	this.ys=new vr(this,"async_queue_retry"/* AsyncQueueRetry */),// Visibility handler that triggers an immediate retry of all retryable
	// operations. Meant to speed up recovery when we regain file system access
	// after page comes into foreground.
	this.Vs=function(){var e=Sr();e&&l("AsyncQueue","Visibility state changed to  ",e.visibilityState),t.ys.Vn();};var e=Sr();e&&"function"==typeof e.addEventListener&&e.addEventListener("visibilitychange",this.Vs);}return Object.defineProperty(e.prototype,"ps",{// Is this AsyncQueue being shut down? If true, this instance will not enqueue
	// any new operations, Promises from enqueue requests will not resolve.
	get:function get(){return this.Is;},enumerable:!1,configurable:!0}),/**
	     * Adds a new operation to the queue without waiting for it to complete (i.e.
	     * we ignore the Promise result).
	     */e.prototype.ws=function(t){// eslint-disable-next-line @typescript-eslint/no-floating-promises
	this.enqueue(t);},/**
	     * Regardless if the queue has initialized shutdown, adds a new operation to the
	     * queue without waiting for it to complete (i.e. we ignore the Promise result).
	     */e.prototype.bs=function(t){this.vs(),// eslint-disable-next-line @typescript-eslint/no-floating-promises
	this.Ss(t);},/**
	     * Initialize the shutdown of this queue. Once this method is called, the
	     * only possible way to request running an operation is through
	     * `enqueueEvenWhileRestricted()`.
	     */e.prototype.Ds=function(){if(!this.Is){this.Is=!0;var t=Sr();t&&"function"==typeof t.removeEventListener&&t.removeEventListener("visibilitychange",this.Vs);}},/**
	     * Adds a new operation to the queue. Returns a promise that will be resolved
	     * when the promise returned by the new operation is (with its value).
	     */e.prototype.enqueue=function(t){return this.vs(),this.Is?new Promise(function(t){}):this.Ss(t);},/**
	     * Enqueue a retryable operation.
	     *
	     * A retryable operation is rescheduled with backoff if it fails with a
	     * IndexedDbTransactionError (the error type used by SimpleDb). All
	     * retryable operations are executed in order and only run if all prior
	     * operations were retried successfully.
	     */e.prototype.Cs=function(t){var e=this;this.ws(function(){return e.Es.push(t),e.Ns();});},/**
	     * Runs the next operation from the retryable queue. If the operation fails,
	     * reschedules with backoff.
	     */e.prototype.Ns=function(){return t.__awaiter(this,void 0,void 0,function(){var e,n=this;return t.__generator(this,function(t){switch(t.label){case 0:if(0===this.Es.length)return[3/*break*/,5];t.label=1;case 1:return t.trys.push([1,3,,4]),[4/*yield*/,this.Es[0]()];case 2:return t.sent(),this.Es.shift(),this.ys.reset(),[3/*break*/,4];case 3:if(!_r(e=t.sent()))throw e;// Failure will be handled by AsyncQueue
	return l("AsyncQueue","Operation failed with retryable error: "+e),[3/*break*/,4];case 4:this.Es.length>0&&// If there are additional operations, we re-schedule `retryNextOp()`.
	// This is necessary to run retryable operations that failed during
	// their initial attempt since we don't know whether they are already
	// enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`
	// needs to  be re-run, we will run `op1`, `op1`, `op2` using the
	// already enqueued calls to `retryNextOp()`. `op3()` will then run in the
	// call scheduled here.
	// Since `backoffAndRun()` cancels an existing backoff and schedules a
	// new backoff on every call, there is only ever a single additional
	// operation in the queue.
	this.ys.gn(function(){return n.Ns();}),t.label=5;case 5:return[2/*return*/];}});});},e.prototype.Ss=function(t){var e=this,n=this.Ts.then(function(){return e.gs=!0,t().catch(function(t){// Re-throw the error so that this.tail becomes a rejected Promise and
	// all further attempts to chain (via .then) will just short-circuit
	// and return the rejected Promise.
	throw e.Rs=t,e.gs=!1,p("INTERNAL UNHANDLED ERROR: ",/**
	 * Chrome includes Error.message in Error.stack. Other browsers do not.
	 * This returns expected output of message + stack when available.
	 * @param error Error or FirestoreError
	 */function(t){var e=t.message||"";return t.stack&&(e=t.stack.includes(t.message)?t.stack:t.message+"\n"+t.stack),e;}(t)),t;}).then(function(t){return e.gs=!1,t;});});return this.Ts=n,n;},/**
	     * Schedules an operation to be queued on the AsyncQueue once the specified
	     * `delayMs` has elapsed. The returned DelayedOperation can be used to cancel
	     * or fast-forward the operation prior to its running.
	     */e.prototype.yn=function(t,e,n){var r=this;this.vs(),// Fast-forward delays for timerIds that have been overriden.
	this.Ps.indexOf(t)>-1&&(e=0);var i=Dr._s(this,t,e,n,function(t){return r.Fs(t);});return this.As.push(i),i;},e.prototype.vs=function(){this.Rs&&y();},/**
	     * Verifies there's an operation currently in-progress on the AsyncQueue.
	     * Unfortunately we can't verify that the running code is in the promise chain
	     * of that operation, so this isn't a foolproof check, but it should be enough
	     * to catch some bugs.
	     */e.prototype.xs=function(){},/**
	     * Waits until all currently queued tasks are finished executing. Delayed
	     * operations are not run.
	     */e.prototype.$s=function(){return t.__awaiter(this,void 0,void 0,function(){var e;return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,e=this.Ts];case 1:t.sent(),t.label=2;case 2:if(e!==this.Ts)return[3/*break*/,0];t.label=3;case 3:return[2/*return*/];}});});},/**
	     * For Tests: Determine if a delayed operation with a particular TimerId
	     * exists.
	     */e.prototype.ks=function(t){for(var e=0,n=this.As;e<n.length;e++){if(n[e].dn===t)return!0;}return!1;},/**
	     * For Tests: Runs some or all delayed operations early.
	     *
	     * @param lastTimerId Delayed operations up to and including this TimerId will
	     *  be drained. Pass TimerId.All to run all delayed operations.
	     * @returns a Promise that resolves once all operations have been run.
	     */e.prototype.Ms=function(t){var e=this;// Note that draining may generate more delayed ops, so we do that first.
	return this.$s().then(function(){// Run ops in the same order they'd run if they ran naturally.
	e.As.sort(function(t,e){return t.us-e.us;});for(var n=0,r=e.As;n<r.length;n++){var i=r[n];if(i.pn(),"all"/* All */!==t&&i.dn===t)break;}return e.$s();});},/**
	     * For Tests: Skip all subsequent delays for a timer id.
	     */e.prototype.Os=function(t){this.Ps.push(t);},/** Called once a DelayedOperation is run or canceled. */e.prototype.Fs=function(t){// NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
	var e=this.As.indexOf(t);this.As.splice(e,1);},e;}();/**
	 * Returns a FirestoreError that can be surfaced to the user if the provided
	 * error is an IndexedDbTransactionError. Re-throws the error otherwise.
	 */function Lr(t,e){if(p("AsyncQueue",e+": "+t),_r(t))return new c(a.UNAVAILABLE,e+": "+t);throw t;}var kr=function kr(){this.Ls=void 0,this.listeners=[];},Rr=function Rr(){this.Bs=new it(function(t){return Hn(t);},Qn),this.onlineState="Unknown"/* Unknown */,this.qs=new Set();};function Or(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u,a,c;return t.__generator(this,function(t){switch(t.label){case 0:if(r=m(e),i=n.query,o=!1,(s=r.Bs.get(i))||(o=!0,s=new kr()),!o)return[3/*break*/,4];t.label=1;case 1:return t.trys.push([1,3,,4]),u=s,[4/*yield*/,r.Us(i)];case 2:return u.Ls=t.sent(),[3/*break*/,4];case 3:return a=t.sent(),c=Lr(a,"Initialization of query '"+Yn(n.query)+"' failed"),[2/*return*/,void n.onError(c)];case 4:return r.Bs.set(i,s),s.listeners.push(n),// Run global snapshot listeners if a consistent snapshot has been emitted.
	n.Qs(r.onlineState),s.Ls&&n.Ws(s.Ls)&&Cr(r),[2/*return*/];}});});}function Pr(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u;return t.__generator(this,function(t){return r=m(e),i=n.query,o=!1,(s=r.Bs.get(i))&&(u=s.listeners.indexOf(n))>=0&&(s.listeners.splice(u,1),o=0===s.listeners.length),o?[2/*return*/,(r.Bs.delete(i),r.js(i))]:[2/*return*/];});});}function Vr(t,e){for(var n=m(t),r=!1,i=0,o=e;i<o.length;i++){var s=o[i],u=s.query,a=n.Bs.get(u);if(a){for(var c=0,h=a.listeners;c<h.length;c++){h[c].Ws(s)&&(r=!0);}a.Ls=s;}}r&&Cr(n);}function Ur(t,e,n){var r=m(t),i=r.Bs.get(e);if(i)for(var o=0,s=i.listeners;o<s.length;o++){s[o].onError(n);}// Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
	// after an error.
	r.Bs.delete(e);}// Call all global snapshot listeners that have been set.
	function Cr(t){t.qs.forEach(function(t){t.next();});}/**
	 * QueryListener takes a series of internal view snapshots and determines
	 * when to raise the event.
	 *
	 * It uses an Observer to dispatch events.
	 */var Fr=/** @class */function(){function t(t,e,n){this.query=t,this.Ks=e,/**
	             * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
	             * observer. This flag is set to true once we've actually raised an event.
	             */this.Gs=!1,this.zs=null,this.onlineState="Unknown"/* Unknown */,this.options=n||{}/**
	     * Applies the new ViewSnapshot to this listener, raising a user-facing event
	     * if applicable (depending on what changed, whether the user has opted into
	     * metadata-only changes, etc.). Returns true if a user-facing event was
	     * indeed raised.
	     */;}return t.prototype.Ws=function(t){if(!this.options.includeMetadataChanges){for(// Remove the metadata only changes.
	var e=[],n=0,r=t.docChanges;n<r.length;n++){var i=r[n];3/* Metadata */!==i.type&&e.push(i);}t=new Ft(t.query,t.docs,t.Qt,e,t.Wt,t.fromCache,t.jt,/* excludesMetadataChanges= */!0);}var o=!1;return this.Gs?this.Hs(t)&&(this.Ks.next(t),o=!0):this.Ys(t,this.onlineState)&&(this.Js(t),o=!0),this.zs=t,o;},t.prototype.onError=function(t){this.Ks.error(t);},/** Returns whether a snapshot was raised. */t.prototype.Qs=function(t){this.onlineState=t;var e=!1;return this.zs&&!this.Gs&&this.Ys(this.zs,t)&&(this.Js(this.zs),e=!0),e;},t.prototype.Ys=function(t,e){// Always raise the first event when we're synced
	if(!t.fromCache)return!0;// NOTE: We consider OnlineState.Unknown as online (it should become Offline
	// or Online if we wait long enough).
	var n="Offline"/* Offline */!==e;// Don't raise the event if we're online, aren't synced yet (checked
	// above) and are waiting for a sync.
	return!(this.options.Xs&&n||t.docs.m()&&"Offline"/* Offline */!==e);// Raise data from cache if we have any documents or we are offline
	},t.prototype.Hs=function(t){// We don't need to handle includeDocumentMetadataChanges here because
	// the Metadata only changes have already been stripped out if needed.
	// At this point the only changes we will see are the ones we should
	// propagate.
	if(t.docChanges.length>0)return!0;var e=this.zs&&this.zs.hasPendingWrites!==t.hasPendingWrites;return!(!t.jt&&!e)&&!0===this.options.includeMetadataChanges;// Generally we should have hit one of the cases above, but it's possible
	// to get here if there were only metadata docChanges and they got
	// stripped out.
	},t.prototype.Js=function(t){t=Ft.Gt(t.query,t.docs,t.Wt,t.fromCache),this.Gs=!0,this.Ks.next(t);},t;}(),Mr=/** @class */function(){function t(t){this.uid=t;}return t.prototype.Zs=function(){return null!=this.uid;},/**
	     * Returns a key representing this user, suitable for inclusion in a
	     * dictionary.
	     */t.prototype.ti=function(){return this.Zs()?"uid:"+this.uid:"anonymous-user";},t.prototype.isEqual=function(t){return t.uid===this.uid;},t;}();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Simple wrapper around a nullable UID. Mostly exists to make code more
	 * readable.
	 *//** A user with a null UID. */Mr.UNAUTHENTICATED=new Mr(null),// TODO(mikelehen): Look into getting a proper uid-equivalent for
	// non-FirebaseAuth providers.
	Mr.ei=new Mr("google-credentials-uid"),Mr.ni=new Mr("first-party-uid");/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to
	 * exceed. All subsequent calls to next will return increasing values. If provided with a
	 * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as
	 * well as write out sequence numbers that it produces via `next()`.
	 */var qr=/** @class */function(){function t(t,e){var n=this;this.previousValue=t,e&&(e.si=function(t){return n.ii(t);},this.ri=function(t){return e.oi(t);});}return t.prototype.ii=function(t){return this.previousValue=Math.max(t,this.previousValue),this.previousValue;},t.prototype.next=function(){var t=++this.previousValue;return this.ri&&this.ri(t),t;},t;}();/** Assembles the key for a client state in WebStorage */function jr(t,e){return"firestore_clients_"+t+"_"+e;}// The format of the WebStorage key that stores the mutation state is:
	//     firestore_mutations_<persistence_prefix>_<batch_id>
	//     (for unauthenticated users)
	// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
	// 'user_uid' is last to avoid needing to escape '_' characters that it might
	// contain.
	/** Assembles the key for a mutation batch in WebStorage */function Gr(t,e,n){var r="firestore_mutations_"+t+"_"+n;return e.Zs()&&(r+="_"+e.uid),r;}// The format of the WebStorage key that stores a query target's metadata is:
	//     firestore_targets_<persistence_prefix>_<target_id>
	/** Assembles the key for a query state in WebStorage */function zr(t,e){return"firestore_targets_"+t+"_"+e;}// The WebStorage prefix that stores the primary tab's online state. The
	// format of the key is:
	//     firestore_online_state_<persistence_prefix>
	/**
	 * Holds the state of a mutation batch, including its user ID, batch ID and
	 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
	 */// Visible for testing
	qr.ai=-1;var Br=/** @class */function(){function t(t,e,n,r){this.user=t,this.batchId=e,this.state=n,this.error=r/**
	     * Parses a MutationMetadata from its JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */;}return t.ci=function(e,n,r){var i=JSON.parse(r),o="object"==(typeof i==="undefined"?"undefined":_typeof(i))&&-1!==["pending","acknowledged","rejected"].indexOf(i.state)&&(void 0===i.error||"object"==_typeof(i.error)),s=void 0;return o&&i.error&&(o="string"==typeof i.error.message&&"string"==typeof i.error.code)&&(s=new c(i.error.code,i.error.message)),o?new t(e,n,i.state,s):(p("SharedClientState","Failed to parse mutation state for ID '"+n+"': "+r),null);},t.prototype.ui=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t);},t;}(),Wr=/** @class */function(){function t(t,e,n){this.targetId=t,this.state=e,this.error=n/**
	     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */;}return t.ci=function(e,n){var r=JSON.parse(n),i="object"==(typeof r==="undefined"?"undefined":_typeof(r))&&-1!==["not-current","current","rejected"].indexOf(r.state)&&(void 0===r.error||"object"==_typeof(r.error)),o=void 0;return i&&r.error&&(i="string"==typeof r.error.message&&"string"==typeof r.error.code)&&(o=new c(r.error.code,r.error.message)),i?new t(e,r.state,o):(p("SharedClientState","Failed to parse target state for ID '"+e+"': "+n),null);},t.prototype.ui=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t);},t;}(),Kr=/** @class */function(){function t(t,e){this.clientId=t,this.activeTargetIds=e/**
	     * Parses a RemoteClientState from the JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */;}return t.ci=function(e,n){for(var r=JSON.parse(n),i="object"==(typeof r==="undefined"?"undefined":_typeof(r))&&r.activeTargetIds instanceof Array,o=Vt(),s=0;i&&s<r.activeTargetIds.length;++s){i=ct(r.activeTargetIds[s]),o=o.add(r.activeTargetIds[s]);}return i?new t(e,o):(p("SharedClientState","Failed to parse client data for instance '"+e+"': "+n),null);},t;}(),Qr=/** @class */function(){function t(t,e){this.clientId=t,this.onlineState=e/**
	     * Parses a SharedOnlineState from its JSON representation in WebStorage.
	     * Logs a warning and returns null if the format of the data is not valid.
	     */;}return t.ci=function(e){var n=JSON.parse(e);return"object"==(typeof n==="undefined"?"undefined":_typeof(n))&&-1!==["Unknown","Online","Offline"].indexOf(n.onlineState)&&"string"==typeof n.clientId?new t(n.clientId,n.onlineState):(p("SharedClientState","Failed to parse online state: "+e),null);},t;}(),Hr=/** @class */function(){function t(){this.activeTargetIds=Vt();}return t.prototype.hi=function(t){this.activeTargetIds=this.activeTargetIds.add(t);},t.prototype.li=function(t){this.activeTargetIds=this.activeTargetIds.delete(t);},/**
	     * Converts this entry into a JSON-encoded format we can use for WebStorage.
	     * Does not encode `clientId` as it is part of the key in WebStorage.
	     */t.prototype.ui=function(){var t={activeTargetIds:this.activeTargetIds.A(),updateTimeMs:Date.now()};return JSON.stringify(t);},t;}(),Yr=/** @class */function(){function e(t,e,n,r,i){this.window=t,this.fn=e,this.persistenceKey=n,this._i=r,this.fi=null,this.di=null,this.si=null,this.wi=this.mi.bind(this),this.Ti=new bt(H),this.Ei=!1,/**
	             * Captures WebStorage events that occur before `start()` is called. These
	             * events are replayed once `WebStorageSharedClientState` is started.
	             */this.Ii=[];// Escape the special characters mentioned here:
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
	var o=n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");this.storage=this.window.localStorage,this.currentUser=i,this.Ai=jr(this.persistenceKey,this._i),this.Ri=/** Assembles the key for the current sequence number. */function(t){return"firestore_sequence_number_"+t;}(this.persistenceKey),this.Ti=this.Ti.ot(this._i,new Hr()),this.gi=new RegExp("^firestore_clients_"+o+"_([^_]*)$"),this.Pi=new RegExp("^firestore_mutations_"+o+"_(\\d+)(?:_(.*))?$"),this.yi=new RegExp("^firestore_targets_"+o+"_(\\d+)$"),this.Vi=/** Assembles the key for the online state of the primary tab. */function(t){return"firestore_online_state_"+t;}(this.persistenceKey),// Rather than adding the storage observer during start(), we add the
	// storage observer during initialization. This ensures that we collect
	// events before other components populate their initial state (during their
	// respective start() calls). Otherwise, we might for example miss a
	// mutation that is added after LocalStore's start() processed the existing
	// mutations but before we observe WebStorage events.
	this.window.addEventListener("storage",this.wi);}/** Returns 'true' if WebStorage is available in the current environment. */return e.Ln=function(t){return!(!t||!t.localStorage);},e.prototype.start=function(){return t.__awaiter(this,void 0,void 0,function(){var e,n,r,i,o,s,u,a,c,h,f,l=this;return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,this.fi.pi()];case 1:for(e=t.sent(),n=0,r=e;n<r.length;n++){(i=r[n])!==this._i&&(o=this.getItem(jr(this.persistenceKey,i)))&&(s=Kr.ci(i,o))&&(this.Ti=this.Ti.ot(s.clientId,s));}for(this.bi(),(u=this.storage.getItem(this.Vi))&&(a=this.vi(u))&&this.Si(a),c=0,h=this.Ii;c<h.length;c++){f=h[c],this.mi(f);}return this.Ii=[],// Register a window unload hook to remove the client metadata entry from
	// WebStorage even if `shutdown()` was not called.
	this.window.addEventListener("unload",function(){return l.Di();}),this.Ei=!0,[2/*return*/];}});});},e.prototype.oi=function(t){this.setItem(this.Ri,JSON.stringify(t));},e.prototype.Ci=function(){return this.Ni(this.Ti);},e.prototype.Fi=function(t){var e=!1;return this.Ti.forEach(function(n,r){r.activeTargetIds.has(t)&&(e=!0);}),e;},e.prototype.xi=function(t){this.$i(t,"pending");},e.prototype.ki=function(t,e,n){this.$i(t,e,n),// Once a final mutation result is observed by other clients, they no longer
	// access the mutation's metadata entry. Since WebStorage replays events
	// in order, it is safe to delete the entry right after updating it.
	this.Mi(t);},e.prototype.Oi=function(t){var e="not-current";// Lookup an existing query state if the target ID was already registered
	// by another tab
	if(this.Fi(t)){var n=this.storage.getItem(zr(this.persistenceKey,t));if(n){var r=Wr.ci(t,n);r&&(e=r.state);}}return this.Li.hi(t),this.bi(),e;},e.prototype.Bi=function(t){this.Li.li(t),this.bi();},e.prototype.qi=function(t){return this.Li.activeTargetIds.has(t);},e.prototype.Ui=function(t){this.removeItem(zr(this.persistenceKey,t));},e.prototype.Qi=function(t,e,n){this.Wi(t,e,n);},e.prototype.ji=function(t,e,n){var r=this;e.forEach(function(t){r.Mi(t);}),this.currentUser=t,n.forEach(function(t){r.xi(t);});},e.prototype.Ki=function(t){this.Gi(t);},e.prototype.Di=function(){this.Ei&&(this.window.removeEventListener("storage",this.wi),this.removeItem(this.Ai),this.Ei=!1);},e.prototype.getItem=function(t){var e=this.storage.getItem(t);return l("SharedClientState","READ",t,e),e;},e.prototype.setItem=function(t,e){l("SharedClientState","SET",t,e),this.storage.setItem(t,e);},e.prototype.removeItem=function(t){l("SharedClientState","REMOVE",t),this.storage.removeItem(t);},e.prototype.mi=function(e){var n=this,r=e;// Note: The function is typed to take Event to be interface-compatible with
	// `Window.addEventListener`.
	if(r.storageArea===this.storage){if(l("SharedClientState","EVENT",r.key,r.newValue),r.key===this.Ai)return void p("Received WebStorage notification for local change. Another client might have garbage-collected our state");this.fn.Cs(function(){return t.__awaiter(n,void 0,void 0,function(){var e,n,i,o,s,u;return t.__generator(this,function(t){if(this.Ei){if(null!==r.key)if(this.gi.test(r.key)){if(null==r.newValue)return e=this.zi(r.key),[2/*return*/,this.Hi(e,null)];if(n=this.Yi(r.key,r.newValue))return[2/*return*/,this.Hi(n.clientId,n)];}else if(this.Pi.test(r.key)){if(null!==r.newValue&&(i=this.Ji(r.key,r.newValue)))return[2/*return*/,this.Xi(i)];}else if(this.yi.test(r.key)){if(null!==r.newValue&&(o=this.Zi(r.key,r.newValue)))return[2/*return*/,this.tr(o)];}else if(r.key===this.Vi){if(null!==r.newValue&&(s=this.vi(r.newValue)))return[2/*return*/,this.Si(s)];}else r.key===this.Ri&&(u=function(t){var e=qr.ai;if(null!=t)try{var n=JSON.parse(t);g("number"==typeof n),e=n;}catch(t){p("SharedClientState","Failed to read sequence number from WebStorage",t);}return e;}(r.newValue))!==qr.ai&&this.si(u);}else this.Ii.push(r);return[2/*return*/];});});});}},Object.defineProperty(e.prototype,"Li",{get:function get(){return this.Ti.get(this._i);},enumerable:!1,configurable:!0}),e.prototype.bi=function(){this.setItem(this.Ai,this.Li.ui());},e.prototype.$i=function(t,e,n){var r=new Br(this.currentUser,t,e,n),i=Gr(this.persistenceKey,this.currentUser,t);this.setItem(i,r.ui());},e.prototype.Mi=function(t){var e=Gr(this.persistenceKey,this.currentUser,t);this.removeItem(e);},e.prototype.Gi=function(t){var e={clientId:this._i,onlineState:t};this.storage.setItem(this.Vi,JSON.stringify(e));},e.prototype.Wi=function(t,e,n){var r=zr(this.persistenceKey,t),i=new Wr(t,e,n);this.setItem(r,i.ui());},/**
	     * Parses a client state key in WebStorage. Returns null if the key does not
	     * match the expected key format.
	     */e.prototype.zi=function(t){var e=this.gi.exec(t);return e?e[1]:null;},/**
	     * Parses a client state in WebStorage. Returns 'null' if the value could not
	     * be parsed.
	     */e.prototype.Yi=function(t,e){var n=this.zi(t);return Kr.ci(n,e);},/**
	     * Parses a mutation batch state in WebStorage. Returns 'null' if the value
	     * could not be parsed.
	     */e.prototype.Ji=function(t,e){var n=this.Pi.exec(t),r=Number(n[1]),i=void 0!==n[2]?n[2]:null;return Br.ci(new Mr(i),r,e);},/**
	     * Parses a query target state from WebStorage. Returns 'null' if the value
	     * could not be parsed.
	     */e.prototype.Zi=function(t,e){var n=this.yi.exec(t),r=Number(n[1]);return Wr.ci(r,e);},/**
	     * Parses an online state from WebStorage. Returns 'null' if the value
	     * could not be parsed.
	     */e.prototype.vi=function(t){return Qr.ci(t);},e.prototype.Xi=function(e){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){return e.user.uid===this.currentUser.uid?[2/*return*/,this.fi.er(e.batchId,e.state,e.error)]:(l("SharedClientState","Ignoring mutation for non-active user "+e.user.uid),[2/*return*/]);});});},e.prototype.tr=function(t){return this.fi.nr(t.targetId,t.state,t.error);},e.prototype.Hi=function(t,e){var n=this,r=e?this.Ti.ot(t,e):this.Ti.remove(t),i=this.Ni(this.Ti),o=this.Ni(r),s=[],u=[];return o.forEach(function(t){i.has(t)||s.push(t);}),i.forEach(function(t){o.has(t)||u.push(t);}),this.fi.sr(s,u).then(function(){n.Ti=r;});},e.prototype.Si=function(t){// We check whether the client that wrote this online state is still active
	// by comparing its client ID to the list of clients kept active in
	// IndexedDb. If a client does not update their IndexedDb client state
	// within 5 seconds, it is considered inactive and we don't emit an online
	// state event.
	this.Ti.get(t.clientId)&&this.di(t.onlineState);},e.prototype.Ni=function(t){var e=Vt();return t.forEach(function(t,n){e=e.kt(n.activeTargetIds);}),e;},e;}(),$r=/** @class */function(){function t(){this.ir=new Hr(),this.rr={},this.di=null,this.si=null;}return t.prototype.xi=function(t){// No op.
	},t.prototype.ki=function(t,e,n){// No op.
	},t.prototype.Oi=function(t){return this.ir.hi(t),this.rr[t]||"not-current";},t.prototype.Qi=function(t,e,n){this.rr[t]=e;},t.prototype.Bi=function(t){this.ir.li(t);},t.prototype.qi=function(t){return this.ir.activeTargetIds.has(t);},t.prototype.Ui=function(t){delete this.rr[t];},t.prototype.Ci=function(){return this.ir.activeTargetIds;},t.prototype.Fi=function(t){return this.ir.activeTargetIds.has(t);},t.prototype.start=function(){return this.ir=new Hr(),Promise.resolve();},t.prototype.ji=function(t,e,n){// No op.
	},t.prototype.Ki=function(t){// No op.
	},t.prototype.Di=function(){},t.prototype.oi=function(t){},t;}(),Xr=/** @class */function(){/**
	     * @param batchId The unique ID of this mutation batch.
	     * @param localWriteTime The original write time of this mutation.
	     * @param baseMutations Mutations that are used to populate the base
	     * values when this mutation is applied locally. This can be used to locally
	     * overwrite values that are persisted in the remote document cache. Base
	     * mutations are never sent to the backend.
	     * @param mutations The user-provided mutations in this mutation batch.
	     * User-provided mutations are applied both locally and remotely on the
	     * backend.
	     */function t(t,e,n,r){this.batchId=t,this.ar=e,this.baseMutations=n,this.mutations=r/**
	     * Applies all the mutations in this MutationBatch to the specified document
	     * to create a new remote document
	     *
	     * @param docKey The key of the document to apply mutations to.
	     * @param maybeDoc The document to apply mutations to.
	     * @param batchResult The result of applying the MutationBatch to the
	     * backend.
	     */;}return t.prototype.cr=function(t,e,n){for(var r=n.ur,i=0;i<this.mutations.length;i++){var o=this.mutations[i];o.key.isEqual(t)&&(e=dn(o,e,r[i]));}return e;},/**
	     * Computes the local view of a document given all the mutations in this
	     * batch.
	     *
	     * @param docKey The key of the document to apply mutations to.
	     * @param maybeDoc The document to apply mutations to.
	     */t.prototype.hr=function(t,e){// First, apply the base state. This allows us to apply non-idempotent
	// transform against a consistent set of values.
	for(var n=0,r=this.baseMutations;n<r.length;n++){var i=r[n];i.key.isEqual(t)&&(e=vn(i,e,e,this.ar));}// Second, apply all user-provided mutations.
	for(var o=e,s=0,u=this.mutations;s<u.length;s++){var a=u[s];a.key.isEqual(t)&&(e=vn(a,e,o,this.ar));}return e;},/**
	     * Computes the local view for all provided documents given the mutations in
	     * this batch.
	     */t.prototype.lr=function(t){var e=this,n=t;// TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
	// directly (as done in `applyToLocalView()`), we can reduce the complexity
	// to O(n).
	return this.mutations.forEach(function(r){var i=e.hr(r.key,t.get(r.key));i&&(n=n.ot(r.key,i));}),n;},t.prototype.keys=function(){return this.mutations.reduce(function(t,e){return t.add(e.key);},Ot());},t.prototype.isEqual=function(t){return this.batchId===t.batchId&&Y(this.mutations,t.mutations,function(t,e){return gn(t,e);})&&Y(this.baseMutations,t.baseMutations,function(t,e){return gn(t,e);});},t;}(),Jr=/** @class */function(){function t(t,e,n,/**
	     * A pre-computed mapping from each mutated document to the resulting
	     * version.
	     */r){this.batch=t,this._r=e,this.ur=n,this.dr=r/**
	     * Creates a new MutationBatchResult for the given batch and results. There
	     * must be one result for each mutation in the batch. This static factory
	     * caches a document=>version mapping (docVersions).
	     */;}return t.from=function(e,n,r){g(e.mutations.length===r.length);for(var i=kt,o=e.mutations,s=0;s<o.length;s++){i=i.ot(o[s].key,r[s].version);}return new t(e,n,r,i);},t;}(),Zr=/** @class */function(){function t(){// A mapping of document key to the new cache entry that should be written (or null if any
	// existing cache entry should be removed).
	this.wr=new it(function(t){return t.toString();},function(t,e){return t.isEqual(e);}),this.mr=!1;}return Object.defineProperty(t.prototype,"readTime",{get:function get(){return this.Tr;},set:function set(t){this.Tr=t;},enumerable:!1,configurable:!0}),/**
	     * Buffers a `RemoteDocumentCache.addEntry()` call.
	     *
	     * You can only modify documents that have already been retrieved via
	     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
	     */t.prototype.Er=function(t,e){this.Ir(),this.readTime=e,this.wr.set(t.key,t);},/**
	     * Buffers a `RemoteDocumentCache.removeEntry()` call.
	     *
	     * You can only remove documents that have already been retrieved via
	     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
	     */t.prototype.Ar=function(t,e){this.Ir(),e&&(this.readTime=e),this.wr.set(t,null);},/**
	     * Looks up an entry in the cache. The buffered changes will first be checked,
	     * and if no buffered change applies, this will forward to
	     * `RemoteDocumentCache.getEntry()`.
	     *
	     * @param transaction The transaction in which to perform any persistence
	     *     operations.
	     * @param documentKey The key of the entry to look up.
	     * @return The cached Document or NoDocument entry, or null if we have nothing
	     * cached.
	     */t.prototype.Rr=function(t,e){this.Ir();var n=this.wr.get(e);return void 0!==n?yr.resolve(n):this.gr(t,e);},/**
	     * Looks up several entries in the cache, forwarding to
	     * `RemoteDocumentCache.getEntry()`.
	     *
	     * @param transaction The transaction in which to perform any persistence
	     *     operations.
	     * @param documentKeys The keys of the entries to look up.
	     * @return A map of cached `Document`s or `NoDocument`s, indexed by key. If an
	     *     entry cannot be found, the corresponding key will be mapped to a null
	     *     value.
	     */t.prototype.getEntries=function(t,e){return this.Pr(t,e);},/**
	     * Applies buffered changes to the underlying RemoteDocumentCache, using
	     * the provided transaction.
	     */t.prototype.apply=function(t){return this.Ir(),this.mr=!0,this.yr(t);},/** Helper to assert this.changes is not null  */t.prototype.Ir=function(){},t;}(),ti="The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.",ei=/** @class */function(){function t(){this.Vr=[];}return t.prototype.pr=function(t){this.Vr.push(t);},t.prototype.br=function(){this.Vr.forEach(function(t){return t();});},t;}(),ni=/** @class */function(){function t(t,e,n){this.vr=t,this.Sr=e,this.Dr=n/**
	     * Get the local view of the document identified by `key`.
	     *
	     * @return Local view of the document or null if we don't have any cached
	     * state for it.
	     */;}return t.prototype.Cr=function(t,e){var n=this;return this.Sr.Nr(t,e).next(function(r){return n.Fr(t,e,r);});},/** Internal version of `getDocument` that allows reusing batches. */t.prototype.Fr=function(t,e,n){return this.vr.Rr(t,e).next(function(t){for(var r=0,i=n;r<i.length;r++){t=i[r].hr(e,t);}return t;});},// Returns the view of the given `docs` as they would appear after applying
	// all mutations in the given `batches`.
	t.prototype.$r=function(t,e,n){var r=Dt();return e.forEach(function(t,e){for(var i=0,o=n;i<o.length;i++){e=o[i].hr(t,e);}r=r.ot(t,e);}),r;},/**
	     * Gets the local view of the documents identified by `keys`.
	     *
	     * If we don't have cached state for a document in `keys`, a NoDocument will
	     * be stored for that key in the resulting set.
	     */t.prototype.kr=function(t,e){var n=this;return this.vr.getEntries(t,e).next(function(e){return n.Mr(t,e);});},/**
	     * Similar to `getDocuments`, but creates the local view from the given
	     * `baseDocs` without retrieving documents from the local store.
	     */t.prototype.Mr=function(t,e){var n=this;return this.Sr.Or(t,e).next(function(r){var i=n.$r(t,e,r),o=St();return i.forEach(function(t,e){// TODO(http://b/32275378): Don't conflate missing / deleted.
	e||(e=new Rn(t,st.min())),o=o.ot(t,e);}),o;});},/**
	     * Performs a query against the local view of all documents.
	     *
	     * @param transaction The persistence transaction.
	     * @param query The query to match documents against.
	     * @param sinceReadTime If not set to SnapshotVersion.min(), return only
	     *     documents that have been read since this snapshot version (exclusive).
	     */t.prototype.Lr=function(t,e,n){/**
	 * Returns whether the query matches a single document by path (rather than a
	 * collection).
	 */return function(t){return A.F(t.path)&&null===t.collectionGroup&&0===t.filters.length;}(e)?this.Br(t,e.path):jn(e)?this.qr(t,e,n):this.Ur(t,e,n);},t.prototype.Br=function(t,e){// Just do a simple document lookup.
	return this.Cr(t,new A(e)).next(function(t){var e=Lt();return t instanceof kn&&(e=e.ot(t.key,t)),e;});},t.prototype.qr=function(t,e,n){var r=this,i=e.collectionGroup,o=Lt();return this.Dr.Qr(t,i).next(function(s){return yr.forEach(s,function(s){var u=function(t,e){return new Pn(e,/*collectionGroup=*/null,t.on.slice(),t.filters.slice(),t.limit,t.an,t.startAt,t.endAt);}(e,s.child(i));return r.Ur(t,u,n).next(function(t){t.forEach(function(t,e){o=o.ot(t,e);});});}).next(function(){return o;});});},t.prototype.Ur=function(t,e,n){var r,i,o=this;// Query the remote documents and overlay mutations.
	return this.vr.Lr(t,e,n).next(function(n){return r=n,o.Sr.Wr(t,e);}).next(function(e){return i=e,o.jr(t,i,r).next(function(t){r=t;for(var e=0,n=i;e<n.length;e++){for(var o=n[e],s=0,u=o.mutations;s<u.length;s++){var a=u[s],c=a.key,h=r.get(c),f=vn(a,h,h,o.ar);r=f instanceof kn?r.ot(c,f):r.remove(c);}}});}).next(function(){// Finally, filter out any documents that don't actually match
	// the query.
	return r.forEach(function(t,n){$n(e,n)||(r=r.remove(t));}),r;});},t.prototype.jr=function(t,e,n){for(var r=Ot(),i=0,o=e;i<o.length;i++){for(var s=0,u=o[i].mutations;s<u.length;s++){var a=u[s];a instanceof _n&&null===n.get(a.key)&&(r=r.add(a.key));}}var c=n;return this.vr.getEntries(t,r).next(function(t){return t.forEach(function(t,e){null!==e&&e instanceof kn&&(c=c.ot(t,e));}),c;});},t;}(),ri=/** @class */function(){function t(t,e,n,r){this.targetId=t,this.fromCache=e,this.Kr=n,this.Gr=r;}return t.zr=function(e,n){for(var r=Ot(),i=Ot(),o=0,s=n.docChanges;o<s.length;o++){var u=s[o];switch(u.type){case 0/* Added */:r=r.add(u.doc.key);break;case 1/* Removed */:i=i.add(u.doc.key);// do nothing
	}}return new t(e,n.fromCache,r,i);},t;}();/**
	 * Holds the state of a query target, including its target ID and whether the
	 * target is 'not-current', 'current' or 'rejected'.
	 */// Visible for testing
	/**
	 * @license
	 * Copyright 2018 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */function ii(t,e){var n=t[0],r=t[1],i=e[0],o=e[1],s=H(n,i);return 0===s?H(r,o):s;}/**
	 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
	 * lowest n values passed to `addElement`, and finally reports the largest of
	 * them in `maxValue`.
	 */var oi=/** @class */function(){function t(t){this.Hr=t,this.buffer=new Tt(ii),this.Yr=0;}return t.prototype.Jr=function(){return++this.Yr;},t.prototype.Xr=function(t){var e=[t,this.Jr()];if(this.buffer.size<this.Hr)this.buffer=this.buffer.add(e);else{var n=this.buffer.last();ii(e,n)<0&&(this.buffer=this.buffer.delete(n).add(e));}},Object.defineProperty(t.prototype,"maxValue",{get:function get(){// Guaranteed to be non-empty. If we decide we are not collecting any
	// sequence numbers, nthSequenceNumber below short-circuits. If we have
	// decided that we are collecting n sequence numbers, it's because n is some
	// percentage of the existing sequence numbers. That means we should never
	// be in a situation where we are collecting sequence numbers but don't
	// actually have any.
	return this.buffer.last()[0];},enumerable:!1,configurable:!0}),t;}(),si={Zr:!1,eo:0,no:0,so:0},ui=/** @class */function(){function t(// When we attempt to collect, we will only do so if the cache size is greater than this
	t,// The percentage of sequence numbers that we will attempt to collect
	e,// A cap on the total number of sequence numbers that will be collected. This prevents
	n){this.io=t,this.ro=e,this.oo=n;}return t.ao=function(e){return new t(e,t.co,t.uo);},t;}();ui.ho=-1,ui.lo=1048576,ui._o=41943040,ui.co=10,ui.uo=1e3,ui.fo=new ui(ui._o,ui.co,ui.uo),ui.do=new ui(ui.ho,0,0);/**
	 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
	 * whether or not GC is enabled, as well as which delay to use before the next run.
	 */var ai=/** @class */function(){function e(t,e){this.wo=t,this.cs=e,this.mo=!1,this.To=null;}return e.prototype.start=function(t){this.wo.params.io!==ui.ho&&this.Eo(t);},e.prototype.stop=function(){this.To&&(this.To.cancel(),this.To=null);},Object.defineProperty(e.prototype,"Ei",{get:function get(){return null!==this.To;},enumerable:!1,configurable:!0}),e.prototype.Eo=function(e){var n=this,r=this.mo?3e5:6e4;l("LruGarbageCollector","Garbage collection scheduled in "+r+"ms"),this.To=this.cs.yn("lru_garbage_collection"/* LruGarbageCollection */,r,function(){return t.__awaiter(n,void 0,void 0,function(){var n;return t.__generator(this,function(t){switch(t.label){case 0:this.To=null,this.mo=!0,t.label=1;case 1:return t.trys.push([1,3,,7]),[4/*yield*/,e.Io(this.wo)];case 2:return t.sent(),[3/*break*/,7];case 3:return _r(n=t.sent())?(l("LruGarbageCollector","Ignoring IndexedDB error during garbage collection: ",n),[3/*break*/,6]):[3/*break*/,4];case 4:return[4/*yield*/,Do(n)];case 5:t.sent(),t.label=6;case 6:return[3/*break*/,7];case 7:return[4/*yield*/,this.Eo(e)];case 8:return t.sent(),[2/*return*/];}});});});},e;}(),ci=/** @class */function(){function t(t,e){this.Ao=t,this.params=e/** Given a percentile of target to collect, returns the number of targets to collect. */;}return t.prototype.Ro=function(t,e){return this.Ao.Po(t).next(function(t){return Math.floor(e/100*t);});},/** Returns the nth sequence number, counting in order from the smallest. */t.prototype.yo=function(t,e){var n=this;if(0===e)return yr.resolve(qr.ai);var r=new oi(e);return this.Ao.Ce(t,function(t){return r.Xr(t.sequenceNumber);}).next(function(){return n.Ao.Vo(t,function(t){return r.Xr(t);});}).next(function(){return r.maxValue;});},/**
	     * Removes targets with a sequence number equal to or less than the given upper bound, and removes
	     * document associations with those targets.
	     */t.prototype.po=function(t,e,n){return this.Ao.po(t,e,n);},/**
	     * Removes documents that have a sequence number equal to or less than the upper bound and are not
	     * otherwise pinned.
	     */t.prototype.bo=function(t,e){return this.Ao.bo(t,e);},t.prototype.vo=function(t,e){var n=this;return this.params.io===ui.ho?(l("LruGarbageCollector","Garbage collection skipped; disabled"),yr.resolve(si)):this.So(t).next(function(r){return r<n.params.io?(l("LruGarbageCollector","Garbage collection skipped; Cache size "+r+" is lower than threshold "+n.params.io),si):n.Do(t,e);});},t.prototype.So=function(t){return this.Ao.So(t);},t.prototype.Do=function(t,e){var r,i,o,s,u,a,c,h=this,p=Date.now();return this.Ro(t,this.params.ro).next(function(e){// Cap at the configured max
	return e>h.params.oo?(l("LruGarbageCollector","Capping sequence numbers to collect down to the maximum of "+h.params.oo+" from "+e),i=h.params.oo):i=e,s=Date.now(),h.yo(t,i);}).next(function(n){return r=n,u=Date.now(),h.po(t,r,e);}).next(function(e){return o=e,a=Date.now(),h.bo(t,r);}).next(function(t){return c=Date.now(),f()<=n.LogLevel.DEBUG&&l("LruGarbageCollector","LRU Garbage Collection\n\tCounted targets in "+(s-p)+"ms\n\tDetermined least recently used "+i+" in "+(u-s)+"ms\n\tRemoved "+o+" targets in "+(a-u)+"ms\n\tRemoved "+t+" documents in "+(c-a)+"ms\nTotal Duration: "+(c-p)+"ms"),yr.resolve({Zr:!0,eo:i,no:o,so:t});});},t;}();/** Implements the steps for LRU garbage collection. *//**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Encodes a resource path into a IndexedDb-compatible string form.
	 */function hi(t){for(var e="",n=0;n<t.length;n++){e.length>0&&(e=li(e)),e=fi(t.get(n),e);}return li(e);}/** Encodes a single segment of a resource path into the given result */function fi(t,e){for(var n=e,r=t.length,i=0;i<r;i++){var o=t.charAt(i);switch(o){case"\0":n+="";break;case"":n+="";break;default:n+=o;}}return n;}/** Encodes a path separator into the given result */function li(t){return t+"";}/**
	 * Decodes the given IndexedDb-compatible string form of a resource path into
	 * a ResourcePath instance. Note that this method is not suitable for use with
	 * decoding resource names from the server; those are One Platform format
	 * strings.
	 */function pi(t){// Event the empty path must encode as a path of at least length 2. A path
	// with exactly 2 must be the empty path.
	var e=t.length;if(g(e>=2),2===e)return g(""===t.charAt(0)&&""===t.charAt(1)),E.P();// Escape characters cannot exist past the second-to-last position in the
	// source value.
	for(var n=e-2,r=[],i="",o=0;o<e;){// The last two characters of a valid encoded path must be a separator, so
	// there must be an end to this segment.
	var s=t.indexOf("",o);switch((s<0||s>n)&&y(),t.charAt(s+1)){case"":var u=t.substring(o,s),a=void 0;0===i.length?// Avoid copying for the common case of a segment that excludes \0
	// and \001
	a=u:(a=i+=u,i=""),r.push(a);break;case"":i+=t.substring(o,s),i+="\0";break;case"":// The escape character can be used in the output to encode itself.
	i+=t.substring(o,s+1);break;default:y();}o=s+2;}return new E(r);}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Serializer for values stored in the LocalStore. */var di=function di(t){this.Co=t;};/** Decodes a remote document from storage locally to a Document. */function vi(t,e){if(e.document)return function(t,e,n){var r=Se(t,e.name),i=Ee(e.updateTime),o=new Sn({mapValue:{fields:e.fields}});return new kn(r,i,o,{hasCommittedMutations:!!n});}(t.Co,e.document,!!e.hasCommittedMutations);if(e.noDocument){var n=A.$(e.noDocument.path),r=_i(e.noDocument.readTime);return new Rn(n,r,{hasCommittedMutations:!!e.hasCommittedMutations});}if(e.unknownDocument){var i=A.$(e.unknownDocument.path),o=_i(e.unknownDocument.version);return new On(i,o);}return y();}/** Encodes a document for storage locally. */function yi(t,e,n){var r=gi(n),i=e.key.path.h().A();if(e instanceof kn){var o=function(t,e){return{name:Ae(t,e.key),fields:e.rn().mapValue.fields,updateTime:_e(t,e.version.Z())};}(t.Co,e),s=e.hasCommittedMutations;return new Ki(/* unknownDocument= */null,/* noDocument= */null,o,s,r,i);}if(e instanceof Rn){var u=e.key.path.A(),a=wi(e.version),c=e.hasCommittedMutations;return new Ki(/* unknownDocument= */null,new Bi(u,a),/* document= */null,c,r,i);}if(e instanceof On){var h=e.key.path.A(),f=wi(e.version);return new Ki(new Wi(h,f),/* noDocument= */null,/* document= */null,/* hasCommittedMutations= */!0,r,i);}return y();}function gi(t){var e=t.Z();return[e.seconds,e.nanoseconds];}function mi(t){var e=new ot(t[0],t[1]);return st.J(e);}function wi(t){var e=t.Z();return new Mi(e.seconds,e.nanoseconds);}function _i(t){var e=new ot(t.seconds,t.nanoseconds);return st.J(e);}/** Encodes a batch of mutations into a DbMutationBatch for local storage. *//** Decodes a DbMutationBatch into a MutationBatch */function bi(t,e){var n=(e.baseMutations||[]).map(function(e){return Pe(t.Co,e);}),r=e.mutations.map(function(e){return Pe(t.Co,e);}),i=ot.fromMillis(e.localWriteTimeMs);return new Xr(e.batchId,i,n,r);}/** Decodes a DbTarget into TargetData */function Ii(t){var e,n,r=_i(t.readTime),i=void 0!==t.lastLimboFreeSnapshotVersion?_i(t.lastLimboFreeSnapshotVersion):st.min();return void 0!==t.query.documents?(g(1===(n=t.query).documents.length),e=zn(Un(xe(n.documents[0])))):e=Ce(t.query),new gt(e,t.targetId,0/* Listen */,t.lastListenSequenceNumber,r,i,X.fromBase64String(t.resumeToken))/** Encodes TargetData into a DbTarget for storage locally. */;}function Ei(t,e){var n,r=wi(e.nt),i=wi(e.lastLimboFreeSnapshotVersion);n=dt(e.target)?Ve(t.Co,e.target):Ue(t.Co,e.target);// We can't store the resumeToken as a ByteString in IndexedDb, so we
	// convert it to a base64 string for storage.
	var o=e.resumeToken.toBase64();// lastListenSequenceNumber is always 0 until we do real GC.
	return new Hi(e.targetId,lt(e.target),r,o,e.sequenceNumber,i,n);}/**
	 * A helper function for figuring out what kind of query has been stored.
	 *//**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** A mutation queue for a specific user, backed by IndexedDB. */var Ti=/** @class */function(){function t(/**
	     * The normalized userId (e.g. null UID => "" userId) used to store /
	     * retrieve mutations.
	     */t,e,n,r){this.userId=t,this.serializer=e,this.Dr=n,this.No=r,/**
	             * Caches the document keys for pending mutation batches. If the mutation
	             * has been removed from IndexedDb, the cached value may continue to
	             * be used to retrieve the batch's document keys. To remove a cached value
	             * locally, `removeCachedMutationKeys()` should be invoked either directly
	             * or through `removeMutationBatches()`.
	             *
	             * With multi-tab, when the primary client acknowledges or rejects a mutation,
	             * this cache is used by secondary clients to invalidate the local
	             * view of the documents that were previously affected by the mutation.
	             */// PORTING NOTE: Multi-tab only.
	this.Fo={}/**
	     * Creates a new mutation queue for the given user.
	     * @param user The user for which to create a mutation queue.
	     * @param serializer The serializer to use when persisting to IndexedDb.
	     */;}return t.xo=function(e,n,r,i){// TODO(mcg): Figure out what constraints there are on userIDs
	// In particular, are there any reserved characters? are empty ids allowed?
	// For the moment store these together in the same mutations table assuming
	// that empty userIDs aren't allowed.
	return g(""!==e.uid),new t(e.Zs()?e.uid:"",n,r,i);},t.prototype.$o=function(t){var e=!0,n=IDBKeyRange.bound([this.userId,Number.NEGATIVE_INFINITY],[this.userId,Number.POSITIVE_INFINITY]);return Si(t).rs({index:Gi.userMutationsIndex,range:n},function(t,n,r){e=!1,r.done();}).next(function(){return e;});},t.prototype.ko=function(t,e,n,r){var i=this,o=Di(t),s=Si(t);// The IndexedDb implementation in Chrome (and Firefox) does not handle
	// compound indices that include auto-generated keys correctly. To ensure
	// that the index entry is added correctly in all browsers, we perform two
	// writes: The first write is used to retrieve the next auto-generated Batch
	// ID, and the second write populates the index and stores the actual
	// mutation batch.
	// See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
	// We write an empty object to obtain key
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	return s.add({}).next(function(u){g("number"==typeof u);for(var a=new Xr(u,e,n,r),c=function(t,e,n){var r=n.baseMutations.map(function(e){return Oe(t.Co,e);}),i=n.mutations.map(function(e){return Oe(t.Co,e);});return new Gi(e,n.batchId,n.ar.toMillis(),r,i);}(i.serializer,i.userId,a),h=[],f=new Tt(function(t,e){return H(t.R(),e.R());}),l=0,p=r;l<p.length;l++){var d=p[l],v=zi.key(i.userId,d.key.path,u);f=f.add(d.key.path.h()),h.push(s.put(c)),h.push(o.put(v,zi.PLACEHOLDER));}return f.forEach(function(e){h.push(i.Dr.Mo(t,e));}),t.pr(function(){i.Fo[u]=a.keys();}),yr.$n(h).next(function(){return a;});});},t.prototype.Oo=function(t,e){var n=this;return Si(t).get(e).next(function(t){return t?(g(t.userId===n.userId),bi(n.serializer,t)):null;});},/**
	     * Returns the document keys for the mutation batch with the given batchId.
	     * For primary clients, this method returns `null` after
	     * `removeMutationBatches()` has been called. Secondary clients return a
	     * cached result until `removeCachedMutationKeys()` is invoked.
	     */// PORTING NOTE: Multi-tab only.
	t.prototype.Lo=function(t,e){var n=this;return this.Fo[e]?yr.resolve(this.Fo[e]):this.Oo(t,e).next(function(t){if(t){var r=t.keys();return n.Fo[e]=r,r;}return null;});},t.prototype.Bo=function(t,e){var n=this,r=e+1,i=IDBKeyRange.lowerBound([this.userId,r]),o=null;return Si(t).rs({index:Gi.userMutationsIndex,range:i},function(t,e,i){e.userId===n.userId&&(g(e.batchId>=r),o=bi(n.serializer,e)),i.done();}).next(function(){return o;});},t.prototype.qo=function(t){var e=IDBKeyRange.upperBound([this.userId,Number.POSITIVE_INFINITY]),n=-1;return Si(t).rs({index:Gi.userMutationsIndex,range:e,reverse:!0},function(t,e,r){n=e.batchId,r.done();}).next(function(){return n;});},t.prototype.Uo=function(t){var e=this,n=IDBKeyRange.bound([this.userId,-1],[this.userId,Number.POSITIVE_INFINITY]);return Si(t).ts(Gi.userMutationsIndex,n).next(function(t){return t.map(function(t){return bi(e.serializer,t);});});},t.prototype.Nr=function(t,e){var n=this,r=zi.prefixForPath(this.userId,e.path),i=IDBKeyRange.lowerBound(r),o=[];// Scan the document-mutation index starting with a prefix starting with
	// the given documentKey.
	return Di(t).rs({range:i},function(r,i,s){var u=r[0],a=r[1],c=r[2],h=pi(a);// Only consider rows matching exactly the specific key of
	// interest. Note that because we order by path first, and we
	// order terminators before path separators, we'll encounter all
	// the index rows for documentKey contiguously. In particular, all
	// the rows for documentKey will occur before any rows for
	// documents nested in a subcollection beneath documentKey so we
	// can stop as soon as we hit any such row.
	if(u===n.userId&&e.path.isEqual(h))// Look up the mutation batch in the store.
	return Si(t).get(c).next(function(t){if(!t)throw y();g(t.userId===n.userId),o.push(bi(n.serializer,t));});s.done();}).next(function(){return o;});},t.prototype.Or=function(t,e){var n=this,r=new Tt(H),i=[];return e.forEach(function(e){var o=zi.prefixForPath(n.userId,e.path),s=IDBKeyRange.lowerBound(o),u=Di(t).rs({range:s},function(t,i,o){var s=t[0],u=t[1],a=t[2],c=pi(u);// Only consider rows matching exactly the specific key of
	// interest. Note that because we order by path first, and we
	// order terminators before path separators, we'll encounter all
	// the index rows for documentKey contiguously. In particular, all
	// the rows for documentKey will occur before any rows for
	// documents nested in a subcollection beneath documentKey so we
	// can stop as soon as we hit any such row.
	s===n.userId&&e.path.isEqual(c)?r=r.add(a):o.done();});i.push(u);}),yr.$n(i).next(function(){return n.Qo(t,r);});},t.prototype.Wr=function(t,e){var n=this,r=e.path,i=r.length+1,o=zi.prefixForPath(this.userId,r),s=IDBKeyRange.lowerBound(o),u=new Tt(H);return Di(t).rs({range:s},function(t,e,o){var s=t[0],a=t[1],c=t[2],h=pi(a);s===n.userId&&r.T(h)?// Rows with document keys more than one segment longer than the
	// query path can't be matches. For example, a query on 'rooms'
	// can't match the document /rooms/abc/messages/xyx.
	// TODO(mcg): we'll need a different scanner when we implement
	// ancestor queries.
	h.length===i&&(u=u.add(c)):o.done();}).next(function(){return n.Qo(t,u);});},t.prototype.Qo=function(t,e){var n=this,r=[],i=[];// TODO(rockwood): Implement this using iterate.
	return e.forEach(function(e){i.push(Si(t).get(e).next(function(t){if(null===t)throw y();g(t.userId===n.userId),r.push(bi(n.serializer,t));}));}),yr.$n(i).next(function(){return r;});},t.prototype.Wo=function(t,e){var n=this;return Ai(t.jo,this.userId,e).next(function(r){return t.pr(function(){n.Ko(e.batchId);}),yr.forEach(r,function(e){return n.No.Go(t,e);});});},/**
	     * Clears the cached keys for a mutation batch. This method should be
	     * called by secondary clients after they process mutation updates.
	     *
	     * Note that this method does not have to be called from primary clients as
	     * the corresponding cache entries are cleared when an acknowledged or
	     * rejected batch is removed from the mutation queue.
	     */// PORTING NOTE: Multi-tab only
	t.prototype.Ko=function(t){delete this.Fo[t];},t.prototype.zo=function(t){var e=this;return this.$o(t).next(function(n){if(!n)return yr.resolve();// Verify that there are no entries in the documentMutations index if
	// the queue is empty.
	var r=IDBKeyRange.lowerBound(zi.prefixForUser(e.userId)),i=[];return Di(t).rs({range:r},function(t,n,r){if(t[0]===e.userId){var o=pi(t[1]);i.push(o);}else r.done();}).next(function(){g(0===i.length);});});},t.prototype.Ho=function(t,e){return Ni(t,this.userId,e);},// PORTING NOTE: Multi-tab only (state is held in memory in other clients).
	/** Returns the mutation queue's metadata from IndexedDb. */t.prototype.Yo=function(t){var e=this;return xi(t).get(this.userId).next(function(t){return t||new ji(e.userId,-1,/*lastStreamToken=*/"");});},t;}();/**
	 * @return true if the mutation queue for the given user contains a pending
	 *         mutation for the given key.
	 */function Ni(t,e,n){var r=zi.prefixForPath(e,n.path),i=r[1],o=IDBKeyRange.lowerBound(r),s=!1;return Di(t).rs({range:o,ss:!0},function(t,n,r){var o=t[0],u=t[1];t[2];o===e&&u===i&&(s=!0),r.done();}).next(function(){return s;});}/** Returns true if any mutation queue contains the given document. *//**
	 * Delete a mutation batch and the associated document mutations.
	 * @return A PersistencePromise of the document mutations that were removed.
	 */function Ai(t,e,n){var r=t.store(Gi.store),i=t.store(zi.store),o=[],s=IDBKeyRange.only(n.batchId),u=0,a=r.rs({range:s},function(t,e,n){return u++,n.delete();});o.push(a.next(function(){g(1===u);}));for(var c=[],h=0,f=n.mutations;h<f.length;h++){var l=f[h],p=zi.key(e,l.key.path,n.batchId);o.push(i.delete(p)),c.push(l.key);}return yr.$n(o).next(function(){return c;});}/**
	 * Helper to get a typed SimpleDbStore for the mutations object store.
	 */function Si(t){return ho.Qn(t,Gi.store);}/**
	 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
	 */function Di(t){return ho.Qn(t,zi.store);}/**
	 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
	 */function xi(t){return ho.Qn(t,ji.store);}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * The RemoteDocumentCache for IndexedDb. To construct, invoke
	 * `newIndexedDbRemoteDocumentCache()`.
	 */var Li=/** @class */function(){/**
	     * @param serializer The document serializer.
	     * @param indexManager The query indexes that need to be maintained.
	     */function t(t,e){this.serializer=t,this.Dr=e/**
	     * Adds the supplied entries to the cache.
	     *
	     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
	     */;}return t.prototype.Er=function(t,e,n){return Oi(t).put(Pi(e),n);},/**
	     * Removes a document from the cache.
	     *
	     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
	     */t.prototype.Ar=function(t,e){var n=Oi(t),r=Pi(e);return n.delete(r);},/**
	     * Updates the current cache size.
	     *
	     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
	     * cache's metadata.
	     */t.prototype.updateMetadata=function(t,e){var n=this;return this.getMetadata(t).next(function(r){return r.byteSize+=e,n.Jo(t,r);});},t.prototype.Rr=function(t,e){var n=this;return Oi(t).get(Pi(e)).next(function(t){return n.Xo(t);});},/**
	     * Looks up an entry in the cache.
	     *
	     * @param documentKey The key of the entry to look up.
	     * @return The cached MaybeDocument entry and its size, or null if we have nothing cached.
	     */t.prototype.Zo=function(t,e){var n=this;return Oi(t).get(Pi(e)).next(function(t){var e=n.Xo(t);return e?{ta:e,size:Vi(t)}:null;});},t.prototype.getEntries=function(t,e){var n=this,r=Dt();return this.ea(t,e,function(t,e){var i=n.Xo(e);r=r.ot(t,i);}).next(function(){return r;});},/**
	     * Looks up several entries in the cache.
	     *
	     * @param documentKeys The set of keys entries to look up.
	     * @return A map of MaybeDocuments indexed by key (if a document cannot be
	     *     found, the key will be mapped to null) and a map of sizes indexed by
	     *     key (zero if the key cannot be found).
	     */t.prototype.na=function(t,e){var n=this,r=Dt(),i=new bt(A.i);return this.ea(t,e,function(t,e){var o=n.Xo(e);o?(r=r.ot(t,o),i=i.ot(t,Vi(e))):(r=r.ot(t,null),i=i.ot(t,0));}).next(function(){return{sa:r,ia:i};});},t.prototype.ea=function(t,e,n){if(e.m())return yr.resolve();var r=IDBKeyRange.bound(e.first().path.A(),e.last().path.A()),i=e._t(),o=i.It();return Oi(t).rs({range:r},function(t,e,r){// Go through keys not found in cache.
	for(var s=A.$(t);o&&A.i(o,s)<0;){n(o,null),o=i.It();}o&&o.isEqual(s)&&(// Key found in cache.
	n(o,e),o=i.At()?i.It():null),// Skip to the next key (if there is one).
	o?r.Xn(o.path.A()):r.done();}).next(function(){// The rest of the keys are not in the cache. One case where `iterate`
	// above won't go through them is when the cache is empty.
	for(;o;){n(o,null),o=i.At()?i.It():null;}});},t.prototype.Lr=function(t,e,n){var r=this,i=Lt(),o=e.path.length+1,s={};if(n.isEqual(st.min())){// Documents are ordered by key, so we can use a prefix scan to narrow
	// down the documents we need to match the query against.
	var u=e.path.A();s.range=IDBKeyRange.lowerBound(u);}else{// Execute an index-free query and filter by read time. This is safe
	// since all document changes to queries that have a
	// lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
	var a=e.path.A(),c=gi(n);s.range=IDBKeyRange.lowerBound([a,c],/* open= */!0),s.index=Ki.collectionReadTimeIndex;}return Oi(t).rs(s,function(t,n,s){// The query is actually returning any path that starts with the query
	// path prefix which may include documents in subcollections. For
	// example, a query on 'rooms' will return rooms/abc/messages/xyx but we
	// shouldn't match it. Fix this by discarding rows with document keys
	// more than one segment longer than the query path.
	if(t.length===o){var u=vi(r.serializer,n);e.path.T(u.key.path)?u instanceof kn&&$n(e,u)&&(i=i.ot(u.key,u)):s.done();}}).next(function(){return i;});},t.prototype.ra=function(t){return new ki(this,!!t&&t.oa);},t.prototype.aa=function(t){return this.getMetadata(t).next(function(t){return t.byteSize;});},t.prototype.getMetadata=function(t){return Ri(t).get(Qi.key).next(function(t){return g(!!t),t;});},t.prototype.Jo=function(t,e){return Ri(t).put(Qi.key,e);},/**
	     * Decodes `remoteDoc` and returns the document (or null, if the document
	     * corresponds to the format used for sentinel deletes).
	     */t.prototype.Xo=function(t){if(t){var e=vi(this.serializer,t);return e instanceof Rn&&e.version.isEqual(st.min())?null:e;}return null;},t;}(),ki=/** @class */function(e){/**
	     * @param documentCache The IndexedDbRemoteDocumentCache to apply the changes to.
	     * @param trackRemovals Whether to create sentinel deletes that can be tracked by
	     * `getNewDocumentChanges()`.
	     */function n(t,n){var r=this;return(r=e.call(this)||this).ca=t,r.oa=n,// A map of document sizes prior to applying the changes in this buffer.
	r.ua=new it(function(t){return t.toString();},function(t,e){return t.isEqual(e);}),r;}return t.__extends(n,e),n.prototype.yr=function(t){var e=this,n=[],r=0,i=new Tt(function(t,e){return H(t.R(),e.R());});return this.wr.forEach(function(o,s){var u=e.ua.get(o);if(s){var a=yi(e.ca.serializer,s,e.readTime);i=i.add(o.path.h());var c=Vi(a);r+=c-u,n.push(e.ca.Er(t,o,a));}else if(r-=u,e.oa){// In order to track removals, we store a "sentinel delete" in the
	// RemoteDocumentCache. This entry is represented by a NoDocument
	// with a version of 0 and ignored by `maybeDecodeDocument()` but
	// preserved in `getNewDocumentChanges()`.
	var h=yi(e.ca.serializer,new Rn(o,st.min()),e.readTime);n.push(e.ca.Er(t,o,h));}else n.push(e.ca.Ar(t,o));}),i.forEach(function(r){n.push(e.ca.Dr.Mo(t,r));}),n.push(this.ca.updateMetadata(t,r)),yr.$n(n);},n.prototype.gr=function(t,e){var n=this;// Record the size of everything we load from the cache so we can compute a delta later.
	return this.ca.Zo(t,e).next(function(t){return null===t?(n.ua.set(e,0),null):(n.ua.set(e,t.size),t.ta);});},n.prototype.Pr=function(t,e){var n=this;// Record the size of everything we load from the cache so we can compute
	// a delta later.
	return this.ca.na(t,e).next(function(t){var e=t.sa;// Note: `getAllFromCache` returns two maps instead of a single map from
	// keys to `DocumentSizeEntry`s. This is to allow returning the
	// `NullableMaybeDocumentMap` directly, without a conversion.
	return t.ia.forEach(function(t,e){n.ua.set(t,e);}),e;});},n;}(Zr);/**
	 * Creates a new IndexedDbRemoteDocumentCache.
	 *
	 * @param serializer The document serializer.
	 * @param indexManager The query indexes that need to be maintained.
	 *//**
	 * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.
	 *
	 * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size
	 * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb
	 * when we apply the changes.
	 */function Ri(t){return ho.Qn(t,Qi.store);}/**
	 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
	 */function Oi(t){return ho.Qn(t,Ki.store);}function Pi(t){return t.path.A();}/**
	 * Retrusn an approximate size for the given document.
	 */function Vi(t){var e;if(t.document)e=t.document;else if(t.unknownDocument)e=t.unknownDocument;else{if(!t.noDocument)throw y();e=t.noDocument;}return JSON.stringify(e).length;}/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * An in-memory implementation of IndexManager.
	 */var Ui=/** @class */function(){function t(){this.ha=new Ci();}return t.prototype.Mo=function(t,e){return this.ha.add(e),yr.resolve();},t.prototype.Qr=function(t,e){return yr.resolve(this.ha.getEntries(e));},t;}(),Ci=/** @class */function(){function t(){this.index={};}// Returns false if the entry already existed.
	return t.prototype.add=function(t){var e=t._(),n=t.h(),r=this.index[e]||new Tt(E.i),i=!r.has(n);return this.index[e]=r.add(n),i;},t.prototype.has=function(t){var e=t._(),n=t.h(),r=this.index[e];return r&&r.has(n);},t.prototype.getEntries=function(t){return(this.index[t]||new Tt(E.i)).A();},t;}(),Fi=/** @class */function(){function t(t){this.serializer=t;}/**
	     * Performs database creation and schema upgrades.
	     *
	     * Note that in production, this method is only ever used to upgrade the schema
	     * to SCHEMA_VERSION. Different values of toVersion are only used for testing
	     * and local feature development.
	     */return t.prototype.createOrUpgrade=function(t,e,n,r){var i=this;g(n<r&&n>=0&&r<=10);var o=new br("createOrUpgrade",e);n<1&&r>=1&&(function(t){t.createObjectStore(qi.store);}(t),function(t){t.createObjectStore(ji.store,{keyPath:ji.keyPath}),t.createObjectStore(Gi.store,{keyPath:Gi.keyPath,autoIncrement:!0}).createIndex(Gi.userMutationsIndex,Gi.userMutationsKeyPath,{unique:!0}),t.createObjectStore(zi.store);}(t),Ji(t),function(t){t.createObjectStore(Ki.store);}(t));// Migration 2 to populate the targetGlobal object no longer needed since
	// migration 3 unconditionally clears it.
	var s=yr.resolve();return n<3&&r>=3&&(// Brand new clients don't need to drop and recreate--only clients that
	// potentially have corrupt data.
	0!==n&&(function(t){t.deleteObjectStore(Yi.store),t.deleteObjectStore(Hi.store),t.deleteObjectStore($i.store);}(t),Ji(t)),s=s.next(function(){/**
	     * Creates the target global singleton row.
	     *
	     * @param {IDBTransaction} txn The version upgrade transaction for indexeddb
	     */return function(t){var e=t.store($i.store),n=new $i(/*highestTargetId=*/0,/*lastListenSequenceNumber=*/0,st.min().Z(),/*targetCount=*/0);return e.put($i.key,n);}(o);})),n<4&&r>=4&&(0!==n&&(// Schema version 3 uses auto-generated keys to generate globally unique
	// mutation batch IDs (this was previously ensured internally by the
	// client). To migrate to the new schema, we have to read all mutations
	// and write them back out. We preserve the existing batch IDs to guarantee
	// consistency with other object stores. Any further mutation batch IDs will
	// be auto-generated.
	s=s.next(function(){return function(t,e){return e.store(Gi.store).ts().next(function(n){t.deleteObjectStore(Gi.store),t.createObjectStore(Gi.store,{keyPath:Gi.keyPath,autoIncrement:!0}).createIndex(Gi.userMutationsIndex,Gi.userMutationsKeyPath,{unique:!0});var r=e.store(Gi.store),i=n.map(function(t){return r.put(t);});return yr.$n(i);});}(t,o);})),s=s.next(function(){!function(t){t.createObjectStore(Zi.store,{keyPath:Zi.keyPath});}(t);})),n<5&&r>=5&&(s=s.next(function(){return i.removeAcknowledgedMutations(o);})),n<6&&r>=6&&(s=s.next(function(){return function(t){t.createObjectStore(Qi.store);}(t),i.addDocumentGlobal(o);})),n<7&&r>=7&&(s=s.next(function(){return i.ensureSequenceNumbers(o);})),n<8&&r>=8&&(s=s.next(function(){return i.createCollectionParentIndex(t,o);})),n<9&&r>=9&&(s=s.next(function(){// Multi-Tab used to manage its own changelog, but this has been moved
	// to the DbRemoteDocument object store itself. Since the previous change
	// log only contained transient data, we can drop its object store.
	!function(t){t.objectStoreNames.contains("remoteDocumentChanges")&&t.deleteObjectStore("remoteDocumentChanges");}(t),function(t){var e=t.objectStore(Ki.store);e.createIndex(Ki.readTimeIndex,Ki.readTimeIndexPath,{unique:!1}),e.createIndex(Ki.collectionReadTimeIndex,Ki.collectionReadTimeIndexPath,{unique:!1});}(e);})),n<10&&r>=10&&(s=s.next(function(){return i.rewriteCanonicalIds(o);})),s;},t.prototype.addDocumentGlobal=function(t){var e=0;return t.store(Ki.store).rs(function(t,n){e+=Vi(n);}).next(function(){var n=new Qi(e);return t.store(Qi.store).put(Qi.key,n);});},t.prototype.removeAcknowledgedMutations=function(t){var e=this,n=t.store(ji.store),r=t.store(Gi.store);return n.ts().next(function(n){return yr.forEach(n,function(n){var i=IDBKeyRange.bound([n.userId,-1],[n.userId,n.lastAcknowledgedBatchId]);return r.ts(Gi.userMutationsIndex,i).next(function(r){return yr.forEach(r,function(r){g(r.userId===n.userId);var i=bi(e.serializer,r);return Ai(t,n.userId,i).next(function(){});});});});});},/**
	     * Ensures that every document in the remote document cache has a corresponding sentinel row
	     * with a sequence number. Missing rows are given the most recently used sequence number.
	     */t.prototype.ensureSequenceNumbers=function(t){var e=t.store(Yi.store),n=t.store(Ki.store);return t.store($i.store).get($i.key).next(function(t){var r=[];return n.rs(function(n,i){var o=new E(n),s=function(t){return[0,hi(t)];}(o);r.push(e.get(s).next(function(n){return n?yr.resolve():function(n){return e.put(new Yi(0,hi(n),t.highestListenSequenceNumber));}(o);}));}).next(function(){return yr.$n(r);});});},t.prototype.createCollectionParentIndex=function(t,e){// Create the index.
	t.createObjectStore(Xi.store,{keyPath:Xi.keyPath});var n=e.store(Xi.store),r=new Ci(),i=function i(t){if(r.add(t)){var e=t._(),i=t.h();return n.put({collectionId:e,parent:hi(i)});}};// Helper to add an index entry iff we haven't already written it.
	// Index existing remote documents.
	return e.store(Ki.store).rs({ss:!0},function(t,e){var n=new E(t);return i(n.h());}).next(function(){return e.store(zi.store).rs({ss:!0},function(t,e){t[0];var n=t[1],r=(t[2],pi(n));return i(r.h());});});},t.prototype.rewriteCanonicalIds=function(t){var e=this,n=t.store(Hi.store);return n.rs(function(t,r){var i=Ii(r),o=Ei(e.serializer,i);return n.put(o);});},t;}(),Mi=function Mi(t,e){this.seconds=t,this.nanoseconds=e;},qi=function qi(t,/** Whether to allow shared access from multiple tabs. */e,n){this.ownerId=t,this.allowTabSynchronization=e,this.leaseTimestampMs=n;};/**
	 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
	 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
	 * in indexeddb_schema.ts
	 *//**
	 * Name of the IndexedDb object store.
	 *
	 * Note that the name 'owner' is chosen to ensure backwards compatibility with
	 * older clients that only supported single locked access to the persistence
	 * layer.
	 */qi.store="owner",/**
	     * The key string used for the single object that exists in the
	     * DbPrimaryClient store.
	     */qi.key="owner";var ji=function ji(/**
	     * The normalized user ID to which this queue belongs.
	     */t,/**
	     * An identifier for the highest numbered batch that has been acknowledged
	     * by the server. All MutationBatches in this queue with batchIds less
	     * than or equal to this value are considered to have been acknowledged by
	     * the server.
	     *
	     * NOTE: this is deprecated and no longer used by the code.
	     */e,/**
	     * A stream token that was previously sent by the server.
	     *
	     * See StreamingWriteRequest in datastore.proto for more details about
	     * usage.
	     *
	     * After sending this token, earlier tokens may not be used anymore so
	     * only a single stream token is retained.
	     *
	     * NOTE: this is deprecated and no longer used by the code.
	     */n){this.userId=t,this.lastAcknowledgedBatchId=e,this.lastStreamToken=n;};/** Name of the IndexedDb object store.  */ji.store="mutationQueues",/** Keys are automatically assigned via the userId property. */ji.keyPath="userId";/**
	 * An object to be stored in the 'mutations' store in IndexedDb.
	 *
	 * Represents a batch of user-level mutations intended to be sent to the server
	 * in a single write. Each user-level batch gets a separate DbMutationBatch
	 * with a new batchId.
	 */var Gi=function Gi(/**
	     * The normalized user ID to which this batch belongs.
	     */t,/**
	     * An identifier for this batch, allocated using an auto-generated key.
	     */e,/**
	     * The local write time of the batch, stored as milliseconds since the
	     * epoch.
	     */n,/**
	     * A list of "mutations" that represent a partial base state from when this
	     * write batch was initially created. During local application of the write
	     * batch, these baseMutations are applied prior to the real writes in order
	     * to override certain document fields from the remote document cache. This
	     * is necessary in the case of non-idempotent writes (e.g. `increment()`
	     * transforms) to make sure that the local view of the modified documents
	     * doesn't flicker if the remote document cache receives the result of the
	     * non-idempotent write before the write is removed from the queue.
	     *
	     * These mutations are never sent to the backend.
	     */r,/**
	     * A list of mutations to apply. All mutations will be applied atomically.
	     *
	     * Mutations are serialized via toMutation().
	     */i){this.userId=t,this.batchId=e,this.localWriteTimeMs=n,this.baseMutations=r,this.mutations=i;};/** Name of the IndexedDb object store.  */Gi.store="mutations",/** Keys are automatically assigned via the userId, batchId properties. */Gi.keyPath="batchId",/** The index name for lookup of mutations by user. */Gi.userMutationsIndex="userMutationsIndex",/** The user mutations index is keyed by [userId, batchId] pairs. */Gi.userMutationsKeyPath=["userId","batchId"];var zi=/** @class */function(){function t(){}/**
	     * Creates a [userId] key for use in the DbDocumentMutations index to iterate
	     * over all of a user's document mutations.
	     */return t.prefixForUser=function(t){return[t];},/**
	     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
	     * index to iterate over all at document mutations for a given path or lower.
	     */t.prefixForPath=function(t,e){return[t,hi(e)];},/**
	     * Creates a full index key of [userId, encodedPath, batchId] for inserting
	     * and deleting into the DbDocumentMutations index.
	     */t.key=function(t,e,n){return[t,hi(e),n];},t;}();zi.store="documentMutations",/**
	     * Because we store all the useful information for this store in the key,
	     * there is no useful information to store as the value. The raw (unencoded)
	     * path cannot be stored because IndexedDb doesn't store prototype
	     * information.
	     */zi.PLACEHOLDER=new zi();var Bi=function Bi(t,e){this.path=t,this.readTime=e;},Wi=function Wi(t,e){this.path=t,this.version=e;},Ki=// TODO: We are currently storing full document keys almost three times
	// (once as part of the primary key, once - partly - as `parentPath` and once
	// inside the encoded documents). During our next migration, we should
	// rewrite the primary key as parentPath + document ID which would allow us
	// to drop one value.
	function Ki(/**
	     * Set to an instance of DbUnknownDocument if the data for a document is
	     * not known, but it is known that a document exists at the specified
	     * version (e.g. it had a successful update applied to it)
	     */t,/**
	     * Set to an instance of a DbNoDocument if it is known that no document
	     * exists.
	     */e,/**
	     * Set to an instance of a Document if there's a cached version of the
	     * document.
	     */n,/**
	     * Documents that were written to the remote document store based on
	     * a write acknowledgment are marked with `hasCommittedMutations`. These
	     * documents are potentially inconsistent with the backend's copy and use
	     * the write's commit version as their document version.
	     */r,/**
	     * When the document was read from the backend. Undefined for data written
	     * prior to schema version 9.
	     */i,/**
	     * The path of the collection this document is part of. Undefined for data
	     * written prior to schema version 9.
	     */o){this.unknownDocument=t,this.noDocument=e,this.document=n,this.hasCommittedMutations=r,this.readTime=i,this.parentPath=o;};/**
	 * Represents a document that is known to exist but whose data is unknown.
	 * Stored in IndexedDb as part of a DbRemoteDocument object.
	 */Ki.store="remoteDocuments",/**
	     * An index that provides access to all entries sorted by read time (which
	     * corresponds to the last modification time of each row).
	     *
	     * This index is used to provide a changelog for Multi-Tab.
	     */Ki.readTimeIndex="readTimeIndex",Ki.readTimeIndexPath="readTime",/**
	     * An index that provides access to documents in a collection sorted by read
	     * time.
	     *
	     * This index is used to allow the RemoteDocumentCache to fetch newly changed
	     * documents in a collection.
	     */Ki.collectionReadTimeIndex="collectionReadTimeIndex",Ki.collectionReadTimeIndexPath=["parentPath","readTime"];/**
	 * Contains a single entry that has metadata about the remote document cache.
	 */var Qi=/**
	     * @param byteSize Approximately the total size in bytes of all the documents in the document
	     * cache.
	     */function Qi(t){this.byteSize=t;};Qi.store="remoteDocumentGlobal",Qi.key="remoteDocumentGlobalKey";var Hi=function Hi(/**
	     * An auto-generated sequential numeric identifier for the query.
	     *
	     * Queries are stored using their canonicalId as the key, but these
	     * canonicalIds can be quite long so we additionally assign a unique
	     * queryId which can be used by referenced data structures (e.g.
	     * indexes) to minimize the on-disk cost.
	     */t,/**
	     * The canonical string representing this query. This is not unique.
	     */e,/**
	     * The last readTime received from the Watch Service for this query.
	     *
	     * This is the same value as TargetChange.read_time in the protos.
	     */n,/**
	     * An opaque, server-assigned token that allows watching a query to be
	     * resumed after disconnecting without retransmitting all the data
	     * that matches the query. The resume token essentially identifies a
	     * point in time from which the server should resume sending results.
	     *
	     * This is related to the snapshotVersion in that the resumeToken
	     * effectively also encodes that value, but the resumeToken is opaque
	     * and sometimes encodes additional information.
	     *
	     * A consequence of this is that the resumeToken should be used when
	     * asking the server to reason about where this client is in the watch
	     * stream, but the client should use the snapshotVersion for its own
	     * purposes.
	     *
	     * This is the same value as TargetChange.resume_token in the protos.
	     */r,/**
	     * A sequence number representing the last time this query was
	     * listened to, used for garbage collection purposes.
	     *
	     * Conventionally this would be a timestamp value, but device-local
	     * clocks are unreliable and they must be able to create new listens
	     * even while disconnected. Instead this should be a monotonically
	     * increasing number that's incremented on each listen call.
	     *
	     * This is different from the queryId since the queryId is an
	     * immutable identifier assigned to the Query on first use while
	     * lastListenSequenceNumber is updated every time the query is
	     * listened to.
	     */i,/**
	     * Denotes the maximum snapshot version at which the associated query view
	     * contained no limbo documents.  Undefined for data written prior to
	     * schema version 9.
	     */o,/**
	     * The query for this target.
	     *
	     * Because canonical ids are not unique we must store the actual query. We
	     * use the proto to have an object we can persist without having to
	     * duplicate translation logic to and from a `Query` object.
	     */s){this.targetId=t,this.canonicalId=e,this.readTime=n,this.resumeToken=r,this.lastListenSequenceNumber=i,this.lastLimboFreeSnapshotVersion=o,this.query=s;};Hi.store="targets",/** Keys are automatically assigned via the targetId property. */Hi.keyPath="targetId",/** The name of the queryTargets index. */Hi.queryTargetsIndexName="queryTargetsIndex",/**
	     * The index of all canonicalIds to the targets that they match. This is not
	     * a unique mapping because canonicalId does not promise a unique name for all
	     * possible queries, so we append the targetId to make the mapping unique.
	     */Hi.queryTargetsKeyPath=["canonicalId","targetId"];/**
	 * An object representing an association between a target and a document, or a
	 * sentinel row marking the last sequence number at which a document was used.
	 * Each document cached must have a corresponding sentinel row before lru
	 * garbage collection is enabled.
	 *
	 * The target associations and sentinel rows are co-located so that orphaned
	 * documents and their sequence numbers can be identified efficiently via a scan
	 * of this store.
	 */var Yi=function Yi(/**
	     * The targetId identifying a target or 0 for a sentinel row.
	     */t,/**
	     * The path to the document, as encoded in the key.
	     */e,/**
	     * If this is a sentinel row, this should be the sequence number of the last
	     * time the document specified by `path` was used. Otherwise, it should be
	     * `undefined`.
	     */n){this.targetId=t,this.path=e,this.sequenceNumber=n;};/** Name of the IndexedDb object store.  */Yi.store="targetDocuments",/** Keys are automatically assigned via the targetId, path properties. */Yi.keyPath=["targetId","path"],/** The index name for the reverse index. */Yi.documentTargetsIndex="documentTargetsIndex",/** We also need to create the reverse index for these properties. */Yi.documentTargetsKeyPath=["path","targetId"];/**
	 * A record of global state tracked across all Targets, tracked separately
	 * to avoid the need for extra indexes.
	 *
	 * This should be kept in-sync with the proto used in the iOS client.
	 */var $i=function $i(/**
	     * The highest numbered target id across all targets.
	     *
	     * See DbTarget.targetId.
	     */t,/**
	     * The highest numbered lastListenSequenceNumber across all targets.
	     *
	     * See DbTarget.lastListenSequenceNumber.
	     */e,/**
	     * A global snapshot version representing the last consistent snapshot we
	     * received from the backend. This is monotonically increasing and any
	     * snapshots received from the backend prior to this version (e.g. for
	     * targets resumed with a resumeToken) should be suppressed (buffered)
	     * until the backend has caught up to this snapshot version again. This
	     * prevents our cache from ever going backwards in time.
	     */n,/**
	     * The number of targets persisted.
	     */r){this.highestTargetId=t,this.highestListenSequenceNumber=e,this.lastRemoteSnapshotVersion=n,this.targetCount=r;};/**
	 * The key string used for the single object that exists in the
	 * DbTargetGlobal store.
	 */$i.key="targetGlobalKey",$i.store="targetGlobal";/**
	 * An object representing an association between a Collection id (e.g. 'messages')
	 * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.
	 * This is used to efficiently find all collections to query when performing
	 * a Collection Group query.
	 */var Xi=function Xi(/**
	     * The collectionId (e.g. 'messages')
	     */t,/**
	     * The path to the parent (either a document location or an empty path for
	     * a root-level collection).
	     */e){this.collectionId=t,this.parent=e;};/** Name of the IndexedDb object store. */function Ji(t){t.createObjectStore(Yi.store,{keyPath:Yi.keyPath}).createIndex(Yi.documentTargetsIndex,Yi.documentTargetsKeyPath,{unique:!0}),// NOTE: This is unique only because the TargetId is the suffix.
	t.createObjectStore(Hi.store,{keyPath:Hi.keyPath}).createIndex(Hi.queryTargetsIndexName,Hi.queryTargetsKeyPath,{unique:!0}),t.createObjectStore($i.store);}Xi.store="collectionParents",/** Keys are automatically assigned via the collectionId, parent properties. */Xi.keyPath=["collectionId","parent"];var Zi=function Zi(// Note: Previous schema versions included a field
	// "lastProcessedDocumentChangeId". Don't use anymore.
	t,/** The last time this state was updated. */e,/** Whether the client's network connection is enabled. */n,/** Whether this client is running in a foreground tab. */r){this.clientId=t,this.updateTimeMs=e,this.networkEnabled=n,this.inForeground=r;};/** Name of the IndexedDb object store. */Zi.store="clientMetadata",/** Keys are automatically assigned via the clientId properties. */Zi.keyPath="clientId";var to=t.__spreadArrays(t.__spreadArrays(t.__spreadArrays([ji.store,Gi.store,zi.store,Ki.store,Hi.store,qi.store,$i.store,Yi.store],[Zi.store]),[Qi.store]),[Xi.store]),eo=/** @class */function(){function t(){/**
	         * An in-memory copy of the index entries we've already written since the SDK
	         * launched. Used to avoid re-writing the same entry repeatedly.
	         *
	         * This is *NOT* a complete cache of what's in persistence and so can never be used to
	         * satisfy reads.
	         */this.la=new Ci();}/**
	     * Adds a new entry to the collection parent index.
	     *
	     * Repeated calls for the same collectionPath should be avoided within a
	     * transaction as IndexedDbIndexManager only caches writes once a transaction
	     * has been committed.
	     */return t.prototype.Mo=function(t,e){var n=this;if(!this.la.has(e)){var r=e._(),i=e.h();t.pr(function(){// Add the collection to the in memory cache only if the transaction was
	// successfully committed.
	n.la.add(e);});var o={collectionId:r,parent:hi(i)};return no(t).put(o);}return yr.resolve();},t.prototype.Qr=function(t,e){var n=[],r=IDBKeyRange.bound([e,""],[$(e),""],/*lowerOpen=*/!1,/*upperOpen=*/!0);return no(t).ts(r).next(function(t){for(var r=0,i=t;r<i.length;r++){var o=i[r];// This collectionId guard shouldn't be necessary (and isn't as long
	// as we're running in a real browser), but there's a bug in
	// indexeddbshim that breaks our range in our tests running in node:
	// https://github.com/axemclion/IndexedDBShim/issues/334
	if(o.collectionId!==e)break;n.push(pi(o.parent));}return n;});},t;}();// V2 is no longer usable (see comment at top of file)
	// Visible for testing
	/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * A persisted implementation of IndexManager.
	 *//**
	 * Helper to get a typed SimpleDbStore for the collectionParents
	 * document store.
	 */function no(t){return ho.Qn(t,Xi.store);}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Offset to ensure non-overlapping target ids. *//**
	 * Generates monotonically increasing target IDs for sending targets to the
	 * watch stream.
	 *
	 * The client constructs two generators, one for the target cache, and one for
	 * for the sync engine (to generate limbo documents targets). These
	 * generators produce non-overlapping IDs (by using even and odd IDs
	 * respectively).
	 *
	 * By separating the target ID space, the query cache can generate target IDs
	 * that persist across client restarts, while sync engine can independently
	 * generate in-memory target IDs that are transient and can be reused after a
	 * restart.
	 */var ro=/** @class */function(){function t(t){this._a=t;}return t.prototype.next=function(){return this._a+=2,this._a;},t.fa=function(){// The target cache generator must return '2' in its first call to `next()`
	// as there is no differentiation in the protocol layer between an unset
	// number and the number '0'. If we were to sent a target with target ID
	// '0', the backend would consider it unset and replace it with its own ID.
	return new t(0);},t.da=function(){// Sync engine assigns target IDs for limbo document detection.
	return new t(-1);},t;}(),io=/** @class */function(){function t(t,e){this.No=t,this.serializer=e;}// PORTING NOTE: We don't cache global metadata for the target cache, since
	// some of it (in particular `highestTargetId`) can be modified by secondary
	// tabs. We could perhaps be more granular (and e.g. still cache
	// `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
	// to IndexedDb whenever we need to read metadata. We can revisit if it turns
	// out to have a meaningful performance impact.
	return t.prototype.wa=function(t){var e=this;return this.ma(t).next(function(n){var r=new ro(n.highestTargetId);return n.highestTargetId=r.next(),e.Ta(t,n).next(function(){return n.highestTargetId;});});},t.prototype.Ea=function(t){return this.ma(t).next(function(t){return st.J(new ot(t.lastRemoteSnapshotVersion.seconds,t.lastRemoteSnapshotVersion.nanoseconds));});},t.prototype.Ia=function(t){return this.ma(t).next(function(t){return t.highestListenSequenceNumber;});},t.prototype.Aa=function(t,e,n){var r=this;return this.ma(t).next(function(i){return i.highestListenSequenceNumber=e,n&&(i.lastRemoteSnapshotVersion=n.Z()),e>i.highestListenSequenceNumber&&(i.highestListenSequenceNumber=e),r.Ta(t,i);});},t.prototype.Ra=function(t,e){var n=this;return this.ga(t,e).next(function(){return n.ma(t).next(function(r){return r.targetCount+=1,n.Pa(e,r),n.Ta(t,r);});});},t.prototype.ya=function(t,e){return this.ga(t,e);},t.prototype.Va=function(t,e){var n=this;return this.pa(t,e.targetId).next(function(){return oo(t).delete(e.targetId);}).next(function(){return n.ma(t);}).next(function(e){return g(e.targetCount>0),e.targetCount-=1,n.Ta(t,e);});},/**
	     * Drops any targets with sequence number less than or equal to the upper bound, excepting those
	     * present in `activeTargetIds`. Document associations for the removed targets are also removed.
	     * Returns the number of targets removed.
	     */t.prototype.po=function(t,e,n){var r=this,i=0,o=[];return oo(t).rs(function(s,u){var a=Ii(u);a.sequenceNumber<=e&&null===n.get(a.targetId)&&(i++,o.push(r.Va(t,a)));}).next(function(){return yr.$n(o);}).next(function(){return i;});},/**
	     * Call provided function with each `TargetData` that we have cached.
	     */t.prototype.Ce=function(t,e){return oo(t).rs(function(t,n){var r=Ii(n);e(r);});},t.prototype.ma=function(t){return so(t).get($i.key).next(function(t){return g(null!==t),t;});},t.prototype.Ta=function(t,e){return so(t).put($i.key,e);},t.prototype.ga=function(t,e){return oo(t).put(Ei(this.serializer,e));},/**
	     * In-place updates the provided metadata to account for values in the given
	     * TargetData. Saving is done separately. Returns true if there were any
	     * changes to the metadata.
	     */t.prototype.Pa=function(t,e){var n=!1;return t.targetId>e.highestTargetId&&(e.highestTargetId=t.targetId,n=!0),t.sequenceNumber>e.highestListenSequenceNumber&&(e.highestListenSequenceNumber=t.sequenceNumber,n=!0),n;},t.prototype.ba=function(t){return this.ma(t).next(function(t){return t.targetCount;});},t.prototype.va=function(t,e){// Iterating by the canonicalId may yield more than one result because
	// canonicalId values are not required to be unique per target. This query
	// depends on the queryTargets index to be efficient.
	var n=lt(e),r=IDBKeyRange.bound([n,Number.NEGATIVE_INFINITY],[n,Number.POSITIVE_INFINITY]),i=null;return oo(t).rs({range:r,index:Hi.queryTargetsIndexName},function(t,n,r){var o=Ii(n);// After finding a potential match, check that the target is
	// actually equal to the requested target.
	pt(e,o.target)&&(i=o,r.done());}).next(function(){return i;});},t.prototype.Sa=function(t,e,n){var r=this,i=[],o=uo(t);// PORTING NOTE: The reverse index (documentsTargets) is maintained by
	// IndexedDb.
	return e.forEach(function(e){var s=hi(e.path);i.push(o.put(new Yi(n,s))),i.push(r.No.Da(t,n,e));}),yr.$n(i);},t.prototype.Ca=function(t,e,n){var r=this,i=uo(t);// PORTING NOTE: The reverse index (documentsTargets) is maintained by
	// IndexedDb.
	return yr.forEach(e,function(e){var o=hi(e.path);return yr.$n([i.delete([n,o]),r.No.Na(t,n,e)]);});},t.prototype.pa=function(t,e){var n=uo(t),r=IDBKeyRange.bound([e],[e+1],/*lowerOpen=*/!1,/*upperOpen=*/!0);return n.delete(r);},t.prototype.Fa=function(t,e){var n=IDBKeyRange.bound([e],[e+1],/*lowerOpen=*/!1,/*upperOpen=*/!0),r=uo(t),i=Ot();return r.rs({range:n,ss:!0},function(t,e,n){var r=pi(t[1]),o=new A(r);i=i.add(o);}).next(function(){return i;});},t.prototype.Ho=function(t,e){var n=hi(e.path),r=IDBKeyRange.bound([n],[$(n)],/*lowerOpen=*/!1,/*upperOpen=*/!0),i=0;return uo(t).rs({index:Yi.documentTargetsIndex,ss:!0,range:r},function(t,e,n){var r=t[0];// Having a sentinel row for a document does not count as containing that document;
	// For the target cache, containing the document means the document is part of some
	// target.
	t[1];0!==r&&(i++,n.done());}).next(function(){return i>0;});},/**
	     * Looks up a TargetData entry by target ID.
	     *
	     * @param targetId The target ID of the TargetData entry to look up.
	     * @return The cached TargetData entry, or null if the cache has no entry for
	     * the target.
	     */// PORTING NOTE: Multi-tab only.
	t.prototype.Ue=function(t,e){return oo(t).get(e).next(function(t){return t?Ii(t):null;});},t;}();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Helper to get a typed SimpleDbStore for the queries object store.
	 */function oo(t){return ho.Qn(t,Hi.store);}/**
	 * Helper to get a typed SimpleDbStore for the target globals object store.
	 */function so(t){return ho.Qn(t,$i.store);}/**
	 * Helper to get a typed SimpleDbStore for the document target object store.
	 */function uo(t){return ho.Qn(t,Yi.store);}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */var ao="Failed to obtain exclusive access to the persistence layer. To allow shared access, make sure to invoke `enablePersistence()` with `synchronizeTabs:true` in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.",co=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this)||this).jo=t,r.xa=n,r;}return t.__extends(n,e),n;}(ei),ho=/** @class */function(){function e(/**
	     * Whether to synchronize the in-memory state of multiple tabs and share
	     * access to local persistence.
	     */t,n,r,i,o,s,u,h,f,/**
	     * If set to true, forcefully obtains database access. Existing tabs will
	     * no longer be able to access IndexedDB.
	     */l){if(this.allowTabSynchronization=t,this.persistenceKey=n,this.clientId=r,this.fn=o,this.window=s,this.document=u,this.$a=f,this.ka=l,this.Ma=null,this.Oa=!1,this.isPrimary=!1,this.networkEnabled=!0,/** Our window.unload handler, if registered. */this.La=null,this.inForeground=!1,/** Our 'visibilitychange' listener if registered. */this.Ba=null,/** The client metadata refresh task. */this.qa=null,/** The last time we garbage collected the client metadata object store. */this.Ua=Number.NEGATIVE_INFINITY,/** A listener to notify on primary state changes. */this.Qa=function(t){return Promise.resolve();},!e.Ln())throw new c(a.UNIMPLEMENTED,"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");this.No=new po(this,i),this.Wa=n+"main",this.serializer=new di(h),this.ja=new gr(this.Wa,10,new Fi(this.serializer)),this.Ka=new io(this.No,this.serializer),this.Dr=new eo(),this.vr=function(t,e){return new Li(t,e);}(this.serializer,this.Dr),this.window&&this.window.localStorage?this.Ga=this.window.localStorage:(this.Ga=null,!1===l&&p("IndexedDbPersistence","LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."));}return e.Qn=function(t,e){if(t instanceof co)return gr.Qn(t.jo,e);throw y();},/**
	     * Attempt to start IndexedDb persistence.
	     *
	     * @return {Promise<void>} Whether persistence was enabled.
	     */e.prototype.start=function(){var t=this;// NOTE: This is expected to fail sometimes (in the case of another tab
	// already having the persistence lock), so it's the first thing we should
	// do.
	return this.za().then(function(){if(!t.isPrimary&&!t.allowTabSynchronization)// Fail `start()` if `synchronizeTabs` is disabled and we cannot
	// obtain the primary lease.
	throw new c(a.FAILED_PRECONDITION,ao);return t.Ha(),t.Ya(),t.Ja(),t.runTransaction("getHighestListenSequenceNumber","readonly",function(e){return t.Ka.Ia(e);});}).then(function(e){t.Ma=new qr(e,t.$a);}).then(function(){t.Oa=!0;}).catch(function(e){return t.ja&&t.ja.close(),Promise.reject(e);});},/**
	     * Registers a listener that gets called when the primary state of the
	     * instance changes. Upon registering, this listener is invoked immediately
	     * with the current primary state.
	     *
	     * PORTING NOTE: This is only used for Web multi-tab.
	     */e.prototype.Xa=function(e){var n=this;return this.Qa=function(r){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){return this.Ei?[2/*return*/,e(r)]:[2/*return*/];});});},e(this.isPrimary);},/**
	     * Registers a listener that gets called when the database receives a
	     * version change event indicating that it has deleted.
	     *
	     * PORTING NOTE: This is only used for Web multi-tab.
	     */e.prototype.Za=function(e){var n=this;this.ja.Kn(function(r){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return null===r.newVersion?[4/*yield*/,e()]:[3/*break*/,2];case 1:t.sent(),t.label=2;case 2:return[2/*return*/];}});});});},/**
	     * Adjusts the current network state in the client's metadata, potentially
	     * affecting the primary lease.
	     *
	     * PORTING NOTE: This is only used for Web multi-tab.
	     */e.prototype.tc=function(e){var n=this;this.networkEnabled!==e&&(this.networkEnabled=e,// Schedule a primary lease refresh for immediate execution. The eventual
	// lease update will be propagated via `primaryStateListener`.
	this.fn.ws(function(){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return this.Ei?[4/*yield*/,this.za()]:[3/*break*/,2];case 1:t.sent(),t.label=2;case 2:return[2/*return*/];}});});}));},/**
	     * Updates the client metadata in IndexedDb and attempts to either obtain or
	     * extend the primary lease for the local client. Asynchronously notifies the
	     * primary state listener if the client either newly obtained or released its
	     * primary lease.
	     */e.prototype.za=function(){var t=this;return this.runTransaction("updateClientMetadataAndTryBecomePrimary","readwrite",function(e){return lo(e).put(new Zi(t.clientId,Date.now(),t.networkEnabled,t.inForeground)).next(function(){if(t.isPrimary)return t.ec(e).next(function(e){e||(t.isPrimary=!1,t.fn.Cs(function(){return t.Qa(!1);}));});}).next(function(){return t.nc(e);}).next(function(n){return t.isPrimary&&!n?t.sc(e).next(function(){return!1;}):!!n&&t.ic(e).next(function(){return!0;});});}).catch(function(e){if(_r(e))// Proceed with the existing state. Any subsequent access to
	// IndexedDB will verify the lease.
	return l("IndexedDbPersistence","Failed to extend owner lease: ",e),t.isPrimary;if(!t.allowTabSynchronization)throw e;return l("IndexedDbPersistence","Releasing owner lease after error during lease refresh",e),/* isPrimary= */!1;}).then(function(e){t.isPrimary!==e&&t.fn.Cs(function(){return t.Qa(e);}),t.isPrimary=e;});},e.prototype.ec=function(t){var e=this;return fo(t).get(qi.key).next(function(t){return yr.resolve(e.rc(t));});},e.prototype.oc=function(t){return lo(t).delete(this.clientId);},/**
	     * If the garbage collection threshold has passed, prunes the
	     * RemoteDocumentChanges and the ClientMetadata store based on the last update
	     * time of all clients.
	     */e.prototype.ac=function(){return t.__awaiter(this,void 0,void 0,function(){var n,r,i,o,s=this;return t.__generator(this,function(t){switch(t.label){case 0:return!this.isPrimary||this.cc(this.Ua,18e5)?[3/*break*/,2]:(this.Ua=Date.now(),[4/*yield*/,this.runTransaction("maybeGarbageCollectMultiClientState","readwrite-primary",function(t){var n=e.Qn(t,Zi.store);return n.ts().next(function(t){var e=s.uc(t,18e5),r=t.filter(function(t){return-1===e.indexOf(t);});// Delete metadata for clients that are no longer considered active.
	return yr.forEach(r,function(t){return n.delete(t.clientId);}).next(function(){return r;});});}).catch(function(){return[];})]);case 1:// Delete potential leftover entries that may continue to mark the
	// inactive clients as zombied in LocalStorage.
	// Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
	// the client atomically, but we can't. So we opt to delete the IndexedDb
	// entries first to avoid potentially reviving a zombied client.
	if(n=t.sent(),this.Ga)for(r=0,i=n;r<i.length;r++){o=i[r],this.Ga.removeItem(this.hc(o.clientId));}t.label=2;case 2:return[2/*return*/];}});});},/**
	     * Schedules a recurring timer to update the client metadata and to either
	     * extend or acquire the primary lease if the client is eligible.
	     */e.prototype.Ja=function(){var t=this;this.qa=this.fn.yn("client_metadata_refresh"/* ClientMetadataRefresh */,4e3,function(){return t.za().then(function(){return t.ac();}).then(function(){return t.Ja();});});},/** Checks whether `client` is the local client. */e.prototype.rc=function(t){return!!t&&t.ownerId===this.clientId;},/**
	     * Evaluate the state of all active clients and determine whether the local
	     * client is or can act as the holder of the primary lease. Returns whether
	     * the client is eligible for the lease, but does not actually acquire it.
	     * May return 'false' even if there is no active leaseholder and another
	     * (foreground) client should become leaseholder instead.
	     */e.prototype.nc=function(t){var e=this;return this.ka?yr.resolve(!0):fo(t).get(qi.key).next(function(n){// A client is eligible for the primary lease if:
	// - its network is enabled and the client's tab is in the foreground.
	// - its network is enabled and no other client's tab is in the
	//   foreground.
	// - every clients network is disabled and the client's tab is in the
	//   foreground.
	// - every clients network is disabled and no other client's tab is in
	//   the foreground.
	// - the `forceOwningTab` setting was passed in.
	if(null!==n&&e.cc(n.leaseTimestampMs,5e3)&&!e.lc(n.ownerId)){if(e.rc(n)&&e.networkEnabled)return!0;if(!e.rc(n)){if(!n.allowTabSynchronization)// Fail the `canActAsPrimary` check if the current leaseholder has
	// not opted into multi-tab synchronization. If this happens at
	// client startup, we reject the Promise returned by
	// `enablePersistence()` and the user can continue to use Firestore
	// with in-memory persistence.
	// If this fails during a lease refresh, we will instead block the
	// AsyncQueue from executing further operations. Note that this is
	// acceptable since mixing & matching different `synchronizeTabs`
	// settings is not supported.
	// TODO(b/114226234): Remove this check when `synchronizeTabs` can
	// no longer be turned off.
	throw new c(a.FAILED_PRECONDITION,ao);return!1;}}return!(!e.networkEnabled||!e.inForeground)||lo(t).ts().next(function(t){return void 0===e.uc(t,5e3).find(function(t){if(e.clientId!==t.clientId){var n=!e.networkEnabled&&t.networkEnabled,r=!e.inForeground&&t.inForeground,i=e.networkEnabled===t.networkEnabled;if(n||r&&i)return!0;}return!1;});});}).next(function(t){return e.isPrimary!==t&&l("IndexedDbPersistence","Client "+(t?"is":"is not")+" eligible for a primary lease."),t;});},e.prototype.Di=function(){return t.__awaiter(this,void 0,void 0,function(){var e=this;return t.__generator(this,function(t){switch(t.label){case 0:// Use `SimpleDb.runTransaction` directly to avoid failing if another tab
	// has obtained the primary lease.
	// The shutdown() operations are idempotent and can be called even when
	// start() aborted (e.g. because it couldn't acquire the persistence lease).
	return this.Oa=!1,this._c(),this.qa&&(this.qa.cancel(),this.qa=null),this.fc(),this.dc(),[4/*yield*/,this.ja.runTransaction("shutdown","readwrite",[qi.store,Zi.store],function(t){var n=new co(t,qr.ai);return e.sc(n).next(function(){return e.oc(n);});})];case 1:// The shutdown() operations are idempotent and can be called even when
	// start() aborted (e.g. because it couldn't acquire the persistence lease).
	// Use `SimpleDb.runTransaction` directly to avoid failing if another tab
	// has obtained the primary lease.
	return t.sent(),this.ja.close(),// Remove the entry marking the client as zombied from LocalStorage since
	// we successfully deleted its metadata from IndexedDb.
	this.wc(),[2/*return*/];}});});},/**
	     * Returns clients that are not zombied and have an updateTime within the
	     * provided threshold.
	     */e.prototype.uc=function(t,e){var n=this;return t.filter(function(t){return n.cc(t.updateTimeMs,e)&&!n.lc(t.clientId);});},/**
	     * Returns the IDs of the clients that are currently active. If multi-tab
	     * is not supported, returns an array that only contains the local client's
	     * ID.
	     *
	     * PORTING NOTE: This is only used for Web multi-tab.
	     */e.prototype.pi=function(){var t=this;return this.runTransaction("getActiveClients","readonly",function(e){return lo(e).ts().next(function(e){return t.uc(e,18e5).map(function(t){return t.clientId;});});});},Object.defineProperty(e.prototype,"Ei",{get:function get(){return this.Oa;},enumerable:!1,configurable:!0}),e.prototype.mc=function(t){return Ti.xo(t,this.serializer,this.Dr,this.No);},e.prototype.Tc=function(){return this.Ka;},e.prototype.Ec=function(){return this.vr;},e.prototype.Ic=function(){return this.Dr;},e.prototype.runTransaction=function(t,e,n){var r=this;l("IndexedDbPersistence","Starting transaction:",t);var i,o="readonly"===e?"readonly":"readwrite";// Do all transactions as readwrite against all object stores, since we
	// are the only reader/writer.
	return this.ja.runTransaction(t,o,to,function(o){return i=new co(o,r.Ma?r.Ma.next():qr.ai),"readwrite-primary"===e?r.ec(i).next(function(t){return!!t||r.nc(i);}).next(function(e){if(!e)throw p("Failed to obtain primary lease for action '"+t+"'."),r.isPrimary=!1,r.fn.Cs(function(){return r.Qa(!1);}),new c(a.FAILED_PRECONDITION,ti);return n(i);}).next(function(t){return r.ic(i).next(function(){return t;});}):r.Ac(i).next(function(){return n(i);});}).then(function(t){return i.br(),t;});},/**
	     * Verifies that the current tab is the primary leaseholder or alternatively
	     * that the leaseholder has opted into multi-tab synchronization.
	     */// TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
	// be turned off.
	e.prototype.Ac=function(t){var e=this;return fo(t).get(qi.key).next(function(t){if(null!==t&&e.cc(t.leaseTimestampMs,5e3)&&!e.lc(t.ownerId)&&!e.rc(t)&&!(e.ka||e.allowTabSynchronization&&t.allowTabSynchronization))throw new c(a.FAILED_PRECONDITION,ao);});},/**
	     * Obtains or extends the new primary lease for the local client. This
	     * method does not verify that the client is eligible for this lease.
	     */e.prototype.ic=function(t){var e=new qi(this.clientId,this.allowTabSynchronization,Date.now());return fo(t).put(qi.key,e);},e.Ln=function(){return gr.Ln();},/** Checks the primary lease and removes it if we are the current primary. */e.prototype.sc=function(t){var e=this,n=fo(t);return n.get(qi.key).next(function(t){return e.rc(t)?(l("IndexedDbPersistence","Releasing primary lease."),n.delete(qi.key)):yr.resolve();});},/** Verifies that `updateTimeMs` is within `maxAgeMs`. */e.prototype.cc=function(t,e){var n=Date.now();return!(t<n-e||t>n&&(p("Detected an update time that is in the future: "+t+" > "+n),1));},e.prototype.Ha=function(){var t=this;null!==this.document&&"function"==typeof this.document.addEventListener&&(this.Ba=function(){t.fn.ws(function(){return t.inForeground="visible"===t.document.visibilityState,t.za();});},this.document.addEventListener("visibilitychange",this.Ba),this.inForeground="visible"===this.document.visibilityState);},e.prototype.fc=function(){this.Ba&&(this.document.removeEventListener("visibilitychange",this.Ba),this.Ba=null);},/**
	     * Attaches a window.unload handler that will synchronously write our
	     * clientId to a "zombie client id" location in LocalStorage. This can be used
	     * by tabs trying to acquire the primary lease to determine that the lease
	     * is no longer valid even if the timestamp is recent. This is particularly
	     * important for the refresh case (so the tab correctly re-acquires the
	     * primary lease). LocalStorage is used for this rather than IndexedDb because
	     * it is a synchronous API and so can be used reliably from  an unload
	     * handler.
	     */e.prototype.Ya=function(){var t,e=this;"function"==typeof(null===(t=this.window)||void 0===t?void 0:t.addEventListener)&&(this.La=function(){// Note: In theory, this should be scheduled on the AsyncQueue since it
	// accesses internal state. We execute this code directly during shutdown
	// to make sure it gets a chance to run.
	e._c(),e.fn.ws(function(){return e.Di();});},this.window.addEventListener("unload",this.La));},e.prototype.dc=function(){this.La&&(this.window.removeEventListener("unload",this.La),this.La=null);},/**
	     * Returns whether a client is "zombied" based on its LocalStorage entry.
	     * Clients become zombied when their tab closes without running all of the
	     * cleanup logic in `shutdown()`.
	     */e.prototype.lc=function(t){var e;try{var n=null!==(null===(e=this.Ga)||void 0===e?void 0:e.getItem(this.hc(t)));return l("IndexedDbPersistence","Client '"+t+"' "+(n?"is":"is not")+" zombied in LocalStorage"),n;}catch(t){// Gracefully handle if LocalStorage isn't working.
	return p("IndexedDbPersistence","Failed to get zombied client id.",t),!1;}},/**
	     * Record client as zombied (a client that had its tab closed). Zombied
	     * clients are ignored during primary tab selection.
	     */e.prototype._c=function(){if(this.Ga)try{this.Ga.setItem(this.hc(this.clientId),String(Date.now()));}catch(t){// Gracefully handle if LocalStorage isn't available / working.
	p("Failed to set zombie client id.",t);}},/** Removes the zombied client entry if it exists. */e.prototype.wc=function(){if(this.Ga)try{this.Ga.removeItem(this.hc(this.clientId));}catch(t){// Ignore
	}},e.prototype.hc=function(t){return"firestore_zombie_"+this.persistenceKey+"_"+t;},e;}();/**
	 * Oldest acceptable age in milliseconds for client metadata before the client
	 * is considered inactive and its associated data is garbage collected.
	 *//**
	 * Helper to get a typed SimpleDbStore for the primary client object store.
	 */function fo(t){return ho.Qn(t,qi.store);}/**
	 * Helper to get a typed SimpleDbStore for the client metadata object store.
	 */function lo(t){return ho.Qn(t,Zi.store);}/** Provides LRU functionality for IndexedDB persistence. */var po=/** @class */function(){function t(t,e){this.db=t,this.wo=new ci(this,e);}return t.prototype.Po=function(t){var e=this.Rc(t);return this.db.Tc().ba(t).next(function(t){return e.next(function(e){return t+e;});});},t.prototype.Rc=function(t){var e=0;return this.Vo(t,function(t){e++;}).next(function(){return e;});},t.prototype.Ce=function(t,e){return this.db.Tc().Ce(t,e);},t.prototype.Vo=function(t,e){return this.gc(t,function(t,n){return e(n);});},t.prototype.Da=function(t,e,n){return vo(t,n);},t.prototype.Na=function(t,e,n){return vo(t,n);},t.prototype.po=function(t,e,n){return this.db.Tc().po(t,e,n);},t.prototype.Go=function(t,e){return vo(t,e);},/**
	     * Returns true if anything would prevent this document from being garbage
	     * collected, given that the document in question is not present in any
	     * targets and has a sequence number less than or equal to the upper bound for
	     * the collection run.
	     */t.prototype.Pc=function(t,e){return function(t,e){var n=!1;return xi(t).os(function(r){return Ni(t,r,e).next(function(t){return t&&(n=!0),yr.resolve(!t);});}).next(function(){return n;});}(t,e);},t.prototype.bo=function(t,e){var n=this,r=this.db.Ec().ra(),i=[],o=0;return this.gc(t,function(s,u){if(u<=e){var a=n.Pc(t,s).next(function(e){if(!e)// Our size accounting requires us to read all documents before
	// removing them.
	return o++,r.Rr(t,s).next(function(){return r.Ar(s),uo(t).delete([0,hi(s.path)]);});});i.push(a);}}).next(function(){return yr.$n(i);}).next(function(){return r.apply(t);}).next(function(){return o;});},t.prototype.removeTarget=function(t,e){var n=e.st(t.xa);return this.db.Tc().ya(t,n);},t.prototype.yc=function(t,e){return vo(t,e);},/**
	     * Call provided function for each document in the cache that is 'orphaned'. Orphaned
	     * means not a part of any target, so the only entry in the target-document index for
	     * that document will be the sentinel row (targetId 0), which will also have the sequence
	     * number for the last time the document was accessed.
	     */t.prototype.gc=function(t,e){var n,r=uo(t),i=qr.ai;return r.rs({index:Yi.documentTargetsIndex},function(t,r){var o=t[0],s=(t[1],r.path),u=r.sequenceNumber;0===o?(// if nextToReport is valid, report it, this is a new key so the
	// last one must not be a member of any targets.
	i!==qr.ai&&e(new A(pi(n)),i),// set nextToReport to be this sequence number. It's the next one we
	// might report, if we don't find any targets for this document.
	// Note that the sequence number must be defined when the targetId
	// is 0.
	i=u,n=s):// set nextToReport to be invalid, we know we don't need to report
	// this one since we found a target for it.
	i=qr.ai;}).next(function(){// Since we report sequence numbers after getting to the next key, we
	// need to check if the last key we iterated over was an orphaned
	// document and report it.
	i!==qr.ai&&e(new A(pi(n)),i);});},t.prototype.So=function(t){return this.db.Ec().aa(t);},t;}();function vo(t,e){return uo(t).put(/**
	 * @return A value suitable for writing a sentinel row in the target-document
	 * store.
	 */function(t,e){return new Yi(0,hi(t.path),e);}(e,t.xa));}/**
	 * Generates a string used as a prefix when storing data in IndexedDB and
	 * LocalStorage.
	 */function yo(t,e){// Use two different prefix formats:
	//   * firestore / persistenceKey / projectID . databaseID / ...
	//   * firestore / persistenceKey / projectID / ...
	// projectIDs are DNS-compatible names and cannot contain dots
	// so there's no danger of collisions.
	var n=t.projectId;return t.j||(n+="."+t.database),"firestore/"+e+"/"+n+"/"/**
	 * Implements `LocalStore` interface.
	 *
	 * Note: some field defined in this class might have public access level, but
	 * the class is not exported so they are only accessible from this module.
	 * This is useful to implement optional features (like bundles) in free
	 * functions, such that they are tree-shakeable.
	 */;}var go=/** @class */function(){function t(/** Manages our in-memory or durable persistence. */t,e,n){this.persistence=t,this.Vc=e,/**
	             * Maps a targetID to data about its target.
	             *
	             * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
	             * of `applyRemoteEvent()` idempotent.
	             */this.bc=new bt(H),/** Maps a target to its targetID. */// TODO(wuandy): Evaluate if TargetId can be part of Target.
	this.vc=new it(function(t){return lt(t);},pt),/**
	             * The read time of the last entry processed by `getNewDocumentChanges()`.
	             *
	             * PORTING NOTE: This is only used for multi-tab synchronization.
	             */this.Sc=st.min(),this.Sr=t.mc(n),this.Dc=t.Ec(),this.Ka=t.Tc(),this.Cc=new ni(this.Dc,this.Sr,this.persistence.Ic()),this.Vc.Nc(this.Cc);}return t.prototype.Io=function(t){var e=this;return this.persistence.runTransaction("Collect garbage","readwrite-primary",function(n){return t.vo(n,e.bc);});},t;}();/**
	 * Acknowledges the given batch.
	 *
	 * On the happy path when a batch is acknowledged, the local store will
	 *
	 *  + remove the batch from the mutation queue;
	 *  + apply the changes to the remote document cache;
	 *  + recalculate the latency compensated view implied by those changes (there
	 *    may be mutations in the queue that affect the documents but haven't been
	 *    acknowledged yet); and
	 *  + give the changed documents back the sync engine
	 *
	 * @returns The resulting (modified) documents.
	 */function mo(t,e){var n=m(t);return n.persistence.runTransaction("Acknowledge batch","readwrite-primary",function(t){var r=e.batch.keys(),i=n.Dc.ra({oa:!0});return function(t,e,n,r){var i=n.batch,o=i.keys(),s=yr.resolve();return o.forEach(function(t){s=s.next(function(){return r.Rr(e,t);}).next(function(e){var o=e,s=n.dr.get(t);g(null!==s),(!o||o.version.L(s)<0)&&(o=i.cr(t,o,n))&&// We use the commitVersion as the readTime rather than the
	// document's updateTime since the updateTime is not advanced
	// for updates that do not modify the underlying document.
	r.Er(o,n._r);});}),s.next(function(){return t.Sr.Wo(e,i);});}(n,t,e,i).next(function(){return i.apply(t);}).next(function(){return n.Sr.zo(t);}).next(function(){return n.Cc.kr(t,r);});});}/**
	 * Removes mutations from the MutationQueue for the specified batch;
	 * LocalDocuments will be recalculated.
	 *
	 * @returns The resulting modified documents.
	 *//**
	 * Returns the last consistent snapshot processed (used by the RemoteStore to
	 * determine whether to buffer incoming snapshots from the backend).
	 */function wo(t){var e=m(t);return e.persistence.runTransaction("Get last remote snapshot version","readonly",function(t){return e.Ka.Ea(t);});}/**
	 * Updates the "ground-state" (remote) documents. We assume that the remote
	 * event reflects any write batches that have been acknowledged or rejected
	 * (i.e. we do not re-apply local mutations to updates from this event).
	 *
	 * LocalDocuments are re-calculated if there are remaining mutations in the
	 * queue.
	 */function _o(t,e){var n=m(t),r=e.nt,i=n.bc;return n.persistence.runTransaction("Apply remote event","readwrite-primary",function(t){var o=n.Dc.ra({oa:!0});// Reset newTargetDataByTargetMap in case this transaction gets re-run.
	i=n.bc;var s=[];e.zt.forEach(function(e,o){var u=i.get(o);if(u){// Only update the remote keys if the target is still active. This
	// ensures that we can persist the updated target data along with
	// the updated assignment.
	s.push(n.Ka.Ca(t,e.se,o).next(function(){return n.Ka.Sa(t,e.ee,o);}));var a=e.resumeToken;// Update the resume token if the change includes one.
	if(a.O()>0){var c=u.it(a,r).st(t.xa);i=i.ot(o,c),// Update the target data if there are target changes (or if
	// sufficient time has passed since the last update).
	/**
	     * Returns true if the newTargetData should be persisted during an update of
	     * an active target. TargetData should always be persisted when a target is
	     * being released and should not call this function.
	     *
	     * While the target is active, TargetData updates can be omitted when nothing
	     * about the target has changed except metadata like the resume token or
	     * snapshot version. Occasionally it's worth the extra write to prevent these
	     * values from getting too stale after a crash, but this doesn't have to be
	     * too frequent.
	     */function(t,e,n){// Always persist target data if we don't already have a resume token.
	return g(e.resumeToken.O()>0),0===t.resumeToken.O()||// Don't allow resume token changes to be buffered indefinitely. This
	// allows us to be reasonably up-to-date after a crash and avoids needing
	// to loop over all active queries on shutdown. Especially in the browser
	// we may not get time to do anything interesting while the current tab is
	// closing.
	e.nt.X()-t.nt.X()>=3e8||n.ee.size+n.ne.size+n.se.size>0;}(u,c,e)&&s.push(n.Ka.ya(t,c));}}});var u=St(),a=Ot();// HACK: The only reason we allow a null snapshot version is so that we
	// can synthesize remote events when we get permission denied errors while
	// trying to resolve the state of a locally cached document that is in
	// limbo.
	if(e.Yt.forEach(function(t,e){a=a.add(t);}),// Each loop iteration only affects its "own" doc, so it's safe to get all the remote
	// documents in advance in a single call.
	s.push(o.getEntries(t,a).next(function(i){e.Yt.forEach(function(a,c){var h=i.get(a);// Note: The order of the steps below is important, since we want
	// to ensure that rejected limbo resolutions (which fabricate
	// NoDocuments with SnapshotVersion.min()) never add documents to
	// cache.
	c instanceof Rn&&c.version.isEqual(st.min())?(// NoDocuments with SnapshotVersion.min() are used in manufactured
	// events. We remove these documents from cache since we lost
	// access.
	o.Ar(a,r),u=u.ot(a,c)):null==h||c.version.L(h.version)>0||0===c.version.L(h.version)&&h.hasPendingWrites?(o.Er(c,r),u=u.ot(a,c)):l("LocalStore","Ignoring outdated watch update for ",a,". Current version:",h.version," Watch version:",c.version),e.Jt.has(a)&&s.push(n.persistence.No.yc(t,a));});})),!r.isEqual(st.min())){var c=n.Ka.Ea(t).next(function(e){return n.Ka.Aa(t,t.xa,r);});s.push(c);}return yr.$n(s).next(function(){return o.apply(t);}).next(function(){return n.Cc.Mr(t,u);});}).then(function(t){return n.bc=i,t;});}/**
	 * Gets the mutation batch after the passed in batchId in the mutation queue
	 * or null if empty.
	 * @param afterBatchId If provided, the batch to search after.
	 * @returns The next mutation or null if there wasn't one.
	 */function bo(t,e){var n=m(t);return n.persistence.runTransaction("Get next mutation batch","readonly",function(t){return void 0===e&&(e=-1),n.Sr.Bo(t,e);});}/**
	 * Reads the current value of a Document with a given key or null if not
	 * found - used for testing.
	 *//**
	 * Assigns the given target an internal ID so that its results can be pinned so
	 * they don't get GC'd. A target must be allocated in the local store before
	 * the store can be used to manage its view.
	 *
	 * Allocating an already allocated `Target` will return the existing `TargetData`
	 * for that `Target`.
	 */function Io(t,e){var n=m(t);return n.persistence.runTransaction("Allocate target","readwrite",function(t){var r;return n.Ka.va(t,e).next(function(i){return i?(// This target has been listened to previously, so reuse the
	// previous targetID.
	// TODO(mcg): freshen last accessed date?
	r=i,yr.resolve(r)):n.Ka.wa(t).next(function(i){return r=new gt(e,i,0/* Listen */,t.xa),n.Ka.Ra(t,r).next(function(){return r;});});});}).then(function(t){// If Multi-Tab is enabled, the existing target data may be newer than
	// the in-memory data
	var r=n.bc.get(t.targetId);return(null===r||t.nt.L(r.nt)>0)&&(n.bc=n.bc.ot(t.targetId,t),n.vc.set(e,t.targetId)),t;});}/**
	 * Returns the TargetData as seen by the LocalStore, including updates that may
	 * have not yet been persisted to the TargetCache.
	 */// Visible for testing.
	/**
	 * Unpins all the documents associated with the given target. If
	 * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
	 * directly removes the associated target data from the target cache.
	 *
	 * Releasing a non-existing `Target` is a no-op.
	 */// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
	function Eo(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s,u;return t.__generator(this,function(t){switch(t.label){case 0:i=m(e),o=i.bc.get(n),s=r?"readwrite":"readwrite-primary",t.label=1;case 1:return t.trys.push([1,4,,5]),r?[3/*break*/,3]:[4/*yield*/,i.persistence.runTransaction("Release target",s,function(t){return i.persistence.No.removeTarget(t,o);})];case 2:t.sent(),t.label=3;case 3:return[3/*break*/,5];case 4:if(!_r(u=t.sent()))throw u;// All `releaseTarget` does is record the final metadata state for the
	// target, but we've been recording this periodically during target
	// activity. If we lose this write this could cause a very slight
	// difference in the order of target deletion during GC, but we
	// don't define exact LRU semantics so this is acceptable.
	return l("LocalStore","Failed to update sequence numbers for target "+n+": "+u),[3/*break*/,5];case 5:return i.bc=i.bc.remove(n),i.vc.delete(o.target),[2/*return*/];}});});}/**
	 * Runs the specified query against the local store and returns the results,
	 * potentially taking advantage of query data from previous executions (such
	 * as the set of remote keys).
	 *
	 * @param usePreviousResults Whether results from previous executions can
	 * be used to optimize this query execution.
	 */function To(t,e,n){var r=m(t),i=st.min(),o=Ot();return r.persistence.runTransaction("Execute query","readonly",function(t){return function(t,e,n){var r=m(t),i=r.vc.get(n);return void 0!==i?yr.resolve(r.bc.get(i)):r.Ka.va(e,n);}(r,t,zn(e)).next(function(e){if(e)return i=e.lastLimboFreeSnapshotVersion,r.Ka.Fa(t,e.targetId).next(function(t){o=t;});}).next(function(){return r.Vc.Lr(t,e,n?i:st.min(),n?o:Ot());}).next(function(t){return{documents:t,Fc:o};});});}// PORTING NOTE: Multi-Tab only.
	function No(t,e){var n=m(t),r=m(n.Ka),i=n.bc.get(e);return i?Promise.resolve(i.target):n.persistence.runTransaction("Get target data","readonly",function(t){return r.Ue(t,e).next(function(t){return t?t.target:null;});});}/**
	 * Returns the set of documents that have been updated since the last call.
	 * If this is the first call, returns the set of changes since client
	 * initialization. Further invocations will return document that have changed
	 * since the prior call.
	 */// PORTING NOTE: Multi-Tab only.
	function Ao(t){var e=m(t);return e.persistence.runTransaction("Get new document changes","readonly",function(t){return function(t,e,n){var r=m(t),i=St(),o=gi(n),s=Oi(e),u=IDBKeyRange.lowerBound(o,!0);return s.rs({index:Ki.readTimeIndex,range:u},function(t,e){// Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
	// the documents directly since we want to keep sentinel deletes.
	var n=vi(r.serializer,e);i=i.ot(n.key,n),o=e.readTime;}).next(function(){return{xc:i,readTime:mi(o)};});}(e.Dc,t,e.Sc);}).then(function(t){var n=t.xc,r=t.readTime;return e.Sc=r,n;});}/**
	 * Reads the newest document change from persistence and moves the internal
	 * synchronization marker forward so that calls to `getNewDocumentChanges()`
	 * only return changes that happened after client initialization.
	 */// PORTING NOTE: Multi-Tab only.
	function So(e){return t.__awaiter(this,void 0,void 0,function(){var n;return t.__generator(this,function(t){return[2/*return*/,(n=m(e)).persistence.runTransaction("Synchronize last document change read time","readonly",function(t){return function(t){var e=Oi(t),n=st.min();// If there are no existing entries, we return SnapshotVersion.min().
	return e.rs({index:Ki.readTimeIndex,reverse:!0},function(t,e,r){e.readTime&&(n=mi(e.readTime)),r.done();}).next(function(){return n;});}(t);}).then(function(t){n.Sc=t;})];});});}/**
	 * Verifies the error thrown by a LocalStore operation. If a LocalStore
	 * operation fails because the primary lease has been taken by another client,
	 * we ignore the error (the persistence layer will immediately call
	 * `applyPrimaryLease` to propagate the primary state change). All other errors
	 * are re-thrown.
	 *
	 * @param err An error returned by a LocalStore operation.
	 * @return A Promise that resolves after we recovered, or the original error.
	 */function Do(e){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){if(e.code!==a.FAILED_PRECONDITION||e.message!==ti)throw e;return l("LocalStore","Unexpectedly lost primary lease"),[2/*return*/];});});}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * A collection of references to a document from some kind of numbered entity
	 * (either a target ID or batch ID). As references are added to or removed from
	 * the set corresponding events are emitted to a registered garbage collector.
	 *
	 * Each reference is represented by a DocumentReference object. Each of them
	 * contains enough information to uniquely identify the reference. They are all
	 * stored primarily in a set sorted by key. A document is considered garbage if
	 * there's no references in that set (this can be efficiently checked thanks to
	 * sorting by key).
	 *
	 * ReferenceSet also keeps a secondary set that contains references sorted by
	 * IDs. This one is used to efficiently implement removal of all references by
	 * some target ID.
	 */var xo=/** @class */function(){function t(){// A set of outstanding references to a document sorted by key.
	this.$c=new Tt(Lo.kc),// A set of outstanding references to a document sorted by target id.
	this.Mc=new Tt(Lo.Oc)/** Returns true if the reference set contains no references. */;}return t.prototype.m=function(){return this.$c.m();},/** Adds a reference to the given document key for the given ID. */t.prototype.Da=function(t,e){var n=new Lo(t,e);this.$c=this.$c.add(n),this.Mc=this.Mc.add(n);},/** Add references to the given document keys for the given ID. */t.prototype.Lc=function(t,e){var n=this;t.forEach(function(t){return n.Da(t,e);});},/**
	     * Removes a reference to the given document key for the given
	     * ID.
	     */t.prototype.Na=function(t,e){this.Bc(new Lo(t,e));},t.prototype.qc=function(t,e){var n=this;t.forEach(function(t){return n.Na(t,e);});},/**
	     * Clears all references with a given ID. Calls removeRef() for each key
	     * removed.
	     */t.prototype.Uc=function(t){var e=this,n=new A(new E([])),r=new Lo(n,t),i=new Lo(n,t+1),o=[];return this.Mc.Ft([r,i],function(t){e.Bc(t),o.push(t.key);}),o;},t.prototype.Qc=function(){var t=this;this.$c.forEach(function(e){return t.Bc(e);});},t.prototype.Bc=function(t){this.$c=this.$c.delete(t),this.Mc=this.Mc.delete(t);},t.prototype.Wc=function(t){var e=new A(new E([])),n=new Lo(e,t),r=new Lo(e,t+1),i=Ot();return this.Mc.Ft([n,r],function(t){i=i.add(t.key);}),i;},t.prototype.Ho=function(t){var e=new Lo(t,0),n=this.$c.$t(e);return null!==n&&t.isEqual(n.key);},t;}(),Lo=/** @class */function(){function t(t,e){this.key=t,this.jc=e/** Compare by key then by ID */;}return t.kc=function(t,e){return A.i(t.key,e.key)||H(t.jc,e.jc);},/** Compare by ID then by key */t.Oc=function(t,e){return H(t.jc,e.jc)||A.i(t.key,e.key);},t;}(),ko=function ko(t,e){this.user=e,this.type="OAuth",this.Kc={},// Set the headers using Object Literal notation to avoid minification
	this.Kc.Authorization="Bearer "+t;},Ro=/** @class */function(){function t(){/**
	         * Stores the listener registered with setChangeListener()
	         * This isn't actually necessary since the UID never changes, but we use this
	         * to verify the listen contract is adhered to in tests.
	         */this.Gc=null;}return t.prototype.getToken=function(){return Promise.resolve(null);},t.prototype.zc=function(){},t.prototype.Hc=function(t){this.Gc=t,// Fire with initial user.
	t(Mr.UNAUTHENTICATED);},t.prototype.Yc=function(){this.Gc=null;},t;}(),Oo=/** @class */function(){function t(t){var e=this;/**
	         * The auth token listener registered with FirebaseApp, retained here so we
	         * can unregister it.
	         */this.Jc=null,/** Tracks the current User. */this.currentUser=Mr.UNAUTHENTICATED,this.Xc=!1,/**
	             * Counter used to detect if the token changed while a getToken request was
	             * outstanding.
	             */this.Zc=0,/** The listener registered with setChangeListener(). */this.Gc=null,this.forceRefresh=!1,this.Jc=function(){e.Zc++,e.currentUser=e.tu(),e.Xc=!0,e.Gc&&e.Gc(e.currentUser);},this.Zc=0,this.auth=t.getImmediate({optional:!0}),this.auth?this.auth.addAuthTokenListener(this.Jc):(// if auth is not available, invoke tokenListener once with null token
	this.Jc(null),t.get().then(function(t){e.auth=t,e.Jc&&// tokenListener can be removed by removeChangeListener()
	e.auth.addAuthTokenListener(e.Jc);},function(){}));}return t.prototype.getToken=function(){var t=this,e=this.Zc,n=this.forceRefresh;// Take note of the current value of the tokenCounter so that this method
	// can fail (with an ABORTED error) if there is a token change while the
	// request is outstanding.
	return this.forceRefresh=!1,this.auth?this.auth.getToken(n).then(function(n){// Cancel the request since the token changed while the request was
	// outstanding so the response is potentially for a previous user (which
	// user, we can't be sure).
	return t.Zc!==e?(l("FirebaseCredentialsProvider","getToken aborted due to token change."),t.getToken()):n?(g("string"==typeof n.accessToken),new ko(n.accessToken,t.currentUser)):null;}):Promise.resolve(null);},t.prototype.zc=function(){this.forceRefresh=!0;},t.prototype.Hc=function(t){this.Gc=t,// Fire the initial event
	this.Xc&&t(this.currentUser);},t.prototype.Yc=function(){this.auth&&this.auth.removeAuthTokenListener(this.Jc),this.Jc=null,this.Gc=null;},// Auth.getUid() can return null even with a user logged in. It is because
	// getUid() is synchronous, but the auth code populating Uid is asynchronous.
	// This method should only be called in the AuthTokenListener callback
	// to guarantee to get the actual user.
	t.prototype.tu=function(){var t=this.auth&&this.auth.getUid();return g(null===t||"string"==typeof t),new Mr(t);},t;}(),Po=/** @class */function(){function t(t,e){this.eu=t,this.nu=e,this.type="FirstParty",this.user=Mr.ni;}return Object.defineProperty(t.prototype,"Kc",{get:function get(){var t={"X-Goog-AuthUser":this.nu},e=this.eu.auth.getAuthHeaderValueForFirstParty([]);// Use array notation to prevent minification
	return e&&(t.Authorization=e),t;},enumerable:!1,configurable:!0}),t;}(),Vo=/** @class */function(){function t(t,e){this.eu=t,this.nu=e;}return t.prototype.getToken=function(){return Promise.resolve(new Po(this.eu,this.nu));},t.prototype.Hc=function(t){// Fire with initial uid.
	t(Mr.ni);},t.prototype.Yc=function(){},t.prototype.zc=function(){},t;}(),Uo=/** @class */function(){function e(t,e,n,r,i,o){this.fn=t,this.su=n,this.iu=r,this.ru=i,this.listener=o,this.state=0/* Initial */,/**
	             * A close count that's incremented every time the stream is closed; used by
	             * getCloseGuardedDispatcher() to invalidate callbacks that happen after
	             * close.
	             */this.ou=0,this.au=null,this.stream=null,this.ys=new vr(t,e)/**
	     * Returns true if start() has been called and no error has occurred. True
	     * indicates the stream is open or in the process of opening (which
	     * encompasses respecting backoff, getting auth tokens, and starting the
	     * actual RPC). Use isOpen() to determine if the stream is open and ready for
	     * outbound requests.
	     */;}return e.prototype.cu=function(){return 1/* Starting */===this.state||2/* Open */===this.state||4/* Backoff */===this.state;},/**
	     * Returns true if the underlying RPC is open (the onOpen() listener has been
	     * called) and the stream is ready for outbound requests.
	     */e.prototype.uu=function(){return 2/* Open */===this.state;},/**
	     * Starts the RPC. Only allowed if isStarted() returns false. The stream is
	     * not immediately ready for use: onOpen() will be invoked when the RPC is
	     * ready for outbound requests, at which point isOpen() will return true.
	     *
	     * When start returns, isStarted() will return true.
	     */e.prototype.start=function(){3/* Error */!==this.state?this.auth():this.hu();},/**
	     * Stops the RPC. This call is idempotent and allowed regardless of the
	     * current isStarted() state.
	     *
	     * When stop returns, isStarted() and isOpen() will both return false.
	     */e.prototype.stop=function(){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return this.cu()?[4/*yield*/,this.close(0/* Initial */)]:[3/*break*/,2];case 1:t.sent(),t.label=2;case 2:return[2/*return*/];}});});},/**
	     * After an error the stream will usually back off on the next attempt to
	     * start it. If the error warrants an immediate restart of the stream, the
	     * sender can use this to indicate that the receiver should not back off.
	     *
	     * Each error will call the onClose() listener. That function can decide to
	     * inhibit backoff if required.
	     */e.prototype.lu=function(){this.state=0/* Initial */,this.ys.reset();},/**
	     * Marks this stream as idle. If no further actions are performed on the
	     * stream for one minute, the stream will automatically close itself and
	     * notify the stream's onClose() handler with Status.OK. The stream will then
	     * be in a !isStarted() state, requiring the caller to start the stream again
	     * before further use.
	     *
	     * Only streams that are in state 'Open' can be marked idle, as all other
	     * states imply pending network operations.
	     */e.prototype._u=function(){var t=this;// Starts the idle time if we are in state 'Open' and are not yet already
	// running a timer (in which case the previous idle timeout still applies).
	this.uu()&&null===this.au&&(this.au=this.fn.yn(this.su,6e4,function(){return t.fu();}));},/** Sends a message to the underlying stream. */e.prototype.du=function(t){this.wu(),this.stream.send(t);},/** Called by the idle timer when the stream should close due to inactivity. */e.prototype.fu=function(){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){return this.uu()?[2/*return*/,this.close(0/* Initial */)]:[2/*return*/];});});},/** Marks the stream as active again. */e.prototype.wu=function(){this.au&&(this.au.cancel(),this.au=null);},/**
	     * Closes the stream and cleans up as necessary:
	     *
	     * * closes the underlying GRPC stream;
	     * * calls the onClose handler with the given 'error';
	     * * sets internal stream state to 'finalState';
	     * * adjusts the backoff timer based on the error
	     *
	     * A new stream can be opened by calling start().
	     *
	     * @param finalState the intended state of the stream after closing.
	     * @param error the error the connection was closed with.
	     */e.prototype.close=function(e,n){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:// Notify the listener that the stream closed.
	// Cancel any outstanding timers (they're guaranteed not to execute).
	return this.wu(),this.ys.cancel(),// Invalidates any stream-related callbacks (e.g. from auth or the
	// underlying stream), guaranteeing they won't execute.
	this.ou++,3/* Error */!==e?// If this is an intentional close ensure we don't delay our next connection attempt.
	this.ys.reset():n&&n.code===a.RESOURCE_EXHAUSTED?(// Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
	p(n.toString()),p("Using maximum backoff delay to prevent overloading the backend."),this.ys.Rn()):n&&n.code===a.UNAUTHENTICATED&&// "unauthenticated" error means the token was rejected. Try force refreshing it in case it
	// just expired.
	this.ru.zc(),// Clean up the underlying stream because we are no longer interested in events.
	null!==this.stream&&(this.mu(),this.stream.close(),this.stream=null),// This state must be assigned before calling onClose() to allow the callback to
	// inhibit backoff or otherwise manipulate the state in its non-started state.
	this.state=e,[4/*yield*/,this.listener.Tu(n)];case 1:// Cancel any outstanding timers (they're guaranteed not to execute).
	// Notify the listener that the stream closed.
	return t.sent(),[2/*return*/];}});});},/**
	     * Can be overridden to perform additional cleanup before the stream is closed.
	     * Calling super.tearDown() is not required.
	     */e.prototype.mu=function(){},e.prototype.auth=function(){var t=this;this.state=1/* Starting */;var e=this.Eu(this.ou),n=this.ou;// TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.
	this.ru.getToken().then(function(e){// Stream can be stopped while waiting for authentication.
	// TODO(mikelehen): We really should just use dispatchIfNotClosed
	// and let this dispatch onto the queue, but that opened a spec test can
	// of worms that I don't want to deal with in this PR.
	t.ou===n&&// Normally we'd have to schedule the callback on the AsyncQueue.
	// However, the following calls are safe to be called outside the
	// AsyncQueue since they don't chain asynchronous calls
	t.Iu(e);},function(n){e(function(){var e=new c(a.UNKNOWN,"Fetching auth token failed: "+n.message);return t.Au(e);});});},e.prototype.Iu=function(t){var e=this,n=this.Eu(this.ou);this.stream=this.Ru(t),this.stream.gu(function(){n(function(){return e.state=2/* Open */,e.listener.gu();});}),this.stream.Tu(function(t){n(function(){return e.Au(t);});}),this.stream.onMessage(function(t){n(function(){return e.onMessage(t);});});},e.prototype.hu=function(){var e=this;this.state=4/* Backoff */,this.ys.gn(function(){return t.__awaiter(e,void 0,void 0,function(){return t.__generator(this,function(t){return this.state=0/* Initial */,this.start(),[2/*return*/];});});});},// Visible for tests
	e.prototype.Au=function(t){// In theory the stream could close cleanly, however, in our current model
	// we never expect this to happen because if we stop a stream ourselves,
	// this callback will never be called. To prevent cases where we retry
	// without a backoff accidentally, we set the stream to error in all cases.
	return l("PersistentStream","close with error: "+t),this.stream=null,this.close(3/* Error */,t);},/**
	     * Returns a "dispatcher" function that dispatches operations onto the
	     * AsyncQueue but only runs them if closeCount remains unchanged. This allows
	     * us to turn auth / stream callbacks into no-ops if the stream is closed /
	     * re-opened, etc.
	     */e.prototype.Eu=function(t){var e=this;return function(n){e.fn.ws(function(){return e.ou===t?n():(l("PersistentStream","stream callback skipped by getCloseGuardedDispatcher."),Promise.resolve());});};},e;}(),Co=/** @class */function(e){function n(t,n,r,i,o){var s=this;return(s=e.call(this,t,"listen_stream_connection_backoff"/* ListenStreamConnectionBackoff */,"listen_stream_idle"/* ListenStreamIdle */,n,r,o)||this).serializer=i,s;}return t.__extends(n,e),n.prototype.Ru=function(t){return this.iu.Pu("Listen",t);},n.prototype.onMessage=function(t){// A successful response means the stream is healthy
	this.ys.reset();var e=function(t,e){var n;if("targetChange"in e){e.targetChange;// proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
	// if unset
	var r=function(t){return"NO_CHANGE"===t?0/* NoChange */:"ADD"===t?1/* Added */:"REMOVE"===t?2/* Removed */:"CURRENT"===t?3/* Current */:"RESET"===t?4/* Reset */:y();}(e.targetChange.targetChangeType||"NO_CHANGE"),i=e.targetChange.targetIds||[],o=function(t,e){return t.Qe?(g(void 0===e||"string"==typeof e),X.fromBase64String(e||"")):(g(void 0===e||e instanceof Uint8Array),X.fromUint8Array(e||new Uint8Array()));}(t,e.targetChange.resumeToken),s=e.targetChange.cause,u=s&&function(t){var e=void 0===t.code?a.UNKNOWN:_t(t.code);return new c(e,t.message||"");}(s);n=new zt(r,i,o,u||null);}else if("documentChange"in e){e.documentChange;var h=e.documentChange;h.document,h.document.name,h.document.updateTime;var f=Se(t,h.document.name),l=Ee(h.document.updateTime),p=new Sn({mapValue:{fields:h.document.fields}}),d=new kn(f,l,p,{}),v=h.targetIds||[],m=h.removedTargetIds||[];n=new jt(v,m,d.key,d);}else if("documentDelete"in e){e.documentDelete;var w=e.documentDelete;w.document;var _=Se(t,w.document),b=w.readTime?Ee(w.readTime):st.min(),I=new Rn(_,b),E=w.removedTargetIds||[];n=new jt([],E,I.key,I);}else if("documentRemove"in e){e.documentRemove;var T=e.documentRemove;T.document;var N=Se(t,T.document),A=T.removedTargetIds||[];n=new jt([],A,N,null);}else{if(!("filter"in e))return y();e.filter;var S=e.filter;S.targetId;var D=S.count||0,x=new mt(D),L=S.targetId;n=new Gt(L,x);}return n;}(this.serializer,t),n=function(t){// We have only reached a consistent snapshot for the entire stream if there
	// is a read_time set and it applies to all targets (i.e. the list of
	// targets is empty). The backend is guaranteed to send such responses.
	if(!("targetChange"in t))return st.min();var e=t.targetChange;return e.targetIds&&e.targetIds.length?st.min():e.readTime?Ee(e.readTime):st.min();}(t);return this.listener.yu(e,n);},/**
	     * Registers interest in the results of the given target. If the target
	     * includes a resumeToken it will be included in the request. Results that
	     * affect the target will be streamed back as WatchChange messages that
	     * reference the targetId.
	     */n.prototype.Vu=function(t){var e={};e.database=Le(this.serializer),e.addTarget=function(t,e){var n,r=e.target;return(n=dt(r)?{documents:Ve(t,r)}:{query:Ue(t,r)}).targetId=e.targetId,e.resumeToken.O()>0&&(n.resumeToken=be(t,e.resumeToken)),n;}(this.serializer,t);var n=function(t,e){var n=function(t,e){switch(e){case 0/* Listen */:return null;case 1/* ExistenceFilterMismatch */:return"existence-filter-mismatch";case 2/* LimboResolution */:return"limbo-document";default:return y();}}(0,e.et);return null==n?null:{"goog-listen-tags":n};}(this.serializer,t);n&&(e.labels=n),this.du(e);},/**
	     * Unregisters interest in the results of the target associated with the
	     * given targetId.
	     */n.prototype.pu=function(t){var e={};e.database=Le(this.serializer),e.removeTarget=t,this.du(e);},n;}(Uo),Fo=/** @class */function(e){function n(t,n,r,i,o){var s=this;return(s=e.call(this,t,"write_stream_connection_backoff"/* WriteStreamConnectionBackoff */,"write_stream_idle"/* WriteStreamIdle */,n,r,o)||this).serializer=i,s.bu=!1,s;}return t.__extends(n,e),Object.defineProperty(n.prototype,"vu",{/**
	         * Tracks whether or not a handshake has been successfully exchanged and
	         * the stream is ready to accept mutations.
	         */get:function get(){return this.bu;},enumerable:!1,configurable:!0}),// Override of PersistentStream.start
	n.prototype.start=function(){this.bu=!1,this.lastStreamToken=void 0,e.prototype.start.call(this);},n.prototype.mu=function(){this.bu&&this.Su([]);},n.prototype.Ru=function(t){return this.iu.Pu("Write",t);},n.prototype.onMessage=function(t){if(// Always capture the last stream token.
	g(!!t.streamToken),this.lastStreamToken=t.streamToken,this.bu){// A successful first write response means the stream is healthy,
	// Note, that we could consider a successful handshake healthy, however,
	// the write itself might be causing an error we want to back off from.
	this.ys.reset();var e=function(t,e){return t&&t.length>0?(g(void 0!==e),t.map(function(t){return function(t,e){// NOTE: Deletes don't have an updateTime.
	var n=t.updateTime?Ee(t.updateTime):Ee(e);n.isEqual(st.min())&&(// The Firestore Emulator currently returns an update time of 0 for
	// deletes of non-existing documents (rather than null). This breaks the
	// test "get deleted doc while offline with source=cache" as NoDocuments
	// with version 0 are filtered by IndexedDb's RemoteDocumentCache.
	// TODO(#2149): Remove this when Emulator is fixed
	n=Ee(e));var r=null;return t.transformResults&&t.transformResults.length>0&&(r=t.transformResults),new hn(n,r);}(t,e);})):[];}(t.writeResults,t.commitTime),n=Ee(t.commitTime);return this.listener.Du(n,e);}// The first response is always the handshake response
	return g(!t.writeResults||0===t.writeResults.length),this.bu=!0,this.listener.Cu();},/**
	     * Sends an initial streamToken to the server, performing the handshake
	     * required to make the StreamingWrite RPC work. Subsequent
	     * calls should wait until onHandshakeComplete was called.
	     */n.prototype.Nu=function(){// TODO(dimond): Support stream resumption. We intentionally do not set the
	// stream token on the handshake, ignoring any stream token we might have.
	var t={};t.database=Le(this.serializer),this.du(t);},/** Sends a group of mutations to the Firestore backend to apply. */n.prototype.Su=function(t){var e=this,n={streamToken:this.lastStreamToken,writes:t.map(function(t){return Oe(e.serializer,t);})};this.du(n);},n;}(Uo),Mo=/** @class */function(e){function n(t,n,r){var i=this;return(i=e.call(this)||this).credentials=t,i.iu=n,i.serializer=r,i.Fu=!1,i;}return t.__extends(n,e),n.prototype.xu=function(){if(this.Fu)throw new c(a.FAILED_PRECONDITION,"The client has already been terminated.");},/** Gets an auth token and invokes the provided RPC. */n.prototype.$u=function(t,e,n){var r=this;return this.xu(),this.credentials.getToken().then(function(i){return r.iu.$u(t,e,n,i);}).catch(function(t){throw t.code===a.UNAUTHENTICATED&&r.credentials.zc(),t;});},/** Gets an auth token and invokes the provided RPC with streamed results. */n.prototype.ku=function(t,e,n){var r=this;return this.xu(),this.credentials.getToken().then(function(i){return r.iu.ku(t,e,n,i);}).catch(function(t){throw t.code===a.UNAUTHENTICATED&&r.credentials.zc(),t;});},n.prototype.terminate=function(){this.Fu=!1;},n;}(function(){}),qo=/** @class */function(){function t(t,e){this.cs=t,this.di=e,/** The current OnlineState. */this.state="Unknown"/* Unknown */,/**
	             * A count of consecutive failures to open the stream. If it reaches the
	             * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
	             * Offline.
	             */this.Mu=0,/**
	             * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
	             * transition from OnlineState.Unknown to OnlineState.Offline without waiting
	             * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
	             */this.Ou=null,/**
	             * Whether the client should log a warning message if it fails to connect to
	             * the backend (initially true, cleared after a successful stream, or if we've
	             * logged the message already).
	             */this.Lu=!0/**
	     * Called by RemoteStore when a watch stream is started (including on each
	     * backoff attempt).
	     *
	     * If this is the first attempt, it sets the OnlineState to Unknown and starts
	     * the onlineStateTimer.
	     */;}return t.prototype.Bu=function(){var t=this;0===this.Mu&&(this.qu("Unknown"/* Unknown */),this.Ou=this.cs.yn("online_state_timeout"/* OnlineStateTimeout */,1e4,function(){return t.Ou=null,t.Uu("Backend didn't respond within 10 seconds."),t.qu("Offline"/* Offline */),Promise.resolve();}));},/**
	     * Updates our OnlineState as appropriate after the watch stream reports a
	     * failure. The first failure moves us to the 'Unknown' state. We then may
	     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
	     * actually transition to the 'Offline' state.
	     */t.prototype.Qu=function(t){"Online"/* Online */===this.state?this.qu("Unknown"/* Unknown */):(this.Mu++,this.Mu>=1&&(this.Wu(),this.Uu("Connection failed 1 times. Most recent error: "+t.toString()),this.qu("Offline"/* Offline */)));},/**
	     * Explicitly sets the OnlineState to the specified state.
	     *
	     * Note that this resets our timers / failure counters, etc. used by our
	     * Offline heuristics, so must not be used in place of
	     * handleWatchStreamStart() and handleWatchStreamFailure().
	     */t.prototype.set=function(t){this.Wu(),this.Mu=0,"Online"/* Online */===t&&(// We've connected to watch at least once. Don't warn the developer
	// about being offline going forward.
	this.Lu=!1),this.qu(t);},t.prototype.qu=function(t){t!==this.state&&(this.state=t,this.di(t));},t.prototype.Uu=function(t){var e="Could not reach Cloud Firestore backend. "+t+"\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";this.Lu?(p(e),this.Lu=!1):l("OnlineStateTracker",e);},t.prototype.Wu=function(){null!==this.Ou&&(this.Ou.cancel(),this.Ou=null);},t;}(),jo=function jo(/**
	     * The local store, used to fill the write pipeline with outbound mutations.
	     */e,/** The client-side proxy for interacting with the backend. */n,r,i,o){var s=this;this.ju=e,this.Ku=n,this.cs=r,this.Gu={},/**
	             * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
	             * LocalStore via fillWritePipeline() and have or will send to the write
	             * stream.
	             *
	             * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
	             * restart the write stream. When the stream is established the writes in the
	             * pipeline will be sent in order.
	             *
	             * Writes remain in writePipeline until they are acknowledged by the backend
	             * and thus will automatically be re-sent if the stream is interrupted /
	             * restarted before they're acknowledged.
	             *
	             * Write responses from the backend are linked to their originating request
	             * purely based on order, and so we can just shift() writes from the front of
	             * the writePipeline as we receive responses.
	             */this.zu=[],/**
	             * A mapping of watched targets that the client cares about tracking and the
	             * user has explicitly called a 'listen' for this target.
	             *
	             * These targets may or may not have been sent to or acknowledged by the
	             * server. On re-establishing the listen stream, these targets should be sent
	             * to the server. The targets removed with unlistens are removed eagerly
	             * without waiting for confirmation from the listen stream.
	             */this.Hu=new Map(),/**
	             * A set of reasons for why the RemoteStore may be offline. If empty, the
	             * RemoteStore may start its network connections.
	             */this.Yu=new Set(),/**
	             * Event handlers that get called when the network is disabled or enabled.
	             *
	             * PORTING NOTE: These functions are used on the Web client to create the
	             * underlying streams (to support tree-shakeable streams). On Android and iOS,
	             * the streams are created during construction of RemoteStore.
	             */this.Ju=[],this.Xu=o,this.Xu.Zu(function(e){r.ws(function(){return t.__awaiter(s,void 0,void 0,function(){return t.__generator(this,function(e){switch(e.label){case 0:return Xo(this)?(l("RemoteStore","Restarting streams for network reachability change."),[4/*yield*/,function(e){return t.__awaiter(this,void 0,void 0,function(){var n;return t.__generator(this,function(t){switch(t.label){case 0:return(n=m(e)).Yu.add(4/* ConnectivityChange */),[4/*yield*/,zo(n)];case 1:return t.sent(),n.th.set("Unknown"/* Unknown */),n.Yu.delete(4/* ConnectivityChange */),[4/*yield*/,Go(n)];case 2:return t.sent(),[2/*return*/];}});});}(this)]):[3/*break*/,2];case 1:e.sent(),e.label=2;case 2:return[2/*return*/];}});});});}),this.th=new qo(r,i);};function Go(e){return t.__awaiter(this,void 0,void 0,function(){var n,r;return t.__generator(this,function(t){switch(t.label){case 0:if(!Xo(e))return[3/*break*/,4];n=0,r=e.Ju,t.label=1;case 1:return n<r.length?[4/*yield*/,(0,r[n])(/* enabled= */!0)]:[3/*break*/,4];case 2:t.sent(),t.label=3;case 3:return n++,[3/*break*/,1];case 4:return[2/*return*/];}});});}/**
	 * Temporarily disables the network. The network can be re-enabled using
	 * enableNetwork().
	 */function zo(e){return t.__awaiter(this,void 0,void 0,function(){var n,r;return t.__generator(this,function(t){switch(t.label){case 0:n=0,r=e.Ju,t.label=1;case 1:return n<r.length?[4/*yield*/,(0,r[n])(/* enabled= */!1)]:[3/*break*/,4];case 2:t.sent(),t.label=3;case 3:return n++,[3/*break*/,1];case 4:return[2/*return*/];}});});}function Bo(e){return t.__awaiter(this,void 0,void 0,function(){var n;return t.__generator(this,function(t){switch(t.label){case 0:return n=m(e),l("RemoteStore","RemoteStore shutting down."),n.Yu.add(5/* Shutdown */),[4/*yield*/,zo(n)];case 1:return t.sent(),n.Xu.Di(),// Set the OnlineState to Unknown (rather than Offline) to avoid potentially
	// triggering spurious listener events with cached data, etc.
	n.th.set("Unknown"/* Unknown */),[2/*return*/];}});});}/**
	 * Starts new listen for the given target. Uses resume token if provided. It
	 * is a no-op if the target of given `TargetData` is already being listened to.
	 */function Wo(t,e){var n=m(t);n.Hu.has(e.targetId)||(// Mark this as something the client is currently listening for.
	n.Hu.set(e.targetId,e),$o(n)?// The listen will be sent in onWatchStreamOpen
	Yo(n):ls(n).uu()&&Qo(n,e));}/**
	 * Removes the listen from server. It is a no-op if the given target id is
	 * not being listened to.
	 */function Ko(t,e){var n=m(t),r=ls(n);n.Hu.delete(e),r.uu()&&Ho(n,e),0===n.Hu.size&&(r.uu()?r._u():Xo(n)&&// Revert to OnlineState.Unknown if the watch stream is not open and we
	// have no listeners, since without any listens to send we cannot
	// confirm if the stream is healthy and upgrade to OnlineState.Online.
	n.th.set("Unknown"/* Unknown */));}/**
	 * We need to increment the the expected number of pending responses we're due
	 * from watch so we wait for the ack to process any messages from this target.
	 */function Qo(t,e){t.eh.Ie(e.targetId),ls(t).Vu(e)/**
	 * We need to increment the expected number of pending responses we're due
	 * from watch so we wait for the removal on the server before we process any
	 * messages from this target.
	 */;}function Ho(t,e){t.eh.Ie(e),ls(t).pu(e);}function Yo(t){t.eh=new Wt({qe:function qe(e){return t.Gu.qe(e);},Ue:function Ue(e){return t.Hu.get(e)||null;}}),ls(t).start(),t.th.Bu()/**
	 * Returns whether the watch stream should be started because it's necessary
	 * and has not yet been started.
	 */;}function $o(t){return Xo(t)&&!ls(t).cu()&&t.Hu.size>0;}function Xo(t){return 0===m(t).Yu.size;}function Jo(t){t.eh=void 0;}function Zo(e){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){return e.Hu.forEach(function(t,n){Qo(e,t);}),[2/*return*/];});});}function ts(e,n){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){return Jo(e),// If we still need the watch stream, retry the connection.
	$o(e)?(e.th.Qu(n),Yo(e)):// No need to restart watch stream because there are no active targets.
	// The online state is set to unknown because there is no active attempt
	// at establishing a connection
	e.th.set("Unknown"/* Unknown */),[2/*return*/];});});}function es(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s;return t.__generator(this,function(u){switch(u.label){case 0:if(e.th.set("Online"/* Online */),!(n instanceof zt&&2/* Removed */===n.state&&n.cause))// Mark the client as online since we got a message from the server
	return[3/*break*/,6];u.label=1;case 1:return u.trys.push([1,3,,5]),[4/*yield*/,/** Handles an error on a target */function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s;return t.__generator(this,function(t){switch(t.label){case 0:r=n.cause,i=0,o=n.targetIds,t.label=1;case 1:return i<o.length?(s=o[i],e.Hu.has(s)?[4/*yield*/,e.Gu.nh(s,r)]:[3/*break*/,3]):[3/*break*/,5];case 2:t.sent(),e.Hu.delete(s),e.eh.removeTarget(s),t.label=3;case 3:t.label=4;case 4:return i++,[3/*break*/,1];case 5:return[2/*return*/];}});});}(e,n)];case 2:return u.sent(),[3/*break*/,5];case 3:return i=u.sent(),l("RemoteStore","Failed to remove targets %s: %s ",n.targetIds.join(","),i),[4/*yield*/,ns(e,i)];case 4:return u.sent(),[3/*break*/,5];case 5:return[3/*break*/,13];case 6:if(n instanceof jt?e.eh.be(n):n instanceof Gt?e.eh.$e(n):e.eh.De(n),r.isEqual(st.min()))return[3/*break*/,13];u.label=7;case 7:return u.trys.push([7,11,,13]),[4/*yield*/,wo(e.ju)];case 8:return o=u.sent(),r.L(o)>=0?[4/*yield*/,/**
	                 * Takes a batch of changes from the Datastore, repackages them as a
	                 * RemoteEvent, and passes that on to the listener, which is typically the
	                 * SyncEngine.
	                 */function(t,e){var n=t.eh.Oe(e);// Update in-memory resume tokens. LocalStore will update the
	// persistent view of these when applying the completed RemoteEvent.
	return n.zt.forEach(function(n,r){if(n.resumeToken.O()>0){var i=t.Hu.get(r);// A watched target might have been removed already.
	i&&t.Hu.set(r,i.it(n.resumeToken,e));}}),// Re-establish listens for the targets that have been invalidated by
	// existence filter mismatches.
	n.Ht.forEach(function(e){var n=t.Hu.get(e);if(n){// Clear the resume token for the target, since we're in a known mismatch
	// state.
	t.Hu.set(e,n.it(X.B,n.nt)),// Cause a hard reset by unwatching and rewatching immediately, but
	// deliberately don't send a resume token so that we get a full update.
	Ho(t,e);// Mark the target we send as being on behalf of an existence filter
	// mismatch, but don't actually retain that in listenTargets. This ensures
	// that we flag the first re-listen this way without impacting future
	// listens of this target (that might happen e.g. on reconnect).
	var r=new gt(n.target,e,1/* ExistenceFilterMismatch */,n.sequenceNumber);Qo(t,r);}}),t.Gu.sh(n);}(e,r)]:[3/*break*/,10];// We have received a target change with a global snapshot if the snapshot
	// version is not equal to SnapshotVersion.min().
	case 9:// We have received a target change with a global snapshot if the snapshot
	// version is not equal to SnapshotVersion.min().
	u.sent(),u.label=10;case 10:return[3/*break*/,13];case 11:return l("RemoteStore","Failed to raise snapshot:",s=u.sent()),[4/*yield*/,ns(e,s)];case 12:return u.sent(),[3/*break*/,13];case 13:return[2/*return*/];}});});}/**
	 * Recovery logic for IndexedDB errors that takes the network offline until
	 * `op` succeeds. Retries are scheduled with backoff using
	 * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is
	 * validated via a generic operation.
	 *
	 * The returned Promise is resolved once the network is disabled and before
	 * any retry attempt.
	 */function ns(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i=this;return t.__generator(this,function(o){switch(o.label){case 0:if(!_r(n))throw n;// Disable network and raise offline snapshots
	return e.Yu.add(1/* IndexedDbFailed */),[4/*yield*/,zo(e)];case 1:// Disable network and raise offline snapshots
	return o.sent(),e.th.set("Offline"/* Offline */),r||(// Use a simple read operation to determine if IndexedDB recovered.
	// Ideally, we would expose a health check directly on SimpleDb, but
	// RemoteStore only has access to persistence through LocalStore.
	r=function r(){return wo(e.ju);}),// Probe IndexedDB periodically and re-enable network
	e.cs.Cs(function(){return t.__awaiter(i,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return l("RemoteStore","Retrying IndexedDB access"),[4/*yield*/,r()];case 1:return t.sent(),e.Yu.delete(1/* IndexedDbFailed */),[4/*yield*/,Go(e)];case 2:return t.sent(),[2/*return*/];}});});}),[2/*return*/];}});});}/**
	 * Executes `op`. If `op` fails, takes the network offline until `op`
	 * succeeds. Returns after the first attempt.
	 */function rs(t,e){return e().catch(function(n){return ns(t,n,e);});}function is(e){return t.__awaiter(this,void 0,void 0,function(){var n,r,i,o,s;return t.__generator(this,function(t){switch(t.label){case 0:n=m(e),r=ps(n),i=n.zu.length>0?n.zu[n.zu.length-1].batchId:-1,t.label=1;case 1:if(!/**
	 * Returns true if we can add to the write pipeline (i.e. the network is
	 * enabled and the write pipeline is not full).
	 */function(t){return Xo(t)&&t.zu.length<10;}/**
	 * Queues additional writes to be sent to the write stream, sending them
	 * immediately if the write stream is established.
	 */(n))return[3/*break*/,7];t.label=2;case 2:return t.trys.push([2,4,,6]),[4/*yield*/,bo(n.ju,i)];case 3:return null===(o=t.sent())?(0===n.zu.length&&r._u(),[3/*break*/,7]):(i=o.batchId,function(t,e){t.zu.push(e);var n=ps(t);n.uu()&&n.vu&&n.Su(e.mutations);}(n,o),[3/*break*/,6]);case 4:return s=t.sent(),[4/*yield*/,ns(n,s)];case 5:return t.sent(),[3/*break*/,6];case 6:return[3/*break*/,1];case 7:return os(n)&&ss(n),[2/*return*/];}});});}function os(t){return Xo(t)&&!ps(t).cu()&&t.zu.length>0;}function ss(t){ps(t).start();}function us(e){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){return ps(e).Nu(),[2/*return*/];});});}function as(e){return t.__awaiter(this,void 0,void 0,function(){var n,r,i,o;return t.__generator(this,function(t){// Send the write pipeline now that the stream is established.
	for(n=ps(e),r=0,i=e.zu;r<i.length;r++){o=i[r],n.Su(o.mutations);}return[2/*return*/];});});}function cs(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o;return t.__generator(this,function(t){switch(t.label){case 0:return i=e.zu.shift(),o=Jr.from(i,n,r),[4/*yield*/,rs(e,function(){return e.Gu.ih(o);})];case 1:// It's possible that with the completion of this mutation another
	// slot has freed up.
	return t.sent(),[4/*yield*/,is(e)];case 2:// It's possible that with the completion of this mutation another
	// slot has freed up.
	return t.sent(),[2/*return*/];}});});}function hs(e,n){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(r){switch(r.label){case 0:return n&&ps(e).vu?[4/*yield*/,function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i;return t.__generator(this,function(t){switch(t.label){case 0:return wt(i=n.code)&&i!==a.ABORTED?(r=e.zu.shift(),// In this case it's also unlikely that the server itself is melting
	// down -- this was just a bad request so inhibit backoff on the next
	// restart.
	ps(e).lu(),[4/*yield*/,rs(e,function(){return e.Gu.rh(r.batchId,n);})]):[3/*break*/,3];case 1:// It's possible that with the completion of this mutation
	// another slot has freed up.
	return t.sent(),[4/*yield*/,is(e)];case 2:// In this case it's also unlikely that the server itself is melting
	// down -- this was just a bad request so inhibit backoff on the next
	// restart.
	// It's possible that with the completion of this mutation
	// another slot has freed up.
	t.sent(),t.label=3;case 3:return[2/*return*/];}});});}(e,n)]:[3/*break*/,2];// This error affects the actual write.
	case 1:// This error affects the actual write.
	r.sent(),r.label=2;case 2:// If the write stream closed after the write handshake completes, a write
	// operation failed and we fail the pending operation.
	// The write stream might have been started by refilling the write
	// pipeline for failed writes
	return os(e)&&ss(e),[2/*return*/];}});});}/**
	 * Toggles the network state when the client gains or loses its primary lease.
	 */function fs(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i;return t.__generator(this,function(t){switch(t.label){case 0:return r=m(e),n?(r.Yu.delete(2/* IsSecondary */),[4/*yield*/,Go(r)]):[3/*break*/,2];case 1:return t.sent(),[3/*break*/,5];case 2:return(i=n)?[3/*break*/,4]:(r.Yu.add(2/* IsSecondary */),[4/*yield*/,zo(r)]);case 3:t.sent(),i=r.th.set("Unknown"/* Unknown */),t.label=4;case 4:i,t.label=5;case 5:return[2/*return*/];}});});}/**
	 * If not yet initialized, registers the WatchStream and its network state
	 * callback with `remoteStoreImpl`. Returns the existing stream if one is
	 * already available.
	 *
	 * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.
	 * This is not done on Web to allow it to be tree-shaken.
	 */function ls(e){var n=this;return e.oh||(// Create stream (but note that it is not started yet).
	e.oh=function(t,e,n){var r=m(t);return r.xu(),new Co(e,r.iu,r.credentials,r.serializer,n);}(e.Ku,e.cs,{gu:Zo.bind(null,e),Tu:ts.bind(null,e),yu:es.bind(null,e)}),e.Ju.push(function(r){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return r?(e.oh.lu(),$o(e)?Yo(e):e.th.set("Unknown"/* Unknown */),[3/*break*/,3]):[3/*break*/,1];case 1:return[4/*yield*/,e.oh.stop()];case 2:t.sent(),Jo(e),t.label=3;case 3:return[2/*return*/];}});});})),e.oh/**
	 * If not yet initialized, registers the WriteStream and its network state
	 * callback with `remoteStoreImpl`. Returns the existing stream if one is
	 * already available.
	 *
	 * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.
	 * This is not done on Web to allow it to be tree-shaken.
	 */;}function ps(e){var n=this;return e.ah||(// Create stream (but note that it is not started yet).
	e.ah=function(t,e,n){var r=m(t);return r.xu(),new Fo(e,r.iu,r.credentials,r.serializer,n);}(e.Ku,e.cs,{gu:us.bind(null,e),Tu:hs.bind(null,e),Cu:as.bind(null,e),Du:cs.bind(null,e)}),e.Ju.push(function(r){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return r?(e.ah.lu(),[4/*yield*/,is(e)]):[3/*break*/,2];case 1:// This will start the write stream if necessary.
	return t.sent(),[3/*break*/,4];case 2:return[4/*yield*/,e.ah.stop()];case 3:t.sent(),e.zu.length>0&&(l("RemoteStore","Stopping write stream with "+e.zu.length+" pending writes"),e.zu=[]),t.label=4;case 4:return[2/*return*/];}});});})),e.ah/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */;}var ds=function ds(t){this.key=t;},vs=function vs(t){this.key=t;},ys=/** @class */function(){function t(t,/** Documents included in the remote target */e){this.query=t,this.uh=e,this.hh=null,/**
	             * A flag whether the view is current with the backend. A view is considered
	             * current after it has seen the current flag from the backend and did not
	             * lose consistency within the watch stream (e.g. because of an existence
	             * filter mismatch).
	             */this.te=!1,/** Documents in the view but not in the remote target */this.lh=Ot(),/** Document Keys that have local changes */this.Wt=Ot(),this._h=Xn(t),this.fh=new Ut(this._h);}return Object.defineProperty(t.prototype,"dh",{/**
	         * The set of remote documents that the server has told us belongs to the target associated with
	         * this view.
	         */get:function get(){return this.uh;},enumerable:!1,configurable:!0}),/**
	     * Iterates over a set of doc changes, applies the query limit, and computes
	     * what the new results should be, what the changes were, and whether we may
	     * need to go back to the local cache for more results. Does not make any
	     * changes to the view.
	     * @param docChanges The doc changes to apply to this view.
	     * @param previousChanges If this is being called with a refill, then start
	     *        with this set of docs and changes instead of the current view.
	     * @return a new set of docs, changes, and refill flag.
	     */t.prototype.wh=function(t,e){var n=this,r=e?e.mh:new Ct(),i=e?e.fh:this.fh,o=e?e.Wt:this.Wt,s=i,u=!1,a=Cn(this.query)&&i.size===this.query.limit?i.last():null,c=Fn(this.query)&&i.size===this.query.limit?i.first():null;// Drop documents out to meet limit/limitToLast requirement.
	if(t.ht(function(t,e){var h=i.get(t),f=e instanceof kn?e:null;f&&(f=$n(n.query,f)?f:null);var l=!!h&&n.Wt.has(h.key),p=!!f&&(f.Je||// We only consider committed mutations for documents that were
	// mutated during the lifetime of the view.
	n.Wt.has(f.key)&&f.hasCommittedMutations),d=!1;// Calculate change
	h&&f?h.data().isEqual(f.data())?l!==p&&(r.track({type:3/* Metadata */,doc:f}),d=!0):n.Th(h,f)||(r.track({type:2/* Modified */,doc:f}),d=!0,(a&&n._h(f,a)>0||c&&n._h(f,c)<0)&&(// This doc moved from inside the limit to outside the limit.
	// That means there may be some other doc in the local cache
	// that should be included instead.
	u=!0)):!h&&f?(r.track({type:0/* Added */,doc:f}),d=!0):h&&!f&&(r.track({type:1/* Removed */,doc:h}),d=!0,(a||c)&&(// A doc was removed from a full limit query. We'll need to
	// requery from the local cache to see if we know about some other
	// doc that should be in the results.
	u=!0)),d&&(f?(s=s.add(f),o=p?o.add(t):o.delete(t)):(s=s.delete(t),o=o.delete(t)));}),Cn(this.query)||Fn(this.query))for(;s.size>this.query.limit;){var h=Cn(this.query)?s.last():s.first();s=s.delete(h.key),o=o.delete(h.key),r.track({type:1/* Removed */,doc:h});}return{fh:s,mh:r,Eh:u,Wt:o};},t.prototype.Th=function(t,e){// We suppress the initial change event for documents that were modified as
	// part of a write acknowledgment (e.g. when the value of a server transform
	// is applied) as Watch will send us the same document again.
	// By suppressing the event, we only raise two user visible events (one with
	// `hasPendingWrites` and the final state of the document) instead of three
	// (one with `hasPendingWrites`, the modified document with
	// `hasPendingWrites` and the final state of the document).
	return t.Je&&e.hasCommittedMutations&&!e.Je;},/**
	     * Updates the view with the given ViewDocumentChanges and optionally updates
	     * limbo docs and sync state from the provided target change.
	     * @param docChanges The set of changes to make to the view's docs.
	     * @param updateLimboDocuments Whether to update limbo documents based on this
	     *        change.
	     * @param targetChange A target change to apply for computing limbo docs and
	     *        sync state.
	     * @return A new ViewChange with the given docs, changes, and sync state.
	     */// PORTING NOTE: The iOS/Android clients always compute limbo document changes.
	t.prototype.yr=function(t,e,n){var r=this,i=this.fh;this.fh=t.fh,this.Wt=t.Wt;// Sort changes based on type and query comparator
	var o=t.mh.Ut();o.sort(function(t,e){return function(t,e){var n=function n(t){switch(t){case 0/* Added */:return 1;case 2/* Modified */:case 3/* Metadata */:// A metadata change is converted to a modified change at the public
	// api layer.  Since we sort by document key and then change type,
	// metadata and modified changes must be sorted equivalently.
	return 2;case 1/* Removed */:return 0;default:return y();}};return n(t)-n(e);}(t.type,e.type)||r._h(t.doc,e.doc);}),this.Ih(n);var s=e?this.Ah():[],u=0===this.lh.size&&this.te?1/* Synced */:0/* Local */,a=u!==this.hh;return this.hh=u,0!==o.length||a?{snapshot:new Ft(this.query,t.fh,i,o,t.Wt,0/* Local */===u,a,/* excludesMetadataChanges= */!1),Rh:s}:{Rh:s};// no changes
	},/**
	     * Applies an OnlineState change to the view, potentially generating a
	     * ViewChange if the view's syncState changes as a result.
	     */t.prototype.Qs=function(t){return this.te&&"Offline"/* Offline */===t?(// If we're offline, set `current` to false and then call applyChanges()
	// to refresh our syncState and generate a ViewChange as appropriate. We
	// are guaranteed to get a new TargetChange that sets `current` back to
	// true once the client is back online.
	this.te=!1,this.yr({fh:this.fh,mh:new Ct(),Wt:this.Wt,Eh:!1},/* updateLimboDocuments= */!1)):{Rh:[]};},/**
	     * Returns whether the doc for the given key should be in limbo.
	     */t.prototype.gh=function(t){// If the remote end says it's part of this query, it's not in limbo.
	return!this.uh.has(t)&&// The local store doesn't think it's a result, so it shouldn't be in limbo.
	!!this.fh.has(t)&&!this.fh.get(t).Je;},/**
	     * Updates syncedDocuments, current, and limbo docs based on the given change.
	     * Returns the list of changes to which docs are in limbo.
	     */t.prototype.Ih=function(t){var e=this;t&&(t.ee.forEach(function(t){return e.uh=e.uh.add(t);}),t.ne.forEach(function(t){}),t.se.forEach(function(t){return e.uh=e.uh.delete(t);}),this.te=t.te);},t.prototype.Ah=function(){var t=this;// We can only determine limbo documents when we're in-sync with the server.
	if(!this.te)return[];// TODO(klimt): Do this incrementally so that it's not quadratic when
	// updating many documents.
	var e=this.lh;this.lh=Ot(),this.fh.forEach(function(e){t.gh(e.key)&&(t.lh=t.lh.add(e.key));});// Diff the new limbo docs with the old limbo docs.
	var n=[];return e.forEach(function(e){t.lh.has(e)||n.push(new vs(e));}),this.lh.forEach(function(t){e.has(t)||n.push(new ds(t));}),n;},/**
	     * Update the in-memory state of the current view with the state read from
	     * persistence.
	     *
	     * We update the query view whenever a client's primary status changes:
	     * - When a client transitions from primary to secondary, it can miss
	     *   LocalStorage updates and its query views may temporarily not be
	     *   synchronized with the state on disk.
	     * - For secondary to primary transitions, the client needs to update the list
	     *   of `syncedDocuments` since secondary clients update their query views
	     *   based purely on synthesized RemoteEvents.
	     *
	     * @param queryResult.documents - The documents that match the query according
	     * to the LocalStore.
	     * @param queryResult.remoteKeys - The keys of the documents that match the
	     * query according to the backend.
	     *
	     * @return The ViewChange that resulted from this synchronization.
	     */// PORTING NOTE: Multi-tab only.
	t.prototype.Ph=function(t){this.uh=t.Fc,this.lh=Ot();var e=this.wh(t.documents);return this.yr(e,/*updateLimboDocuments=*/!0);},/**
	     * Returns a view snapshot as if this query was just listened to. Contains
	     * a document add for every existing document and the `fromCache` and
	     * `hasPendingWrites` status of the already established view.
	     */// PORTING NOTE: Multi-tab only.
	t.prototype.yh=function(){return Ft.Gt(this.query,this.fh,this.Wt,0/* Local */===this.hh);},t;}(),gs=function gs(/**
	     * The query itself.
	     */t,/**
	     * The target number created by the client that is used in the watch
	     * stream to identify this query.
	     */e,/**
	     * The view is responsible for computing the final merged truth of what
	     * docs are in the query. It gets notified of local and remote changes,
	     * and applies the query filters and limits to determine the most correct
	     * possible results.
	     */n){this.query=t,this.targetId=e,this.view=n;},ms=function ms(t){this.key=t,/**
	             * Set to true once we've received a document. This is used in
	             * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
	             * decide whether it needs to manufacture a delete event for the target once
	             * the target is CURRENT.
	             */this.Vh=!1;},ws=/** @class */function(){function t(t,e,n,// PORTING NOTE: Manages state synchronization in multi-tab environments.
	r,i,o){this.ju=t,this.ph=e,this.bh=n,this.Sh=r,this.currentUser=i,this.Dh=o,this.Ch={},this.Nh=new it(function(t){return Hn(t);},Qn),this.Fh=new Map(),/**
	             * The keys of documents that are in limbo for which we haven't yet started a
	             * limbo resolution query.
	             */this.xh=[],/**
	             * Keeps track of the target ID for each document that is in limbo with an
	             * active target.
	             */this.$h=new bt(A.i),/**
	             * Keeps track of the information about an active limbo resolution for each
	             * active target ID that was started for the purpose of limbo resolution.
	             */this.kh=new Map(),this.Mh=new xo(),/** Stores user completion handlers, indexed by User and BatchId. */this.Oh={},/** Stores user callbacks waiting for all pending writes to be acknowledged. */this.Lh=new Map(),this.Bh=ro.da(),this.onlineState="Unknown"/* Unknown */,// The primary state is set to `true` or `false` immediately after Firestore
	// startup. In the interim, a client should only be considered primary if
	// `isPrimary` is true.
	this.qh=void 0;}return Object.defineProperty(t.prototype,"Uh",{get:function get(){return!0===this.qh;},enumerable:!1,configurable:!0}),t;}();/**
	 * Initiates the new listen, resolves promise when listen enqueued to the
	 * server. All the subsequent view snapshots or errors are sent to the
	 * subscribed handlers. Returns the initial snapshot.
	 */function _s(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u,a;return t.__generator(this,function(t){switch(t.label){case 0:return r=Ks(e),(s=r.Nh.get(n))?(// PORTING NOTE: With Multi-Tab Web, it is possible that a query view
	// already exists when EventManager calls us for the first time. This
	// happens when the primary tab is already listening to this query on
	// behalf of another tab and the user of the primary also starts listening
	// to the query. EventManager will not have an assigned target ID in this
	// case and calls `listen` to obtain this ID.
	i=s.targetId,r.Sh.Oi(i),o=s.view.yh(),[3/*break*/,4]):[3/*break*/,1];case 1:return[4/*yield*/,Io(r.ju,zn(n))];case 2:return u=t.sent(),a=r.Sh.Oi(u.targetId),i=u.targetId,[4/*yield*/,bs(r,n,i,"current"===a)];case 3:o=t.sent(),r.Uh&&Wo(r.ph,u),t.label=4;case 4:return[2/*return*/,o];}});});}/**
	 * Registers a view for a previously unknown query and computes its initial
	 * snapshot.
	 */function bs(e,n,r,i){return t.__awaiter(this,void 0,void 0,function(){var o,s,u,a,c,h;return t.__generator(this,function(f){switch(f.label){case 0:// PORTING NOTE: On Web only, we inject the code that registers new Limbo
	// targets based on view changes. This allows us to only depend on Limbo
	// changes when user code includes queries.
	return e.Qh=function(n,r,i){return function(e,n,r,i){return t.__awaiter(this,void 0,void 0,function(){var o,s,u;return t.__generator(this,function(t){switch(t.label){case 0:return o=n.view.wh(r),o.Eh?[4/*yield*/,To(e.ju,n.query,/* usePreviousResults= */!1).then(function(t){var e=t.documents;return n.view.wh(e,o);})]:[3/*break*/,2];case 1:// The query has a limit and some docs were removed, so we need
	// to re-run the query against the local store to make sure we
	// didn't lose any good docs that had been past the limit.
	o=t.sent(),t.label=2;case 2:return s=i&&i.zt.get(n.targetId),u=n.view.yr(o,/* updateLimboDocuments= */e.Uh,s),[2/*return*/,(Rs(e,n.targetId,u.Rh),u.snapshot)];}});});}(e,n,r,i);},[4/*yield*/,To(e.ju,n,/* usePreviousResults= */!0)];case 1:return o=f.sent(),s=new ys(n,o.Fc),u=s.wh(o.documents),a=qt.Zt(r,i&&"Offline"/* Offline */!==e.onlineState),c=s.yr(u,/* updateLimboDocuments= */e.Uh,a),Rs(e,r,c.Rh),h=new gs(n,r,s),[2/*return*/,(e.Nh.set(n,h),e.Fh.has(r)?e.Fh.get(r).push(n):e.Fh.set(r,[n]),c.snapshot)];}});});}/** Stops listening to the query. */function Is(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o;return t.__generator(this,function(t){switch(t.label){case 0:return r=m(e),i=r.Nh.get(n),(o=r.Fh.get(i.targetId)).length>1?[2/*return*/,(r.Fh.set(i.targetId,o.filter(function(t){return!Qn(t,n);})),void r.Nh.delete(n))]:r.Uh?(// We need to remove the local query target first to allow us to verify
	// whether any other client is still interested in this target.
	r.Sh.Bi(i.targetId),r.Sh.Fi(i.targetId)?[3/*break*/,2]:[4/*yield*/,Eo(r.ju,i.targetId,/*keepPersistedTargetData=*/!1).then(function(){r.Sh.Ui(i.targetId),Ko(r.ph,i.targetId),Ls(r,i.targetId);}).catch(Do)]):[3/*break*/,3];case 1:t.sent(),t.label=2;case 2:return[3/*break*/,5];case 3:return Ls(r,i.targetId),[4/*yield*/,Eo(r.ju,i.targetId,/*keepPersistedTargetData=*/!0)];case 4:t.sent(),t.label=5;case 5:return[2/*return*/];}});});}/**
	 * Initiates the write of local mutation batch which involves adding the
	 * writes to the mutation queue, notifying the remote store about new
	 * mutations and raising events for any changes this write caused.
	 *
	 * The promise returned by this call is resolved when the above steps
	 * have completed, *not* when the write was acked by the backend. The
	 * userCallback is resolved once the write was acked/rejected by the
	 * backend (or failed locally for any other reason).
	 *//**
	 * Applies one remote event to the sync engine, notifying any views of the
	 * changes, and releasing any pending mutation batches that would become
	 * visible because of the snapshot version the remote event contains.
	 */function Es(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i;return t.__generator(this,function(t){switch(t.label){case 0:r=m(e),t.label=1;case 1:return t.trys.push([1,4,,6]),[4/*yield*/,_o(r.ju,n)];case 2:return i=t.sent(),// Update `receivedDocument` as appropriate for any limbo targets.
	n.zt.forEach(function(t,e){var n=r.kh.get(e);n&&(// Since this is a limbo resolution lookup, it's for a single document
	// and it could be added, modified, or removed, but not a combination.
	g(t.ee.size+t.ne.size+t.se.size<=1),t.ee.size>0?n.Vh=!0:t.ne.size>0?g(n.Vh):t.se.size>0&&(g(n.Vh),n.Vh=!1));}),[4/*yield*/,Vs(r,i,n)];case 3:// Update `receivedDocument` as appropriate for any limbo targets.
	return t.sent(),[3/*break*/,6];case 4:return[4/*yield*/,Do(t.sent())];case 5:return t.sent(),[3/*break*/,6];case 6:return[2/*return*/];}});});}/**
	 * Applies an OnlineState change to the sync engine and notifies any views of
	 * the change.
	 */function Ts(t,e,n){var r=m(t);// If we are the secondary client, we explicitly ignore the remote store's
	// online state (the local client may go offline, even though the primary
	// tab remains online) and only apply the primary tab's online state from
	// SharedClientState.
	if(r.Uh&&0/* RemoteStore */===n||!r.Uh&&1/* SharedClientState */===n){var i=[];r.Nh.forEach(function(t,n){var r=n.view.Qs(e);r.snapshot&&i.push(r.snapshot);}),function(t,e){var n=m(t);n.onlineState=e;var r=!1;n.Bs.forEach(function(t,n){for(var i=0,o=n.listeners;i<o.length;i++){// Run global snapshot listeners if a consistent snapshot has been emitted.
	o[i].Qs(e)&&(r=!0);}}),r&&Cr(n);}(r.bh,e),i.length&&r.Ch.yu(i),r.onlineState=e,r.Uh&&r.Sh.Ki(e);}}/**
	 * Rejects the listen for the given targetID. This can be triggered by the
	 * backend for any active target.
	 *
	 * @param syncEngine The sync engine implementation.
	 * @param targetId The targetID corresponds to one previously initiated by the
	 * user as part of TargetData passed to listen() on RemoteStore.
	 * @param err A description of the condition that has forced the rejection.
	 * Nearly always this will be an indication that the user is no longer
	 * authorized to see the data matching the target.
	 */function Ns(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s,u,a,c;return t.__generator(this,function(t){switch(t.label){case 0:// PORTING NOTE: Multi-tab only.
	return(i=m(e)).Sh.Qi(n,"rejected",r),o=i.kh.get(n),(s=o&&o.key)?(u=(u=new bt(A.i)).ot(s,new Rn(s,st.min())),a=Ot().add(s),c=new Mt(st.min(),/* targetChanges= */new Map(),/* targetMismatches= */new Tt(H),u,a),[4/*yield*/,Es(i,c)]):[3/*break*/,2];case 1:return t.sent(),// Since this query failed, we won't want to manually unlisten to it.
	// We only remove it from bookkeeping after we successfully applied the
	// RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to
	// this query when the RemoteStore restarts the Watch stream, which should
	// re-trigger the target failure.
	i.$h=i.$h.remove(s),i.kh.delete(n),Ps(i),[3/*break*/,4];case 2:return[4/*yield*/,Eo(i.ju,n,/* keepPersistedTargetData */!1).then(function(){return Ls(i,n,r);}).catch(Do)];case 3:t.sent(),t.label=4;case 4:return[2/*return*/];}});});}function As(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o;return t.__generator(this,function(t){switch(t.label){case 0:r=m(e),i=n.batch.batchId,t.label=1;case 1:return t.trys.push([1,4,,6]),[4/*yield*/,mo(r.ju,n)];case 2:return o=t.sent(),// The local store may or may not be able to apply the write result and
	// raise events immediately (depending on whether the watcher is caught
	// up), so we raise user callbacks first so that they consistently happen
	// before listen events.
	xs(r,i,/*error=*/null),Ds(r,i),r.Sh.ki(i,"acknowledged"),[4/*yield*/,Vs(r,o)];case 3:// The local store may or may not be able to apply the write result and
	// raise events immediately (depending on whether the watcher is caught
	// up), so we raise user callbacks first so that they consistently happen
	// before listen events.
	return t.sent(),[3/*break*/,6];case 4:return[4/*yield*/,Do(t.sent())];case 5:return t.sent(),[3/*break*/,6];case 6:return[2/*return*/];}});});}function Ss(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o;return t.__generator(this,function(t){switch(t.label){case 0:i=m(e),t.label=1;case 1:return t.trys.push([1,4,,6]),[4/*yield*/,function(t,e){var n=m(t);return n.persistence.runTransaction("Reject batch","readwrite-primary",function(t){var r;return n.Sr.Oo(t,e).next(function(e){return g(null!==e),r=e.keys(),n.Sr.Wo(t,e);}).next(function(){return n.Sr.zo(t);}).next(function(){return n.Cc.kr(t,r);});});}(i.ju,n)];case 2:return o=t.sent(),// The local store may or may not be able to apply the write result and
	// raise events immediately (depending on whether the watcher is caught up),
	// so we raise user callbacks first so that they consistently happen before
	// listen events.
	xs(i,n,r),Ds(i,n),i.Sh.ki(n,"rejected",r),[4/*yield*/,Vs(i,o)];case 3:// The local store may or may not be able to apply the write result and
	// raise events immediately (depending on whether the watcher is caught up),
	// so we raise user callbacks first so that they consistently happen before
	// listen events.
	return t.sent(),[3/*break*/,6];case 4:return[4/*yield*/,Do(t.sent())];case 5:return t.sent(),[3/*break*/,6];case 6:return[2/*return*/];}});});}/**
	 * Registers a user callback that resolves when all pending mutations at the moment of calling
	 * are acknowledged .
	 *//**
	 * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
	 * if there are any.
	 */function Ds(t,e){(t.Lh.get(e)||[]).forEach(function(t){t.resolve();}),t.Lh.delete(e)/** Reject all outstanding callbacks waiting for pending writes to complete. */;}function xs(t,e,n){var r=m(t),i=r.Oh[r.currentUser.ti()];// NOTE: Mutations restored from persistence won't have callbacks, so it's
	// okay for there to be no callback for this ID.
	if(i){var o=i.get(e);o&&(n?o.reject(n):o.resolve(),i=i.remove(e)),r.Oh[r.currentUser.ti()]=i;}}function Ls(t,e,n){void 0===n&&(n=null),t.Sh.Bi(e);for(var r=0,i=t.Fh.get(e);r<i.length;r++){var o=i[r];t.Nh.delete(o),n&&t.Ch.Wh(o,n);}t.Fh.delete(e),t.Uh&&t.Mh.Uc(e).forEach(function(e){t.Mh.Ho(e)||// We removed the last reference for this key
	ks(t,e);});}function ks(t,e){// It's possible that the target already got removed because the query failed. In that case,
	// the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
	var n=t.$h.get(e);null!==n&&(Ko(t.ph,n),t.$h=t.$h.remove(e),t.kh.delete(n),Ps(t));}function Rs(t,e,n){for(var r=0,i=n;r<i.length;r++){var o=i[r];o instanceof ds?(t.Mh.Da(o.key,e),Os(t,o)):o instanceof vs?(l("SyncEngine","Document no longer in limbo: "+o.key),t.Mh.Na(o.key,e),t.Mh.Ho(o.key)||// We removed the last reference for this key
	ks(t,o.key)):y();}}function Os(t,e){var n=e.key;t.$h.get(n)||(l("SyncEngine","New document in limbo: "+n),t.xh.push(n),Ps(t));}/**
	 * Starts listens for documents in limbo that are enqueued for resolution,
	 * subject to a maximum number of concurrent resolutions.
	 *
	 * Without bounding the number of concurrent resolutions, the server can fail
	 * with "resource exhausted" errors which can lead to pathological client
	 * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
	 */function Ps(t){for(;t.xh.length>0&&t.$h.size<t.Dh;){var e=t.xh.shift(),n=t.Bh.next();t.kh.set(n,new ms(e)),t.$h=t.$h.ot(e,n),Wo(t.ph,new gt(zn(Un(e.path)),n,2/* LimboResolution */,qr.ai));}}function Vs(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s,u;return t.__generator(this,function(a){switch(a.label){case 0:return i=m(e),o=[],s=[],u=[],i.Nh.m()?[3/*break*/,3]:(i.Nh.forEach(function(t,e){u.push(i.Qh(e,n,r).then(function(t){if(t){i.Uh&&i.Sh.Qi(e.targetId,t.fromCache?"not-current":"current"),o.push(t);var n=ri.zr(e.targetId,t);s.push(n);}}));}),[4/*yield*/,Promise.all(u)]);case 1:return a.sent(),i.Ch.yu(o),[4/*yield*/,function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u,a,c,h,f;return t.__generator(this,function(t){switch(t.label){case 0:r=m(e),t.label=1;case 1:return t.trys.push([1,3,,4]),[4/*yield*/,r.persistence.runTransaction("notifyLocalViewChanges","readwrite",function(t){return yr.forEach(n,function(e){return yr.forEach(e.Kr,function(n){return r.persistence.No.Da(t,e.targetId,n);}).next(function(){return yr.forEach(e.Gr,function(n){return r.persistence.No.Na(t,e.targetId,n);});});});})];case 2:return t.sent(),[3/*break*/,4];case 3:if(!_r(i=t.sent()))throw i;// If `notifyLocalViewChanges` fails, we did not advance the sequence
	// number for the documents that were included in this transaction.
	// This might trigger them to be deleted earlier than they otherwise
	// would have, but it should not invalidate the integrity of the data.
	return l("LocalStore","Failed to update sequence numbers: "+i),[3/*break*/,4];case 4:for(o=0,s=n;o<s.length;o++){u=s[o],a=u.targetId,u.fromCache||(c=r.bc.get(a),h=c.nt,f=c.rt(h),// Advance the last limbo free snapshot version
	r.bc=r.bc.ot(a,f));}return[2/*return*/];}});});}(i.ju,s)];case 2:a.sent(),a.label=3;case 3:return[2/*return*/];}});});}function Us(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i;return t.__generator(this,function(o){switch(o.label){case 0:return(r=m(e)).currentUser.isEqual(n)?[3/*break*/,3]:(l("SyncEngine","User change. New user:",n.ti()),[4/*yield*/,/**
	                 * Tells the LocalStore that the currently authenticated user has changed.
	                 *
	                 * In response the local store switches the mutation queue to the new user and
	                 * returns any resulting document changes.
	                 */// PORTING NOTE: Android and iOS only return the documents affected by the
	// change.
	function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s;return t.__generator(this,function(t){switch(t.label){case 0:return r=m(e),i=r.Sr,o=r.Cc,[4/*yield*/,r.persistence.runTransaction("Handle user change","readonly",function(t){// Swap out the mutation queue, grabbing the pending mutation batches
	// before and after.
	var e;return r.Sr.Uo(t).next(function(s){return e=s,i=r.persistence.mc(n),// Recreate our LocalDocumentsView using the new
	// MutationQueue.
	o=new ni(r.Dc,i,r.persistence.Ic()),i.Uo(t);}).next(function(n){for(var r=[],i=[],s=Ot(),u=0,a=e// Union the old/new changed keys.
	;u<a.length;u++){var c=a[u];r.push(c.batchId);for(var h=0,f=c.mutations;h<f.length;h++){var l=f[h];s=s.add(l.key);}}for(var p=0,d=n;p<d.length;p++){var v=d[p];i.push(v.batchId);for(var y=0,g=v.mutations;y<g.length;y++){var m=g[y];s=s.add(m.key);}}// Return the set of all (potentially) changed documents and the list
	// of mutation batch IDs that were affected by change.
	return o.kr(t,s).next(function(t){return{jh:t,Kh:r,Gh:i};});});})];case 1:return s=t.sent(),[2/*return*/,(r.Sr=i,r.Cc=o,r.Vc.Nc(r.Cc),s)];}});});}(r.ju,n)]);case 1:return i=o.sent(),r.currentUser=n,// Fails tasks waiting for pending writes requested by previous user.
	function(t,e){t.Lh.forEach(function(t){t.forEach(function(t){t.reject(new c(a.CANCELLED,"'waitForPendingWrites' promise is rejected due to a user change."));});}),t.Lh.clear();}(r),// TODO(b/114226417): Consider calling this only in the primary tab.
	r.Sh.ji(n,i.Kh,i.Gh),[4/*yield*/,Vs(r,i.jh)];case 2:o.sent(),o.label=3;case 3:return[2/*return*/];}});});}function Cs(t,e){var n=m(t),r=n.kh.get(e);if(r&&r.Vh)return Ot().add(r.key);var i=Ot(),o=n.Fh.get(e);if(!o)return i;for(var s=0,u=o;s<u.length;s++){var a=u[s],c=n.Nh.get(a);i=i.kt(c.view.dh);}return i;}/**
	 * Reconcile the list of synced documents in an existing view with those
	 * from persistence.
	 */function Fs(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o;return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,To((r=m(e)).ju,n.query,/* usePreviousResults= */!0)];case 1:return i=t.sent(),o=n.view.Ph(i),[2/*return*/,(r.Uh&&Rs(r,n.targetId,o.Rh),o)];}});});}/** Applies a mutation state to an existing batch.  */// PORTING NOTE: Multi-Tab only.
	function Ms(e,n,r,i){return t.__awaiter(this,void 0,void 0,function(){var o,s;return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,function(t,e){var n=m(t),r=m(n.Sr);return n.persistence.runTransaction("Lookup mutation documents","readonly",function(t){return r.Lo(t,e).next(function(e){return e?n.Cc.kr(t,e):yr.resolve(null);});});}((o=m(e)).ju,n)];case 1:return null===(s=t.sent())?[3/*break*/,6]:"pending"!==r?[3/*break*/,3]:[4/*yield*/,is(o.ph)];case 2:// If we are the primary client, we need to send this write to the
	// backend. Secondary clients will ignore these writes since their remote
	// connection is disabled.
	return t.sent(),[3/*break*/,4];case 3:"acknowledged"===r||"rejected"===r?(// NOTE: Both these methods are no-ops for batches that originated from
	// other clients.
	xs(o,n,i||null),Ds(o,n),function(t,e){m(m(t).Sr).Ko(e);}(o.ju,n)):y(),t.label=4;case 4:return[4/*yield*/,Vs(o,s)];case 5:return t.sent(),[3/*break*/,7];case 6:// A throttled tab may not have seen the mutation before it was completed
	// and removed from the mutation queue, in which case we won't have cached
	// the affected documents. In this case we can safely ignore the update
	// since that means we didn't apply the mutation locally at all (if we
	// had, we would have cached the affected documents), and so we will just
	// see any resulting document changes via normal remote document updates
	// as applicable.
	l("SyncEngine","Cannot apply mutation batch with id: "+n),t.label=7;case 7:return[2/*return*/];}});});}/** Applies a query target change from a different tab. */// PORTING NOTE: Multi-Tab only.
	function qs(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u,a,c,h;return t.__generator(this,function(t){switch(t.label){case 0:return Ks(r=m(e)),Qs(r),!0!==n||!0===r.qh?[3/*break*/,3]:(i=r.Sh.Ci(),[4/*yield*/,js(r,i.A())]);case 1:return o=t.sent(),r.qh=!0,[4/*yield*/,fs(r.ph,!0)];case 2:for(t.sent(),s=0,u=o;s<u.length;s++){a=u[s],Wo(r.ph,a);}return[3/*break*/,7];case 3:return!1!==n||!1===r.qh?[3/*break*/,7]:(c=[],h=Promise.resolve(),r.Fh.forEach(function(t,e){r.Sh.qi(e)?c.push(e):h=h.then(function(){return Ls(r,e),Eo(r.ju,e,/*keepPersistedTargetData=*/!0);}),Ko(r.ph,e);}),[4/*yield*/,h]);case 4:return t.sent(),[4/*yield*/,js(r,c)];case 5:return t.sent(),// PORTING NOTE: Multi-Tab only.
	function(t){var e=m(t);e.kh.forEach(function(t,n){Ko(e.ph,n);}),e.Mh.Qc(),e.kh=new Map(),e.$h=new bt(A.i);}(r),r.qh=!1,[4/*yield*/,fs(r.ph,!1)];case 6:t.sent(),t.label=7;case 7:return[2/*return*/];}});});}function js(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u,a,c,h,f,l,p,d,v,y;return t.__generator(this,function(t){switch(t.label){case 0:r=m(e),i=[],o=[],s=0,u=n,t.label=1;case 1:return s<u.length?(a=u[s],c=void 0,(h=r.Fh.get(a))&&0!==h.length?[4/*yield*/,Io(r.ju,zn(h[0]))]:[3/*break*/,7]):[3/*break*/,13];case 2:// For queries that have a local View, we fetch their current state
	// from LocalStore (as the resume token and the snapshot version
	// might have changed) and reconcile their views with the persisted
	// state (the list of syncedDocuments may have gotten out of sync).
	c=t.sent(),f=0,l=h,t.label=3;case 3:return f<l.length?(p=l[f],d=r.Nh.get(p),[4/*yield*/,Fs(r,d)]):[3/*break*/,6];case 4:(v=t.sent()).snapshot&&o.push(v.snapshot),t.label=5;case 5:return f++,[3/*break*/,3];case 6:return[3/*break*/,11];case 7:return[4/*yield*/,No(r.ju,a)];case 8:return y=t.sent(),[4/*yield*/,Io(r.ju,y)];case 9:return c=t.sent(),[4/*yield*/,bs(r,Gs(y),a,/*current=*/!1)];case 10:t.sent(),t.label=11;case 11:i.push(c),t.label=12;case 12:return s++,[3/*break*/,1];case 13:return[2/*return*/,(r.Ch.yu(o),i)];}});});}/**
	 * Creates a `Query` object from the specified `Target`. There is no way to
	 * obtain the original `Query`, so we synthesize a `Query` from the `Target`
	 * object.
	 *
	 * The synthesized result might be different from the original `Query`, but
	 * since the synthesized `Query` should return the same results as the
	 * original one (only the presentation of results might differ), the potential
	 * difference will not cause issues.
	 */// PORTING NOTE: Multi-Tab only.
	function Gs(t){return Vn(t.path,t.collectionGroup,t.orderBy,t.filters,t.limit,"F"/* First */,t.startAt,t.endAt);}/** Returns the IDs of the clients that are currently active. */// PORTING NOTE: Multi-Tab only.
	function zs(t){var e=m(t);return m(m(e.ju).persistence).pi();}/** Applies a query target change from a different tab. */// PORTING NOTE: Multi-Tab only.
	function Bs(e,n,r,i){return t.__awaiter(this,void 0,void 0,function(){var o,s,u;return t.__generator(this,function(t){switch(t.label){case 0:return(o=m(e)).qh?(// If we receive a target state notification via WebStorage, we are
	// either already secondary or another tab has taken the primary lease.
	l("SyncEngine","Ignoring unexpected query state notification."),[3/*break*/,8]):[3/*break*/,1];case 1:if(!o.Fh.has(n))return[3/*break*/,8];switch(r){case"current":case"not-current":return[3/*break*/,2];case"rejected":return[3/*break*/,5];}return[3/*break*/,7];case 2:return[4/*yield*/,Ao(o.ju)];case 3:return s=t.sent(),u=Mt.Xt(n,"current"===r),[4/*yield*/,Vs(o,s,u)];case 4:return t.sent(),[3/*break*/,8];case 5:return[4/*yield*/,Eo(o.ju,n,/* keepPersistedTargetData */!0)];case 6:return t.sent(),Ls(o,n,i),[3/*break*/,8];case 7:y(),t.label=8;case 8:return[2/*return*/];}});});}/** Adds or removes Watch targets for queries from different tabs. */function Ws(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s,u,a,c,h,f,p,d;return t.__generator(this,function(v){switch(v.label){case 0:if(!(i=Ks(e)).qh)return[3/*break*/,10];o=0,s=n,v.label=1;case 1:return o<s.length?(u=s[o],i.Fh.has(u)?(// A target might have been added in a previous attempt
	l("SyncEngine","Adding an already active target "+u),[3/*break*/,5]):[4/*yield*/,No(i.ju,u)]):[3/*break*/,6];case 2:return a=v.sent(),[4/*yield*/,Io(i.ju,a)];case 3:return c=v.sent(),[4/*yield*/,bs(i,Gs(a),c.targetId,/*current=*/!1)];case 4:v.sent(),Wo(i.ph,c),v.label=5;case 5:return o++,[3/*break*/,1];case 6:h=function h(e){return t.__generator(this,function(t){switch(t.label){case 0:return i.Fh.has(e)?[4/*yield*/,Eo(i.ju,e,/* keepPersistedTargetData */!1).then(function(){Ko(i.ph,e),Ls(i,e);}).catch(Do)]:[3/*break*/,2];// Release queries that are still active.
	case 1:// Release queries that are still active.
	t.sent(),t.label=2;case 2:return[2/*return*/];}});},f=0,p=r,v.label=7;case 7:return f<p.length?(d=p[f],[5/*yield**/,h(d)]):[3/*break*/,10];case 8:v.sent(),v.label=9;case 9:return f++,[3/*break*/,7];case 10:return[2/*return*/];}});});}function Ks(t){var e=m(t);return e.ph.Gu.sh=Es.bind(null,e),e.ph.Gu.qe=Cs.bind(null,e),e.ph.Gu.nh=Ns.bind(null,e),e.Ch.yu=Vr.bind(null,e.bh),e.Ch.Wh=Ur.bind(null,e.bh),e;}function Qs(t){var e=m(t);return e.ph.Gu.ih=As.bind(null,e),e.ph.Gu.rh=Ss.bind(null,e),e;}/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */// TOOD(b/140938512): Drop SimpleQueryEngine and rename IndexFreeQueryEngine.
	/**
	 * A query engine that takes advantage of the target document mapping in the
	 * QueryCache. The IndexFreeQueryEngine optimizes query execution by only
	 * reading the documents that previously matched a query plus any documents that were
	 * edited after the query was last listened to.
	 *
	 * There are some cases where Index-Free queries are not guaranteed to produce
	 * the same results as full collection scans. In these cases, the
	 * IndexFreeQueryEngine falls back to full query processing. These cases are:
	 *
	 * - Limit queries where a document that matched the query previously no longer
	 *   matches the query.
	 *
	 * - Limit queries where a document edit may cause the document to sort below
	 *   another document that is in the local cache.
	 *
	 * - Queries that have never been CURRENT or free of Limbo documents.
	 */var Hs=/** @class */function(){function t(){}return t.prototype.Nc=function(t){this.zh=t;},t.prototype.Lr=function(t,e,r,i){var o=this;// Queries that match all documents don't benefit from using
	// IndexFreeQueries. It is more efficient to scan all documents in a
	// collection, rather than to perform individual lookups.
	return function(t){return 0===t.filters.length&&null===t.limit&&null==t.startAt&&null==t.endAt&&(0===t.on.length||1===t.on.length&&t.on[0].field.p());}(e)||r.isEqual(st.min())?this.Hh(t,e):this.zh.kr(t,i).next(function(s){var u=o.Yh(e,s);return(Cn(e)||Fn(e))&&o.Eh(e.an,u,i,r)?o.Hh(t,e):(f()<=n.LogLevel.DEBUG&&l("IndexFreeQueryEngine","Re-using previous result from %s to execute query: %s",r.toString(),Yn(e)),o.zh.Lr(t,e,r).next(function(t){// We merge `previousResults` into `updateResults`, since
	// `updateResults` is already a DocumentMap. If a document is
	// contained in both lists, then its contents are the same.
	return u.forEach(function(e){t=t.ot(e.key,e);}),t;}));});// Queries that have never seen a snapshot without limbo free documents
	// should also be run as a full collection scan.
	},/** Applies the query filter and sorting to the provided documents.  */t.prototype.Yh=function(t,e){// Sort the documents and re-apply the query filter since previously
	// matching documents do not necessarily still match the query.
	var n=new Tt(Xn(t));return e.forEach(function(e,r){r instanceof kn&&$n(t,r)&&(n=n.add(r));}),n;},/**
	     * Determines if a limit query needs to be refilled from cache, making it
	     * ineligible for index-free execution.
	     *
	     * @param sortedPreviousResults The documents that matched the query when it
	     * was last synchronized, sorted by the query's comparator.
	     * @param remoteKeys The document keys that matched the query at the last
	     * snapshot.
	     * @param limboFreeSnapshotVersion The version of the snapshot when the query
	     * was last synchronized.
	     */t.prototype.Eh=function(t,e,n,r){// The query needs to be refilled if a previously matching document no
	// longer matches.
	if(n.size!==e.size)return!0;// Limit queries are not eligible for index-free query execution if there is
	// a potential that an older document from cache now sorts before a document
	// that was previously part of the limit. This, however, can only happen if
	// the document at the edge of the limit goes out of limit.
	// If a document that is not the limit boundary sorts differently,
	// the boundary of the limit itself did not change and documents from cache
	// will continue to be "rejected" by this boundary. Therefore, we can ignore
	// any modifications that don't affect the last document.
	var i="F"/* First */===t?e.last():e.first();return!!i&&(i.hasPendingWrites||i.version.L(r)>0);},t.prototype.Hh=function(t,e){return f()<=n.LogLevel.DEBUG&&l("IndexFreeQueryEngine","Using full collection scan to execute query:",Yn(e)),this.zh.Lr(t,e,st.min());},t;}(),Ys=/** @class */function(){function t(t,e){this.Dr=t,this.No=e,/**
	             * The set of all mutations that have been sent but not yet been applied to
	             * the backend.
	             */this.Sr=[],/** Next value to use when assigning sequential IDs to each mutation batch. */this.Jh=1,/** An ordered mapping between documents and the mutations batch IDs. */this.Xh=new Tt(Lo.kc);}return t.prototype.$o=function(t){return yr.resolve(0===this.Sr.length);},t.prototype.ko=function(t,e,n,r){var i=this.Jh;this.Jh++,this.Sr.length>0&&this.Sr[this.Sr.length-1];var o=new Xr(i,e,n,r);this.Sr.push(o);// Track references by document key and index collection parents.
	for(var s=0,u=r;s<u.length;s++){var a=u[s];this.Xh=this.Xh.add(new Lo(a.key,i)),this.Dr.Mo(t,a.key.path.h());}return yr.resolve(o);},t.prototype.Oo=function(t,e){return yr.resolve(this.Zh(e));},t.prototype.Bo=function(t,e){var n=e+1,r=this.tl(n),i=r<0?0:r;// The requested batchId may still be out of range so normalize it to the
	// start of the queue.
	return yr.resolve(this.Sr.length>i?this.Sr[i]:null);},t.prototype.qo=function(){return yr.resolve(0===this.Sr.length?-1:this.Jh-1);},t.prototype.Uo=function(t){return yr.resolve(this.Sr.slice());},t.prototype.Nr=function(t,e){var n=this,r=new Lo(e,0),i=new Lo(e,Number.POSITIVE_INFINITY),o=[];return this.Xh.Ft([r,i],function(t){var e=n.Zh(t.jc);o.push(e);}),yr.resolve(o);},t.prototype.Or=function(t,e){var n=this,r=new Tt(H);return e.forEach(function(t){var e=new Lo(t,0),i=new Lo(t,Number.POSITIVE_INFINITY);n.Xh.Ft([e,i],function(t){r=r.add(t.jc);});}),yr.resolve(this.el(r));},t.prototype.Wr=function(t,e){// Use the query path as a prefix for testing if a document matches the
	// query.
	var n=e.path,r=n.length+1,i=n;// Construct a document reference for actually scanning the index. Unlike
	// the prefix the document key in this reference must have an even number of
	// segments. The empty segment can be used a suffix of the query path
	// because it precedes all other segments in an ordered traversal.
	A.F(i)||(i=i.child(""));var o=new Lo(new A(i),0),s=new Tt(H);// Find unique batchIDs referenced by all documents potentially matching the
	// query.
	return this.Xh.xt(function(t){var e=t.key.path;return!!n.T(e)&&(// Rows with document keys more than one segment longer than the query
	// path can't be matches. For example, a query on 'rooms' can't match
	// the document /rooms/abc/messages/xyx.
	// TODO(mcg): we'll need a different scanner when we implement
	// ancestor queries.
	e.length===r&&(s=s.add(t.jc)),!0);},o),yr.resolve(this.el(s));},t.prototype.el=function(t){var e=this,n=[];// Construct an array of matching batches, sorted by batchID to ensure that
	// multiple mutations affecting the same document key are applied in order.
	return t.forEach(function(t){var r=e.Zh(t);null!==r&&n.push(r);}),n;},t.prototype.Wo=function(t,e){var n=this;g(0===this.nl(e.batchId,"removed")),this.Sr.shift();var r=this.Xh;return yr.forEach(e.mutations,function(i){var o=new Lo(i.key,e.batchId);return r=r.delete(o),n.No.Go(t,i.key);}).next(function(){n.Xh=r;});},t.prototype.Ko=function(t){// No-op since the memory mutation queue does not maintain a separate cache.
	},t.prototype.Ho=function(t,e){var n=new Lo(e,0),r=this.Xh.$t(n);return yr.resolve(e.isEqual(r&&r.key));},t.prototype.zo=function(t){return this.Sr.length,yr.resolve();},/**
	     * Finds the index of the given batchId in the mutation queue and asserts that
	     * the resulting index is within the bounds of the queue.
	     *
	     * @param batchId The batchId to search for
	     * @param action A description of what the caller is doing, phrased in passive
	     * form (e.g. "acknowledged" in a routine that acknowledges batches).
	     */t.prototype.nl=function(t,e){return this.tl(t);},/**
	     * Finds the index of the given batchId in the mutation queue. This operation
	     * is O(1).
	     *
	     * @return The computed index of the batch with the given batchId, based on
	     * the state of the queue. Note this index can be negative if the requested
	     * batchId has already been remvoed from the queue or past the end of the
	     * queue if the batchId is larger than the last added batch.
	     */t.prototype.tl=function(t){return 0===this.Sr.length?0:t-this.Sr[0].batchId;// Examine the front of the queue to figure out the difference between the
	// batchId and indexes in the array. Note that since the queue is ordered
	// by batchId, if the first batch has a larger batchId then the requested
	// batchId doesn't exist in the queue.
	},/**
	     * A version of lookupMutationBatch that doesn't return a promise, this makes
	     * other functions that uses this code easier to read and more efficent.
	     */t.prototype.Zh=function(t){var e=this.tl(t);return e<0||e>=this.Sr.length?null:this.Sr[e];},t;}(),$s=/** @class */function(){/**
	     * @param sizer Used to assess the size of a document. For eager GC, this is expected to just
	     * return 0 to avoid unnecessarily doing the work of calculating the size.
	     */function t(t,e){this.Dr=t,this.sl=e,/** Underlying cache of documents and their read times. */this.docs=new bt(A.i),/** Size of all cached documents. */this.size=0/**
	     * Adds the supplied entry to the cache and updates the cache size as appropriate.
	     *
	     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()`.
	     */;}return t.prototype.Er=function(t,e,n){var r=e.key,i=this.docs.get(r),o=i?i.size:0,s=this.sl(e);return this.docs=this.docs.ot(r,{ta:e,size:s,readTime:n}),this.size+=s-o,this.Dr.Mo(t,r.path.h());},/**
	     * Removes the specified entry from the cache and updates the cache size as appropriate.
	     *
	     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
	     * returned by `newChangeBuffer()`.
	     */t.prototype.Ar=function(t){var e=this.docs.get(t);e&&(this.docs=this.docs.remove(t),this.size-=e.size);},t.prototype.Rr=function(t,e){var n=this.docs.get(e);return yr.resolve(n?n.ta:null);},t.prototype.getEntries=function(t,e){var n=this,r=Dt();return e.forEach(function(t){var e=n.docs.get(t);r=r.ot(t,e?e.ta:null);}),yr.resolve(r);},t.prototype.Lr=function(t,e,n){for(var r=Lt(),i=new A(e.path.child("")),o=this.docs.ft(i)// Documents are ordered by key, so we can use a prefix scan to narrow down
	// the documents we need to match the query against.
	;o.At();){var s=o.It(),u=s.key,a=s.value,c=a.ta,h=a.readTime;if(!e.path.T(u.path))break;h.L(n)<=0||c instanceof kn&&$n(e,c)&&(r=r.ot(c.key,c));}return yr.resolve(r);},t.prototype.il=function(t,e){return yr.forEach(this.docs,function(t){return e(t);});},t.prototype.ra=function(t){// `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
	// a separate changelog and does not need special handling for removals.
	return new Xs(this);},t.prototype.aa=function(t){return yr.resolve(this.size);},t;}(),Xs=/** @class */function(e){function n(t){var n=this;return(n=e.call(this)||this).ca=t,n;}return t.__extends(n,e),n.prototype.yr=function(t){var e=this,n=[];return this.wr.forEach(function(r,i){i?n.push(e.ca.Er(t,i,e.readTime)):e.ca.Ar(r);}),yr.$n(n);},n.prototype.gr=function(t,e){return this.ca.Rr(t,e);},n.prototype.Pr=function(t,e){return this.ca.getEntries(t,e);},n;}(Zr),Js=/** @class */function(){function t(t){this.persistence=t,/**
	             * Maps a target to the data about that target
	             */this.rl=new it(function(t){return lt(t);},pt),/** The last received snapshot version. */this.lastRemoteSnapshotVersion=st.min(),/** The highest numbered target ID encountered. */this.highestTargetId=0,/** The highest sequence number encountered. */this.ol=0,/**
	             * A ordered bidirectional mapping between documents and the remote target
	             * IDs.
	             */this.al=new xo(),this.targetCount=0,this.cl=ro.fa();}return t.prototype.Ce=function(t,e){return this.rl.forEach(function(t,n){return e(n);}),yr.resolve();},t.prototype.Ea=function(t){return yr.resolve(this.lastRemoteSnapshotVersion);},t.prototype.Ia=function(t){return yr.resolve(this.ol);},t.prototype.wa=function(t){return this.highestTargetId=this.cl.next(),yr.resolve(this.highestTargetId);},t.prototype.Aa=function(t,e,n){return n&&(this.lastRemoteSnapshotVersion=n),e>this.ol&&(this.ol=e),yr.resolve();},t.prototype.ga=function(t){this.rl.set(t.target,t);var e=t.targetId;e>this.highestTargetId&&(this.cl=new ro(e),this.highestTargetId=e),t.sequenceNumber>this.ol&&(this.ol=t.sequenceNumber);},t.prototype.Ra=function(t,e){return this.ga(e),this.targetCount+=1,yr.resolve();},t.prototype.ya=function(t,e){return this.ga(e),yr.resolve();},t.prototype.Va=function(t,e){return this.rl.delete(e.target),this.al.Uc(e.targetId),this.targetCount-=1,yr.resolve();},t.prototype.po=function(t,e,n){var r=this,i=0,o=[];return this.rl.forEach(function(s,u){u.sequenceNumber<=e&&null===n.get(u.targetId)&&(r.rl.delete(s),o.push(r.pa(t,u.targetId)),i++);}),yr.$n(o).next(function(){return i;});},t.prototype.ba=function(t){return yr.resolve(this.targetCount);},t.prototype.va=function(t,e){var n=this.rl.get(e)||null;return yr.resolve(n);},t.prototype.Sa=function(t,e,n){return this.al.Lc(e,n),yr.resolve();},t.prototype.Ca=function(t,e,n){this.al.qc(e,n);var r=this.persistence.No,i=[];return r&&e.forEach(function(e){i.push(r.Go(t,e));}),yr.$n(i);},t.prototype.pa=function(t,e){return this.al.Uc(e),yr.resolve();},t.prototype.Fa=function(t,e){var n=this.al.Wc(e);return yr.resolve(n);},t.prototype.Ho=function(t,e){return yr.resolve(this.al.Ho(e));},t;}(),Zs=/** @class */function(){/**
	     * The constructor accepts a factory for creating a reference delegate. This
	     * allows both the delegate and this instance to have strong references to
	     * each other without having nullable fields that would then need to be
	     * checked or asserted on every access.
	     */function t(t){var e=this;this.ul={},this.Ma=new qr(0),this.Oa=!1,this.Oa=!0,this.No=t(this),this.Ka=new Js(this),this.Dr=new Ui(),this.vr=function(t,n){return new $s(t,function(t){return e.No.hl(t);});}(this.Dr);}return t.prototype.start=function(){return Promise.resolve();},t.prototype.Di=function(){// No durable state to ensure is closed on shutdown.
	return this.Oa=!1,Promise.resolve();},Object.defineProperty(t.prototype,"Ei",{get:function get(){return this.Oa;},enumerable:!1,configurable:!0}),t.prototype.Za=function(){// No op.
	},t.prototype.tc=function(){// No op.
	},t.prototype.Ic=function(){return this.Dr;},t.prototype.mc=function(t){var e=this.ul[t.ti()];return e||(e=new Ys(this.Dr,this.No),this.ul[t.ti()]=e),e;},t.prototype.Tc=function(){return this.Ka;},t.prototype.Ec=function(){return this.vr;},t.prototype.runTransaction=function(t,e,n){var r=this;l("MemoryPersistence","Starting transaction:",t);var i=new tu(this.Ma.next());return this.No.ll(),n(i).next(function(t){return r.No._l(i).next(function(){return t;});}).Fn().then(function(t){return i.br(),t;});},t.prototype.fl=function(t,e){return yr.kn(Object.values(this.ul).map(function(n){return function(){return n.Ho(t,e);};}));},t;}(),tu=/** @class */function(e){function n(t){var n=this;return(n=e.call(this)||this).xa=t,n;}return t.__extends(n,e),n;}(ei),eu=/** @class */function(){function t(t){this.persistence=t,/** Tracks all documents that are active in Query views. */this.dl=new xo(),/** The list of documents that are potentially GCed after each transaction. */this.wl=null;}return t.ml=function(e){return new t(e);},Object.defineProperty(t.prototype,"Tl",{get:function get(){if(this.wl)return this.wl;throw y();},enumerable:!1,configurable:!0}),t.prototype.Da=function(t,e,n){return this.dl.Da(n,e),this.Tl.delete(n.toString()),yr.resolve();},t.prototype.Na=function(t,e,n){return this.dl.Na(n,e),this.Tl.add(n.toString()),yr.resolve();},t.prototype.Go=function(t,e){return this.Tl.add(e.toString()),yr.resolve();},t.prototype.removeTarget=function(t,e){var n=this;this.dl.Uc(e.targetId).forEach(function(t){return n.Tl.add(t.toString());});var r=this.persistence.Tc();return r.Fa(t,e.targetId).next(function(t){t.forEach(function(t){return n.Tl.add(t.toString());});}).next(function(){return r.Va(t,e);});},t.prototype.ll=function(){this.wl=new Set();},t.prototype._l=function(t){var e=this,n=this.persistence.Ec().ra();// Remove newly orphaned documents.
	return yr.forEach(this.Tl,function(r){var i=A.D(r);return e.El(t,i).next(function(t){t||n.Ar(i);});}).next(function(){return e.wl=null,n.apply(t);});},t.prototype.yc=function(t,e){var n=this;return this.El(t,e).next(function(t){t?n.Tl.delete(e.toString()):n.Tl.add(e.toString());});},t.prototype.hl=function(t){// For eager GC, we don't care about the document size, there are no size thresholds.
	return 0;},t.prototype.El=function(t,e){var n=this;return yr.kn([function(){return yr.resolve(n.dl.Ho(e));},function(){return n.persistence.Tc().Ho(t,e);},function(){return n.persistence.fl(t,e);}]);},t;}(),nu=/** @class */function(){function t(t){this.Il=t.Il,this.Al=t.Al;}return t.prototype.gu=function(t){this.Rl=t;},t.prototype.Tu=function(t){this.gl=t;},t.prototype.onMessage=function(t){this.Pl=t;},t.prototype.close=function(){this.Al();},t.prototype.send=function(t){this.Il(t);},t.prototype.yl=function(){this.Rl();},t.prototype.Vl=function(t){this.gl(t);},t.prototype.pl=function(t){this.Pl(t);},t;}(),ru={BatchGetDocuments:"batchGet",Commit:"commit",RunQuery:"runQuery"},iu=/** @class */function(e){function n(t){var n=this;return(n=e.call(this,t)||this).forceLongPolling=t.forceLongPolling,n.W=t.W,n;}/**
	     * Base class for all Rest-based connections to the backend (WebChannel and
	     * HTTP).
	     */return t.__extends(n,e),n.prototype.Nl=function(t,e,n,r){return new Promise(function(o,s){var u=new i.XhrIo();u.listenOnce(i.EventType.COMPLETE,function(){try{switch(u.getLastErrorCode()){case i.ErrorCode.NO_ERROR:var e=u.getResponseJson();l("Connection","XHR received:",JSON.stringify(e)),o(e);break;case i.ErrorCode.TIMEOUT:l("Connection",'RPC "'+t+'" timed out'),s(new c(a.DEADLINE_EXCEEDED,"Request time out"));break;case i.ErrorCode.HTTP_ERROR:var n=u.getStatus();if(l("Connection",'RPC "'+t+'" failed with status:',n,"response text:",u.getResponseText()),n>0){var r=u.getResponseJson().error;if(r&&r.status&&r.message){var h=function(t){var e=t.toLowerCase().replace("_","-");return Object.values(a).indexOf(e)>=0?e:a.UNKNOWN;}(r.status);s(new c(h,r.message));}else s(new c(a.UNKNOWN,"Server responded with status "+u.getStatus()));}else// If we received an HTTP_ERROR but there's no status code,
	// it's most probably a connection issue
	s(new c(a.UNAVAILABLE,"Connection failed."));break;default:y();}}finally{l("Connection",'RPC "'+t+'" completed.');}});var h=JSON.stringify(r);u.send(e,"POST",h,n,15);});},n.prototype.Pu=function(t,e){var n=[this.vl,"/","google.firestore.v1.Firestore","/",t,"/channel"],o=i.createWebChannelTransport(),s={// Required for backend stickiness, routing behavior is based on this
	// parameter.
	httpSessionIdParam:"gsessionid",initMessageHeaders:{},messageUrlParams:{// This param is used to improve routing and project isolation by the
	// backend and must be included in every request.
	database:"projects/"+this.U.projectId+"/databases/"+this.U.database},sendRawJson:!0,supportsCrossDomainXhr:!0,internalChannelParams:{// Override the default timeout (randomized between 10-20 seconds) since
	// a large write batch on a slow internet connection may take a long
	// time to send to the backend. Rather than have WebChannel impose a
	// tight timeout which could lead to infinite timeouts and retries, we
	// set it very large (5-10 minutes) and rely on the browser's builtin
	// timeouts to kick in if the request isn't working.
	forwardChannelRequestTimeoutMs:6e5},forceLongPolling:this.forceLongPolling,detectBufferingProxy:this.W};this.Cl(s.initMessageHeaders,e),// Sending the custom headers we just added to request.initMessageHeaders
	// (Authorization, etc.) will trigger the browser to make a CORS preflight
	// request because the XHR will no longer meet the criteria for a "simple"
	// CORS request:
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
	// Therefore to avoid the CORS preflight request (an extra network
	// roundtrip), we use the httpHeadersOverwriteParam option to specify that
	// the headers should instead be encoded into a special "$httpHeaders" query
	// parameter, which is recognized by the webchannel backend. This is
	// formally defined here:
	// https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32
	// TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request
	// doesn't have an Origin header. So we have to exclude a few browser environments that are
	// known to (sometimes) not include an Origin. See
	// https://github.com/firebase/firebase-js-sdk/issues/1491.
	r.isMobileCordova()||r.isReactNative()||r.isElectron()||r.isIE()||r.isUWP()||r.isBrowserExtension()||(s.httpHeadersOverwriteParam="$httpHeaders");var u=n.join("");l("Connection","Creating WebChannel: "+u,s);var h=o.createWebChannel(u,s),f=!1,p=!1,v=new nu({Il:function Il(t){p?l("Connection","Not sending because WebChannel is closed:",t):(f||(l("Connection","Opening WebChannel transport."),h.open(),f=!0),l("Connection","WebChannel sending:",t),h.send(t));},Al:function Al(){return h.close();}}),y=function y(t,e){// TODO(dimond): closure typing seems broken because WebChannel does
	// not implement goog.events.Listenable
	h.listen(t,function(t){try{e(t);}catch(t){setTimeout(function(){throw t;},0);}});};// WebChannel supports sending the first message with the handshake - saving
	// a network round trip. However, it will have to call send in the same
	// JS event loop as open. In order to enforce this, we delay actually
	// opening the WebChannel until send is called. Whether we have called
	// open is tracked with this variable.
	// Closure events are guarded and exceptions are swallowed, so catch any
	// exception and rethrow using a setTimeout so they become visible again.
	// Note that eventually this function could go away if we are confident
	// enough the code is exception free.
	return y(i.WebChannel.EventType.OPEN,function(){p||l("Connection","WebChannel transport opened.");}),y(i.WebChannel.EventType.CLOSE,function(){p||(p=!0,l("Connection","WebChannel transport closed"),v.Vl());}),y(i.WebChannel.EventType.ERROR,function(t){p||(p=!0,d("Connection","WebChannel transport errored:",t),v.Vl(new c(a.UNAVAILABLE,"The operation could not be completed")));}),y(i.WebChannel.EventType.MESSAGE,function(t){var e;if(!p){var n=t.data[0];g(!!n);// TODO(b/35143891): There is a bug in One Platform that caused errors
	// (and only errors) to be wrapped in an extra array. To be forward
	// compatible with the bug we need to check either condition. The latter
	// can be removed once the fix has been rolled out.
	// Use any because msgData.error is not typed.
	var r=n,i=r.error||(null===(e=r[0])||void 0===e?void 0:e.error);if(i){l("Connection","WebChannel received error:",i);// error.status will be a string like 'OK' or 'NOT_FOUND'.
	var o=i.status,s=function(t){// lookup by string
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	var e=vt[t];if(void 0!==e)return _t(e);}(o),u=i.message;void 0===s&&(s=a.INTERNAL,u="Unknown error status: "+o+" with message "+i.message),// Mark closed so no further events are propagated
	p=!0,v.Vl(new c(s,u)),h.close();}else l("Connection","WebChannel received:",n),v.pl(n);}}),setTimeout(function(){// Technically we could/should wait for the WebChannel opened event,
	// but because we want to send the first message with the WebChannel
	// handshake we pretend the channel opened here (asynchronously), and
	// then delay the actual open until the first message is sent.
	v.yl();},0),v;},n;}(/** @class */function(){function t(t){this.bl=t,this.U=t.U;var e=t.ssl?"https":"http";this.vl=e+"://"+t.host,this.Sl="projects/"+this.U.projectId+"/databases/"+this.U.database+"/documents";}return t.prototype.$u=function(t,e,n,r){var i=this.Dl(t,e);l("RestConnection","Sending: ",i,n);var o={};return this.Cl(o,r),this.Nl(t,i,o,n).then(function(t){return l("RestConnection","Received: ",t),t;},function(e){throw d("RestConnection",t+" failed with error: ",e,"url: ",i,"request:",n),e;});},t.prototype.ku=function(t,e,n,r){// The REST API automatically aggregates all of the streamed results, so we
	// can just use the normal invoke() method.
	return this.$u(t,e,n,r);},/**
	     * Modifies the headers for a request, adding any authorization token if
	     * present and any additional headers for the request.
	     */t.prototype.Cl=function(t,e){if(t["X-Goog-Api-Client"]="gl-js/ fire/7.24.0",// Content-Type: text/plain will avoid preflight requests which might
	// mess with CORS and redirects by proxies. If we add custom headers
	// we will need to change this code to potentially use the $httpOverwrite
	// parameter supported by ESF to avoid triggering preflight requests.
	t["Content-Type"]="text/plain",e)for(var n in e.Kc){e.Kc.hasOwnProperty(n)&&(t[n]=e.Kc[n]);}},t.prototype.Dl=function(t,e){var n=ru[t];return this.vl+"/v1/"+e+":"+n;},t;}()),ou=/** @class */function(){function t(){var t=this;this.Fl=function(){return t.xl();},this.$l=function(){return t.kl();},this.Ml=[],this.Ol();}return t.prototype.Zu=function(t){this.Ml.push(t);},t.prototype.Di=function(){window.removeEventListener("online",this.Fl),window.removeEventListener("offline",this.$l);},t.prototype.Ol=function(){window.addEventListener("online",this.Fl),window.addEventListener("offline",this.$l);},t.prototype.xl=function(){l("ConnectivityMonitor","Network connectivity changed: AVAILABLE");for(var t=0,e=this.Ml;t<e.length;t++){(0,e[t])(0/* AVAILABLE */);}},t.prototype.kl=function(){l("ConnectivityMonitor","Network connectivity changed: UNAVAILABLE");for(var t=0,e=this.Ml;t<e.length;t++){(0,e[t])(1/* UNAVAILABLE */);}},// TODO(chenbrian): Consider passing in window either into this component or
	// here for testing via FakeWindow.
	/** Checks that all used attributes of window are available. */t.Ln=function(){return"undefined"!=typeof window&&void 0!==window.addEventListener&&void 0!==window.removeEventListener;},t;}(),su=/** @class */function(){function t(){}return t.prototype.Zu=function(t){// No-op.
	},t.prototype.Di=function(){// No-op.
	},t;}();/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//** Initializes the WebChannelConnection for the browser. *//**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */function uu(t){return new ye(t,/* useProto3Json= */!0);}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */var au="You are using the memory-only build of Firestore. Persistence support is only available via the @firebase/firestore bundle or the firebase-firestore.js build.",cu=/** @class */function(){function e(){}return e.prototype.initialize=function(e){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return this.Sh=this.Ll(e),this.persistence=this.Bl(e),[4/*yield*/,this.persistence.start()];case 1:return t.sent(),this.ql=this.Ul(e),this.ju=this.Ql(e),[2/*return*/];}});});},e.prototype.Ul=function(t){return null;},e.prototype.Ql=function(t){/** Manages our in-memory or durable persistence. */return e=this.persistence,n=new Hs(),r=t.Wl,new go(e,n,r);var e,n,r;},e.prototype.Bl=function(t){if(t.persistenceSettings.jl)throw new c(a.FAILED_PRECONDITION,au);return new Zs(eu.ml);},e.prototype.Ll=function(t){return new $r();},e.prototype.terminate=function(){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return this.ql&&this.ql.stop(),[4/*yield*/,this.Sh.Di()];case 1:return t.sent(),[4/*yield*/,this.persistence.Di()];case 2:return t.sent(),[2/*return*/];}});});},e.prototype.clearPersistence=function(t,e){throw new c(a.FAILED_PRECONDITION,au);},e;}(),hu=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.initialize=function(n){return t.__awaiter(this,void 0,void 0,function(){var r,i=this;return t.__generator(this,function(o){switch(o.label){case 0:return[4/*yield*/,e.prototype.initialize.call(this,n)];case 1:return o.sent(),r=this.Kl.fi,this.Sh instanceof Yr?(this.Sh.fi={er:Ms.bind(null,r),nr:Bs.bind(null,r),sr:Ws.bind(null,r),pi:zs.bind(null,r)},[4/*yield*/,this.Sh.start()]):[3/*break*/,3];case 2:o.sent(),o.label=3;case 3:// NOTE: This will immediately call the listener, so we make sure to
	// set it after localStore / remoteStore are started.
	return[4/*yield*/,this.persistence.Xa(function(e){return t.__awaiter(i,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,qs(this.Kl.fi,e)];case 1:return t.sent(),this.ql&&(e&&!this.ql.Ei?this.ql.start(this.ju):e||this.ql.stop()),[2/*return*/];}});});})];case 4:// NOTE: This will immediately call the listener, so we make sure to
	// set it after localStore / remoteStore are started.
	return o.sent(),[2/*return*/];}});});},n.prototype.Ll=function(t){if(t.persistenceSettings.jl&&t.persistenceSettings.synchronizeTabs){var e=Ar();if(!Yr.Ln(e))throw new c(a.UNIMPLEMENTED,"IndexedDB persistence is only available on platforms that support LocalStorage.");var n=yo(t.bl.U,t.bl.persistenceKey);return new Yr(e,t.cs,n,t.clientId,t.Wl);}return new $r();},n;}(/** @class */function(e){function n(t){var n=this;return(n=e.call(this)||this).Kl=t,n;}return t.__extends(n,e),n.prototype.initialize=function(n){return t.__awaiter(this,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,e.prototype.initialize.call(this,n)];case 1:return t.sent(),[4/*yield*/,So(this.ju)];case 2:return t.sent(),[4/*yield*/,this.Kl.initialize(this,n)];case 3:// Enqueue writes from a previous session
	return t.sent(),[4/*yield*/,Qs(this.Kl.fi)];case 4:// Enqueue writes from a previous session
	return t.sent(),[4/*yield*/,is(this.Kl.ph)];case 5:return t.sent(),[2/*return*/];}});});},n.prototype.Ul=function(t){var e=this.persistence.No.wo;return new ai(e,t.cs);},n.prototype.Bl=function(t){var e=yo(t.bl.U,t.bl.persistenceKey),n=uu(t.bl.U);return new ho(t.persistenceSettings.synchronizeTabs,e,t.clientId,ui.ao(t.persistenceSettings.cacheSizeBytes),t.cs,Ar(),Sr(),n,this.Sh,t.persistenceSettings.ka);},n.prototype.Ll=function(t){return new $r();},n.prototype.clearPersistence=function(e,n){return function(e){return t.__awaiter(this,void 0,void 0,function(){var n;return t.__generator(this,function(t){switch(t.label){case 0:return gr.Ln()?(n=e+"main",[4/*yield*/,gr.delete(n)]):[2/*return*/,Promise.resolve()];case 1:return t.sent(),[2/*return*/];}});});}(yo(e,n));},n;}(cu)),fu=/** @class */function(){function e(){}return e.prototype.initialize=function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r=this;return t.__generator(this,function(t){switch(t.label){case 0:return this.ju?[3/*break*/,2]:(this.ju=e.ju,this.Sh=e.Sh,this.Ku=this.Gl(n),this.ph=this.zl(n),this.bh=this.Hl(n),this.fi=this.Yl(n),this.Sh.di=function(t){return Ts(r.fi,t,1/* SharedClientState */);},this.ph.Gu.Jl=Us.bind(null,this.fi),[4/*yield*/,fs(this.ph,this.fi.Uh)]);case 1:t.sent(),t.label=2;case 2:return[2/*return*/];}});});},e.prototype.Hl=function(t){return new Rr();},e.prototype.Gl=function(t){var e,n=uu(t.bl.U),r=(e=t.bl,new iu(e));/** Return the Platform-specific connectivity monitor. */return function(t,e,n){return new Mo(t,e,n);}(t.credentials,r,n);},e.prototype.zl=function(t){var e,n,r,i,o,s=this;return e=this.ju,n=this.Ku,r=t.cs,i=function i(t){return Ts(s.fi,t,0/* RemoteStore */);},o=ou.Ln()?new ou():new su(),new jo(e,n,r,i,o);},e.prototype.Yl=function(t){return function(t,e,n,// PORTING NOTE: Manages state synchronization in multi-tab environments.
	r,i,o,s){var u=new ws(t,e,n,r,i,o);return s&&(u.qh=!0),u;}(this.ju,this.ph,this.bh,this.Sh,t.Wl,t.Dh,!t.persistenceSettings.jl||!t.persistenceSettings.synchronizeTabs);},e.prototype.terminate=function(){return Bo(this.ph);},e;}(),lu=/** @class */function(){function t(t){this.observer=t,/**
	             * When set to true, will not raise future events. Necessary to deal with
	             * async detachment of listener.
	             */this.muted=!1;}return t.prototype.next=function(t){this.observer.next&&this.Xl(this.observer.next,t);},t.prototype.error=function(t){this.observer.error?this.Xl(this.observer.error,t):console.error("Uncaught Error in snapshot listener:",t);},t.prototype.Zl=function(){this.muted=!0;},t.prototype.Xl=function(t,e){var n=this;this.muted||setTimeout(function(){n.muted||t(e);},0);},t;}(),pu=function pu(t){!function(t,e,n,r){if(!(e instanceof Array)||e.length<1)throw new c(a.INVALID_ARGUMENT,"Function FieldPath() requires its fieldNames argument to be an array with at least "+W(1,"element")+".");}(0,t);for(var e=0;e<t.length;++e){if(k("FieldPath","string",e,t[e]),0===t[e].length)throw new c(a.INVALID_ARGUMENT,"Invalid field name at argument $(i + 1). Field names must not be empty.");}this.t_=new N(t);},du=/** @class */function(e){/**
	     * Creates a FieldPath from the provided field names. If more than one field
	     * name is provided, the path will point to a nested field in a document.
	     *
	     * @param fieldNames A list of field names.
	     */function n(){for(var t=[],n=0;n<arguments.length;n++){t[n]=arguments[n];}return e.call(this,t)||this;}return t.__extends(n,e),n.documentId=function(){/**
	         * Internal Note: The backend doesn't technically support querying by
	         * document ID. Instead it queries by the entire document name (full path
	         * included), but in the cases we currently support documentId(), the net
	         * effect is the same.
	         */return new n(N.v().R());},n.prototype.isEqual=function(t){if(!(t instanceof n))throw G("isEqual","FieldPath",1,t);return this.t_.isEqual(t.t_);},n;}(pu),vu=new RegExp("[~\\*/\\[\\]]"),yu=/**
	     * @param _methodName The public API endpoint that returns this class.
	     */function yu(t){this.e_=t;},gu=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.n_=function(t){if(2/* MergeSet */!==t.s_)throw 1/* Update */===t.s_?t.i_(this.e_+"() can only appear at the top level of your update data"):t.i_(this.e_+"() cannot be used with set() unless you pass {merge:true}");// No transform to add for a delete, but we need to add it to our
	// fieldMask so it gets deleted.
	return t.We.push(t.path),null;},n.prototype.isEqual=function(t){return t instanceof n;},n;}(yu);/**
	 * Provides all components needed for Firestore with in-memory persistence.
	 * Uses EagerGC garbage collection.
	 *//**
	 * Creates a child context for parsing SerializableFieldValues.
	 *
	 * This is different than calling `ParseContext.contextWith` because it keeps
	 * the fieldTransforms and fieldMask separate.
	 *
	 * The created context has its `dataSource` set to `UserDataSource.Argument`.
	 * Although these values are used with writes, any elements in these FieldValues
	 * are not considered writes since they cannot contain any FieldValue sentinels,
	 * etc.
	 *
	 * @param fieldValue The sentinel FieldValue for which to create a child
	 *     context.
	 * @param context The parent context.
	 * @param arrayElement Whether or not the FieldValue has an array.
	 */function mu(t,e,n){return new Lu({s_:3/* Argument */,r_:e.settings.r_,methodName:t.e_,o_:n},e.U,e.serializer,e.ignoreUndefinedProperties);}var wu=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.n_=function(t){return new cn(t.path,new Ze());},n.prototype.isEqual=function(t){return t instanceof n;},n;}(yu),_u=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,t)||this).a_=n,r;}return t.__extends(n,e),n.prototype.n_=function(t){var e=mu(this,t,/*array=*/!0),n=this.a_.map(function(t){return Uu(t,e);}),r=new tn(n);return new cn(t.path,r);},n.prototype.isEqual=function(t){// TODO(mrschmidt): Implement isEquals
	return this===t;},n;}(yu),bu=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,t)||this).a_=n,r;}return t.__extends(n,e),n.prototype.n_=function(t){var e=mu(this,t,/*array=*/!0),n=this.a_.map(function(t){return Uu(t,e);}),r=new nn(n);return new cn(t.path,r);},n.prototype.isEqual=function(t){// TODO(mrschmidt): Implement isEquals
	return this===t;},n;}(yu),Iu=/** @class */function(e){function n(t,n){var r=this;return(r=e.call(this,t)||this).c_=n,r;}return t.__extends(n,e),n.prototype.n_=function(t){var e=new on(t.serializer,we(t.serializer,this.c_));return new cn(t.path,e);},n.prototype.isEqual=function(t){// TODO(mrschmidt): Implement isEquals
	return this===t;},n;}(yu),Eu=/** @class */function(){/**
	     * Creates a new immutable `GeoPoint` object with the provided latitude and
	     * longitude values.
	     * @param latitude The latitude as number between -90 and 90.
	     * @param longitude The longitude as number between -180 and 180.
	     */function t(t,e){if(D("GeoPoint",arguments,2),k("GeoPoint","number",1,t),k("GeoPoint","number",2,e),!isFinite(t)||t<-90||t>90)throw new c(a.INVALID_ARGUMENT,"Latitude must be a number between -90 and 90, but was: "+t);if(!isFinite(e)||e<-180||e>180)throw new c(a.INVALID_ARGUMENT,"Longitude must be a number between -180 and 180, but was: "+e);this.u_=t,this.h_=e;}return Object.defineProperty(t.prototype,"latitude",{/**
	         * The latitude of this `GeoPoint` instance.
	         */get:function get(){return this.u_;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"longitude",{/**
	         * The longitude of this `GeoPoint` instance.
	         */get:function get(){return this.h_;},enumerable:!1,configurable:!0}),/**
	     * Returns true if this `GeoPoint` is equal to the provided one.
	     *
	     * @param other The `GeoPoint` to compare against.
	     * @return true if this `GeoPoint` is equal to the provided one.
	     */t.prototype.isEqual=function(t){return this.u_===t.u_&&this.h_===t.h_;},t.prototype.toJSON=function(){return{latitude:this.u_,longitude:this.h_};},/**
	     * Actually private to JS consumers of our API, so this function is prefixed
	     * with an underscore.
	     */t.prototype.Y=function(t){return H(this.u_,t.u_)||H(this.h_,t.h_);},t;}(),Tu=function Tu(t){this.l_=t;},Nu=/^__.*__$/,Au=function Au(t,e,n){this.__=t,this.f_=e,this.d_=n;},Su=/** @class */function(){function t(t,e,n){this.data=t,this.We=e,this.fieldTransforms=n;}return t.prototype.w_=function(t,e){var n=[];return null!==this.We?n.push(new _n(t,this.data,this.We,e)):n.push(new wn(t,this.data,e)),this.fieldTransforms.length>0&&n.push(new In(t,this.fieldTransforms)),n;},t;}(),Du=/** @class */function(){function t(t,e,n){this.data=t,this.We=e,this.fieldTransforms=n;}return t.prototype.w_=function(t,e){var n=[new _n(t,this.data,this.We,e)];return this.fieldTransforms.length>0&&n.push(new In(t,this.fieldTransforms)),n;},t;}();function xu(t){switch(t){case 0/* Set */:// fall through
	case 2/* MergeSet */:// fall through
	case 1/* Update */:return!0;case 3/* Argument */:case 4/* ArrayArgument */:return!1;default:throw y();}}/** A "context" object passed around while parsing user data. */var Lu=/** @class */function(){/**
	     * Initializes a ParseContext with the given source and path.
	     *
	     * @param settings The settings for the parser.
	     * @param databaseId The database ID of the Firestore instance.
	     * @param serializer The serializer to use to generate the Value proto.
	     * @param ignoreUndefinedProperties Whether to ignore undefined properties
	     * rather than throw.
	     * @param fieldTransforms A mutable list of field transforms encountered while
	     *     parsing the data.
	     * @param fieldMask A mutable list of field paths encountered while parsing
	     *     the data.
	     *
	     * TODO(b/34871131): We don't support array paths right now, so path can be
	     * null to indicate the context represents any location within an array (in
	     * which case certain features will not work and errors will be somewhat
	     * compromised).
	     */function t(t,e,n,r,i,o){this.settings=t,this.U=e,this.serializer=n,this.ignoreUndefinedProperties=r,// Minor hack: If fieldTransforms is undefined, we assume this is an
	// external call and we need to validate the entire path.
	void 0===i&&this.m_(),this.fieldTransforms=i||[],this.We=o||[];}return Object.defineProperty(t.prototype,"path",{get:function get(){return this.settings.path;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"s_",{get:function get(){return this.settings.s_;},enumerable:!1,configurable:!0}),/** Returns a new context with the specified settings overwritten. */t.prototype.T_=function(e){return new t(Object.assign(Object.assign({},this.settings),e),this.U,this.serializer,this.ignoreUndefinedProperties,this.fieldTransforms,this.We);},t.prototype.E_=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.T_({path:n,o_:!1});return r.I_(t),r;},t.prototype.A_=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.T_({path:n,o_:!1});return r.m_(),r;},t.prototype.R_=function(t){// TODO(b/34871131): We don't support array paths right now; so make path
	// undefined.
	return this.T_({path:void 0,o_:!0});},t.prototype.i_=function(t){return Gu(t,this.settings.methodName,this.settings.g_||!1,this.path,this.settings.r_);},/** Returns 'true' if 'fieldPath' was traversed when creating this context. */t.prototype.contains=function(t){return void 0!==this.We.find(function(e){return t.T(e);})||void 0!==this.fieldTransforms.find(function(e){return t.T(e.field);});},t.prototype.m_=function(){// TODO(b/34871131): Remove null check once we have proper paths for fields
	// within arrays.
	if(this.path)for(var t=0;t<this.path.length;t++){this.I_(this.path.get(t));}},t.prototype.I_=function(t){if(0===t.length)throw this.i_("Document fields must not be empty");if(xu(this.s_)&&Nu.test(t))throw this.i_('Document fields cannot begin and end with "__"');},t;}(),ku=/** @class */function(){function t(t,e,n){this.U=t,this.ignoreUndefinedProperties=e,this.serializer=n||uu(t)/** Creates a new top-level parse context. */;}return t.prototype.P_=function(t,e,n,r){return void 0===r&&(r=!1),new Lu({s_:t,methodName:e,r_:n,path:N.P(),o_:!1,g_:r},this.U,this.serializer,this.ignoreUndefinedProperties);},t;}();/**
	 * Helper for parsing raw user input (provided via the API) into internal model
	 * classes.
	 *//** Parse document data from a set() call. */function Ru(t,e,n,r,i,o){void 0===o&&(o={});var s=t.P_(o.merge||o.mergeFields?2/* MergeSet */:0/* Set */,e,n,i);Mu("Data must be an object, but it was:",s,r);var u,h,f=Cu(r,s);if(o.merge)u=new an(s.We),h=s.fieldTransforms;else if(o.mergeFields){for(var l=[],p=0,d=o.mergeFields;p<d.length;p++){var v=d[p],g=void 0;if(v instanceof pu)g=v.t_;else{if("string"!=typeof v)throw y();g=ju(e,v,n);}if(!s.contains(g))throw new c(a.INVALID_ARGUMENT,"Field '"+g+"' is specified in your field mask but missing from your input data.");zu(l,g)||l.push(g);}u=new an(l),h=s.fieldTransforms.filter(function(t){return u.Ye(t.field);});}else u=null,h=s.fieldTransforms;return new Su(new Sn(f),u,h);}/** Parse update data from an update() call. */function Ou(t,e,n,r){var i=t.P_(1/* Update */,e,n);Mu("Data must be an object, but it was:",i,r);var o=[],s=new Dn();_(r,function(t,r){var u=ju(e,t,n),a=i.A_(u);if(r instanceof gu||r instanceof Tu&&r.l_ instanceof gu)// Add it to the field mask, but don't add anything to updateData.
	o.push(u);else{var c=Uu(r,a);null!=c&&(o.push(u),s.set(u,c));}});var u=new an(o);return new Du(s.Xe(),u,i.fieldTransforms);}/** Parse update data from a list of field/value arguments. */function Pu(t,e,n,r,i,o){var s=t.P_(1/* Update */,e,n),u=[qu(e,r,n)],h=[i];if(o.length%2!=0)throw new c(a.INVALID_ARGUMENT,"Function "+e+"() needs to be called with an even number of arguments that alternate between field names and values.");for(var f=0;f<o.length;f+=2){u.push(qu(e,o[f])),h.push(o[f+1]);}// We iterate in reverse order to pick the last value for a field if the
	// user specified the field multiple times.
	for(var l=[],p=new Dn(),d=u.length-1;d>=0;--d){if(!zu(l,u[d])){var v=u[d],y=h[d],g=s.A_(v);if(y instanceof gu||y instanceof Tu&&y.l_ instanceof gu)// Add it to the field mask, but don't add anything to updateData.
	l.push(v);else{var m=Uu(y,g);null!=m&&(l.push(v),p.set(v,m));}}}var w=new an(l);return new Du(p.Xe(),w,s.fieldTransforms);}/**
	 * Parse a "query value" (e.g. value in a where filter or a value in a cursor
	 * bound).
	 *
	 * @param allowArrays Whether the query value is an array that may directly
	 * contain additional arrays (e.g. the operand of an `in` query).
	 */function Vu(t,e,n,r){return void 0===r&&(r=!1),Uu(n,t.P_(r?4/* ArrayArgument */:3/* Argument */,e));}/**
	 * Parses user data to Protobuf Values.
	 *
	 * @param input Data to be parsed.
	 * @param context A context object representing the current path being parsed,
	 * the source of the data being parsed, etc.
	 * @return The parsed value, or null if the value was a FieldValue sentinel
	 * that should not be included in the resulting parsed data.
	 */function Uu(t,e){if(// Unwrap the API type from the Compat SDK. This will return the API type
	// from firestore-exp.
	t instanceof Tu&&(t=t.l_),Fu(t))return Mu("Unsupported field value:",e,t),Cu(t,e);if(t instanceof yu)// FieldValues usually parse into transforms (except FieldValue.delete())
	// in which case we do not want to include this field in our parsed data
	// (as doing so will overwrite the field directly prior to the transform
	// trying to transform it). So we don't add this location to
	// context.fieldMask and we return null as our parsing result.
	/**
	     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
	     * context.fieldTransforms.
	     */return function(t,e){// Sentinels are only supported with writes, and not within arrays.
	if(!xu(e.s_))throw e.i_(t.e_+"() can only be used with update() and set()");if(!e.path)throw e.i_(t.e_+"() is not currently supported inside arrays");var n=t.n_(e);n&&e.fieldTransforms.push(n);}(t,e),null;if(// If context.path is null we are inside an array and we don't support
	// field mask paths more granular than the top-level array.
	e.path&&e.We.push(e.path),t instanceof Array){// TODO(b/34871131): Include the path containing the array in the error
	// message.
	// In the case of IN queries, the parsed data is an array (representing
	// the set of values to be included for the IN query) that may directly
	// contain additional arrays (each representing an individual field
	// value), so we disable this validation.
	if(e.settings.o_&&4/* ArrayArgument */!==e.s_)throw e.i_("Nested arrays are not supported");return function(t,e){for(var n=[],r=0,i=0,o=t;i<o.length;i++){var s=Uu(o[i],e.R_(r));null==s&&(// Just include nulls in the array for fields being replaced with a
	// sentinel.
	s={nullValue:"NULL_VALUE"}),n.push(s),r++;}return{arrayValue:{values:n}};}(t,e);}return function(t,e){if(null===t)return{nullValue:"NULL_VALUE"};if("number"==typeof t)return we(e.serializer,t);if("boolean"==typeof t)return{booleanValue:t};if("string"==typeof t)return{stringValue:t};if(t instanceof Date){var n=ot.fromDate(t);return{timestampValue:_e(e.serializer,n)};}if(t instanceof ot){// Firestore backend truncates precision down to microseconds. To ensure
	// offline mode works the same with regards to truncation, perform the
	// truncation immediately without waiting for the backend to do that.
	var r=new ot(t.seconds,1e3*Math.floor(t.nanoseconds/1e3));return{timestampValue:_e(e.serializer,r)};}if(t instanceof Eu)return{geoPointValue:{latitude:t.latitude,longitude:t.longitude}};if(t instanceof J)return{bytesValue:be(e.serializer,t.q)};if(t instanceof Au){var i=e.U,o=t.__;if(!o.isEqual(i))throw e.i_("Document reference is for database "+o.projectId+"/"+o.database+" but should be for database "+i.projectId+"/"+i.database);return{referenceValue:Te(t.__||e.U,t.f_.path)};}if(void 0===t&&e.ignoreUndefinedProperties)return null;throw e.i_("Unsupported field value: "+M(t));}(t,e);}function Cu(t,e){var n={};return b(t)?// If we encounter an empty object, we explicitly add it to the update
	// mask to ensure that the server creates a map entry.
	e.path&&e.path.length>0&&e.We.push(e.path):_(t,function(t,r){var i=Uu(r,e.E_(t));null!=i&&(n[t]=i);}),{mapValue:{fields:n}};}function Fu(t){return!("object"!=(typeof t==="undefined"?"undefined":_typeof(t))||null===t||t instanceof Array||t instanceof Date||t instanceof ot||t instanceof Eu||t instanceof J||t instanceof Au||t instanceof yu);}function Mu(t,e,n){if(!Fu(n)||!F(n)){var r=M(n);throw"an object"===r?e.i_(t+" a custom object"):e.i_(t+" "+r);}}/**
	 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
	 */function qu(t,e,n){if(e instanceof pu)return e.t_;if("string"==typeof e)return ju(t,e);throw Gu("Field path arguments must be of type string or FieldPath.",t,/* hasConverter= */!1,/* path= */void 0,n);}/**
	 * Wraps fromDotSeparatedString with an error message about the method that
	 * was thrown.
	 * @param methodName The publicly visible method name
	 * @param path The dot-separated string form of a field path which will be split
	 * on dots.
	 * @param targetDoc The document against which the field path will be evaluated.
	 */function ju(e,n,r){try{return function(e){if(e.search(vu)>=0)throw new c(a.INVALID_ARGUMENT,"Invalid field path ("+e+"). Paths must not contain '~', '*', '/', '[', or ']'");try{return new(du.bind.apply(du,t.__spreadArrays([void 0],e.split("."))))();}catch(t){throw new c(a.INVALID_ARGUMENT,"Invalid field path ("+e+"). Paths must not be empty, begin with '.', end with '.', or contain '..'");}}(n).t_;}catch(n){throw Gu((i=n)instanceof Error?i.message:i.toString(),e,/* hasConverter= */!1,/* path= */void 0,r);}/**
	 * Extracts the message from a caught exception, which should be an Error object
	 * though JS doesn't guarantee that.
	 */var i;/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */}function Gu(t,e,n,r,i){var o=r&&!r.m(),s=void 0!==i,u="Function "+e+"() called with invalid data";n&&(u+=" (via `toFirestore()`)");var h="";return(o||s)&&(h+=" (found",o&&(h+=" in field "+r),s&&(h+=" in document "+i),h+=")"),new c(a.INVALID_ARGUMENT,(u+=". ")+t+h);}function zu(t,e){return t.some(function(t){return t.isEqual(e);});}/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Internal transaction object responsible for accumulating the mutations to
	 * perform and the base versions for any documents read.
	 */var Bu=/** @class */function(){function e(t){this.Ku=t,// The version of each document that was read during this transaction.
	this.y_=new Map(),this.mutations=[],this.V_=!1,/**
	             * A deferred usage error that occurred previously in this transaction that
	             * will cause the transaction to fail once it actually commits.
	             */this.p_=null,/**
	             * Set of documents that have been written in the transaction.
	             *
	             * When there's more than one write to the same key in a transaction, any
	             * writes after the first are handled differently.
	             */this.b_=new Set();}return e.prototype.v_=function(e){return t.__awaiter(this,void 0,void 0,function(){var n,r=this;return t.__generator(this,function(i){switch(i.label){case 0:if(this.S_(),this.mutations.length>0)throw new c(a.INVALID_ARGUMENT,"Firestore transactions require all reads to be executed before all writes.");return[4/*yield*/,function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u,a;return t.__generator(this,function(t){switch(t.label){case 0:return r=m(e),i=Le(r.serializer)+"/documents",o={documents:n.map(function(t){return Ae(r.serializer,t);})},[4/*yield*/,r.ku("BatchGetDocuments",i,o)];case 1:return s=t.sent(),u=new Map(),s.forEach(function(t){var e=function(t,e){return"found"in e?function(t,e){g(!!e.found),e.found.name,e.found.updateTime;var n=Se(t,e.found.name),r=Ee(e.found.updateTime),i=new Sn({mapValue:{fields:e.found.fields}});return new kn(n,r,i,{});}(t,e):"missing"in e?function(t,e){g(!!e.missing),g(!!e.readTime);var n=Se(t,e.missing),r=Ee(e.readTime);return new Rn(n,r);}(t,e):y();}(r.serializer,t);u.set(e.key.toString(),e);}),a=[],[2/*return*/,(n.forEach(function(t){var e=u.get(t.toString());g(!!e),a.push(e);}),a)];}});});}(this.Ku,e)];case 1:return[2/*return*/,((n=i.sent()).forEach(function(t){t instanceof Rn||t instanceof kn?r.D_(t):y();}),n)];}});});},e.prototype.set=function(t,e){this.write(e.w_(t,this.Ge(t))),this.b_.add(t.toString());},e.prototype.update=function(t,e){try{this.write(e.w_(t,this.C_(t)));}catch(t){this.p_=t;}this.b_.add(t.toString());},e.prototype.delete=function(t){this.write([new Nn(t,this.Ge(t))]),this.b_.add(t.toString());},e.prototype.commit=function(){return t.__awaiter(this,void 0,void 0,function(){var e,n=this;return t.__generator(this,function(r){switch(r.label){case 0:if(this.S_(),this.p_)throw this.p_;return e=this.y_,// For each mutation, note that the doc was written.
	this.mutations.forEach(function(t){e.delete(t.key.toString());}),// For each document that was read but not written to, we want to perform
	// a `verify` operation.
	e.forEach(function(t,e){var r=A.D(e);n.mutations.push(new An(r,n.Ge(r)));}),[4/*yield*/,function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o;return t.__generator(this,function(t){switch(t.label){case 0:return r=m(e),i=Le(r.serializer)+"/documents",o={writes:n.map(function(t){return Oe(r.serializer,t);})},[4/*yield*/,r.$u("Commit",i,o)];case 1:return t.sent(),[2/*return*/];}});});}(this.Ku,this.mutations)];case 1:// For each mutation, note that the doc was written.
	return r.sent(),this.V_=!0,[2/*return*/];}});});},e.prototype.D_=function(t){var e;if(t instanceof kn)e=t.version;else{if(!(t instanceof Rn))throw y();// For deleted docs, we must use baseVersion 0 when we overwrite them.
	e=st.min();}var n=this.y_.get(t.key.toString());if(n){if(!e.isEqual(n))// This transaction will fail no matter what.
	throw new c(a.ABORTED,"Document version changed between two reads.");}else this.y_.set(t.key.toString(),e);},/**
	     * Returns the version of this document when it was read in this transaction,
	     * as a precondition, or no precondition if it was not read.
	     */e.prototype.Ge=function(t){var e=this.y_.get(t.toString());return!this.b_.has(t.toString())&&e?fn.updateTime(e):fn.ze();},/**
	     * Returns the precondition for a document if the operation is an update.
	     */e.prototype.C_=function(t){var e=this.y_.get(t.toString());// The first time a document is written, we want to take into account the
	// read time and existence
	if(!this.b_.has(t.toString())&&e){if(e.isEqual(st.min()))// The document doesn't exist, so fail the transaction.
	// This has to be validated locally because you can't send a
	// precondition that a document does not exist without changing the
	// semantics of the backend write to be an insert. This is the reverse
	// of what we want, since we want to assert that the document doesn't
	// exist but then send the update and have it fail. Since we can't
	// express that to the backend, we have to validate locally.
	// Note: this can change once we can send separate verify writes in the
	// transaction.
	throw new c(a.INVALID_ARGUMENT,"Can't update a document that doesn't exist.");// Document exists, base precondition on document update time.
	return fn.updateTime(e);}// Document was not read, so we just use the preconditions for a blind
	// update.
	return fn.exists(!0);},e.prototype.write=function(t){this.S_(),this.mutations=this.mutations.concat(t);},e.prototype.S_=function(){},e;}(),Wu=/** @class */function(){function e(t,e,n,r){this.cs=t,this.Ku=e,this.updateFunction=n,this.ls=r,this.N_=5,this.ys=new vr(this.cs,"transaction_retry"/* TransactionRetry */)/** Runs the transaction and sets the result on deferred. */;}return e.prototype.run=function(){this.F_();},e.prototype.F_=function(){var e=this;this.ys.gn(function(){return t.__awaiter(e,void 0,void 0,function(){var e,n,r=this;return t.__generator(this,function(t){return e=new Bu(this.Ku),(n=this.x_(e))&&n.then(function(t){r.cs.ws(function(){return e.commit().then(function(){r.ls.resolve(t);}).catch(function(t){r.k_(t);});});}).catch(function(t){r.k_(t);}),[2/*return*/];});});});},e.prototype.x_=function(t){try{var e=this.updateFunction(t);return!ut(e)&&e.catch&&e.then?e:(this.ls.reject(Error("Transaction callback must return a Promise")),null);}catch(t){// Do not retry errors thrown by user provided updateFunction.
	return this.ls.reject(t),null;}},e.prototype.k_=function(t){var e=this;this.N_>0&&this.M_(t)?(this.N_-=1,this.cs.ws(function(){return e.F_(),Promise.resolve();})):this.ls.reject(t);},e.prototype.M_=function(t){if("FirebaseError"===t.name){// In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
	// non-matching document versions with ABORTED. These errors should be retried.
	var e=t.code;return"aborted"===e||"failed-precondition"===e||!wt(e);}return!1;},e;}(),Ku=/** @class */function(){function e(t,/**
	     * Asynchronous queue responsible for all of our internal processing. When
	     * we get incoming work from the user (via public API) or the network
	     * (incoming GRPC messages), we should always schedule onto this queue.
	     * This ensures all of our work is properly serialized (e.g. we don't
	     * start processing a new operation while the previous one is waiting for
	     * an async I/O to complete).
	     */e){this.credentials=t,this.cs=e,this.clientId=Q.k(),// We defer our initialization until we get the current user from
	// setChangeListener(). We block the async queue until we got the initial
	// user and the initialization is completed. This will prevent any scheduled
	// work from happening before initialization is completed.
	// If initializationDone resolved then the FirestoreClient is in a usable
	// state.
	this.O_=new dr()/**
	     * Starts up the FirestoreClient, returning only whether or not enabling
	     * persistence succeeded.
	     *
	     * The intent here is to "do the right thing" as far as users are concerned.
	     * Namely, in cases where offline persistence is requested and possible,
	     * enable it, but otherwise fall back to persistence disabled. For the most
	     * part we expect this to succeed one way or the other so we don't expect our
	     * users to actually wait on the firestore.enablePersistence Promise since
	     * they generally won't care.
	     *
	     * Of course some users actually do care about whether or not persistence
	     * was successfully enabled, so the Promise returned from this method
	     * indicates this outcome.
	     *
	     * This presents a problem though: even before enablePersistence resolves or
	     * rejects, users may have made calls to e.g. firestore.collection() which
	     * means that the FirestoreClient in there will be available and will be
	     * enqueuing actions on the async queue.
	     *
	     * Meanwhile any failure of an operation on the async queue causes it to
	     * panic and reject any further work, on the premise that unhandled errors
	     * are fatal.
	     *
	     * Consequently the fallback is handled internally here in start, and if the
	     * fallback succeeds we signal success to the async queue even though the
	     * start() itself signals failure.
	     *
	     * @param databaseInfo The connection information for the current instance.
	     * @param offlineComponentProvider Provider that returns all components
	     * required for memory-only or IndexedDB persistence.
	     * @param onlineComponentProvider Provider that returns all components
	     * required for online support.
	     * @param persistenceSettings Settings object to configure offline
	     *     persistence.
	     * @returns A deferred result indicating the user-visible result of enabling
	     *     offline persistence. This method will reject this if IndexedDB fails to
	     *     start for any reason. If usePersistence is false this is
	     *     unconditionally resolved.
	     */;}return e.prototype.start=function(e,n,r,i){var o=this;this.L_(),this.bl=e;// If usePersistence is true, certain classes of errors while starting are
	// recoverable but only by falling back to persistence disabled.
	// If there's an error in the first case but not in recovery we cannot
	// reject the promise blocking the async queue because this will cause the
	// async queue to panic.
	var s=new dr(),u=!1;// Return only the result of enabling persistence. Note that this does not
	// need to await the completion of initializationDone because the result of
	// this method should not reflect any other kind of failure to start.
	return this.credentials.Hc(function(e){if(!u)return u=!0,l("FirestoreClient","Initializing. user=",e.uid),o.B_(n,r,i,e,s).then(o.O_.resolve,o.O_.reject);o.cs.Cs(function(){return function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i;return t.__generator(this,function(t){switch(t.label){case 0:return(r=m(e)).cs.xs(),l("RemoteStore","RemoteStore received new credentials"),i=Xo(r),// Tear down and re-create our network streams. This will ensure we get a
	// fresh auth token for the new user and re-fill the write pipeline with
	// new mutations from the LocalStore (since mutations are per-user).
	r.Yu.add(3/* CredentialChange */),[4/*yield*/,zo(r)];case 1:return t.sent(),i&&// Don't set the network status to Unknown if we are offline.
	r.th.set("Unknown"/* Unknown */),[4/*yield*/,r.Gu.Jl(n)];case 2:return t.sent(),r.Yu.delete(3/* CredentialChange */),[4/*yield*/,Go(r)];case 3:// Tear down and re-create our network streams. This will ensure we get a
	// fresh auth token for the new user and re-fill the write pipeline with
	// new mutations from the LocalStore (since mutations are per-user).
	return t.sent(),[2/*return*/];}});});}(o.ph,e);});}),// Block the async queue until initialization is done
	this.cs.ws(function(){return o.O_.promise;}),s.promise;},/** Enables the network connection and requeues all pending operations. */e.prototype.enableNetwork=function(){var t=this;return this.L_(),this.cs.enqueue(function(){return t.persistence.tc(!0),function(t){var e=m(t);return e.Yu.delete(0/* UserDisabled */),Go(e);}(t.ph);});},/**
	     * Initializes persistent storage, attempting to use IndexedDB if
	     * usePersistence is true or memory-only if false.
	     *
	     * If IndexedDB fails because it's already open in another tab or because the
	     * platform can't possibly support our implementation then this method rejects
	     * the persistenceResult and falls back on memory-only persistence.
	     *
	     * @param offlineComponentProvider Provider that returns all components
	     * required for memory-only or IndexedDB persistence.
	     * @param onlineComponentProvider Provider that returns all components
	     * required for online support.
	     * @param persistenceSettings Settings object to configure offline persistence
	     * @param user The initial user
	     * @param persistenceResult A deferred result indicating the user-visible
	     *     result of enabling offline persistence. This method will reject this if
	     *     IndexedDB fails to start for any reason. If usePersistence is false
	     *     this is unconditionally resolved.
	     * @returns a Promise indicating whether or not initialization should
	     *     continue, i.e. that one of the persistence implementations actually
	     *     succeeded.
	     */e.prototype.B_=function(e,n,r,i,o){return t.__awaiter(this,void 0,void 0,function(){var s,u,a=this;return t.__generator(this,function(c){switch(c.label){case 0:return c.trys.push([0,3,,4]),s={cs:this.cs,bl:this.bl,clientId:this.clientId,credentials:this.credentials,Wl:i,Dh:100,persistenceSettings:r},[4/*yield*/,e.initialize(s)];case 1:return c.sent(),[4/*yield*/,n.initialize(e,s)];case 2:return c.sent(),this.persistence=e.persistence,this.Sh=e.Sh,this.ju=e.ju,this.ql=e.ql,this.Ku=n.Ku,this.ph=n.ph,this.fi=n.fi,this.q_=n.bh,this.q_.Us=_s.bind(null,this.fi),this.q_.js=Is.bind(null,this.fi),// When a user calls clearPersistence() in one client, all other clients
	// need to be terminated to allow the delete to succeed.
	this.persistence.Za(function(){return t.__awaiter(a,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:return[4/*yield*/,this.terminate()];case 1:return t.sent(),[2/*return*/];}});});}),o.resolve(),[3/*break*/,4];case 3:// An unknown failure on the first stage shuts everything down.
	if(u=c.sent(),// Regardless of whether or not the retry succeeds, from an user
	// perspective, offline persistence has failed.
	o.reject(u),!this.U_(u))throw u;return[2/*return*/,(console.warn("Error enabling offline persistence. Falling back to persistence disabled: "+u),this.B_(new cu(),new fu(),{jl:!1},i,o))];case 4:return[2/*return*/];}});});},/**
	     * Decides whether the provided error allows us to gracefully disable
	     * persistence (as opposed to crashing the client).
	     */e.prototype.U_=function(t){return"FirebaseError"===t.name?t.code===a.FAILED_PRECONDITION||t.code===a.UNIMPLEMENTED:!("undefined"!=typeof DOMException&&t instanceof DOMException)||// When the browser is out of quota we could get either quota exceeded
	// or an aborted error depending on whether the error happened during
	// schema migration.
	22===t.code||20===t.code||// Firefox Private Browsing mode disables IndexedDb and returns
	// INVALID_STATE for any usage.
	11===t.code;},/**
	     * Checks that the client has not been terminated. Ensures that other methods on
	     * this class cannot be called after the client is terminated.
	     */e.prototype.L_=function(){if(this.cs.ps)throw new c(a.FAILED_PRECONDITION,"The client has already been terminated.");},/** Disables the network connection. Pending operations will not complete. */e.prototype.disableNetwork=function(){var e=this;return this.L_(),this.cs.enqueue(function(){return e.persistence.tc(!1),function(e){return t.__awaiter(this,void 0,void 0,function(){var n;return t.__generator(this,function(t){switch(t.label){case 0:return(n=m(e)).Yu.add(0/* UserDisabled */),[4/*yield*/,zo(n)];case 1:return t.sent(),// Set the OnlineState to Offline so get()s return from cache, etc.
	n.th.set("Offline"/* Offline */),[2/*return*/];}});});}(e.ph);});},e.prototype.terminate=function(){var e=this;this.cs.Ds();var n=new dr();return this.cs.bs(function(){return t.__awaiter(e,void 0,void 0,function(){var e,r;return t.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,4,,5]),// PORTING NOTE: LocalStore does not need an explicit shutdown on web.
	this.ql&&this.ql.stop(),[4/*yield*/,Bo(this.ph)];case 1:return t.sent(),[4/*yield*/,this.Sh.Di()];case 2:return t.sent(),[4/*yield*/,this.persistence.Di()];case 3:// PORTING NOTE: LocalStore does not need an explicit shutdown on web.
	return t.sent(),// `removeChangeListener` must be called after shutting down the
	// RemoteStore as it will prevent the RemoteStore from retrieving
	// auth tokens.
	this.credentials.Yc(),n.resolve(),[3/*break*/,5];case 4:return e=t.sent(),r=Lr(e,"Failed to shutdown persistence"),n.reject(r),[3/*break*/,5];case 5:return[2/*return*/];}});});}),n.promise;},/**
	     * Returns a Promise that resolves when all writes that were pending at the time this
	     * method was called received server acknowledgement. An acknowledgement can be either acceptance
	     * or rejection.
	     */e.prototype.waitForPendingWrites=function(){var e=this;this.L_();var n=new dr();return this.cs.ws(function(){return function(e,n){return t.__awaiter(this,void 0,void 0,function(){var r,i,o,s,u;return t.__generator(this,function(t){switch(t.label){case 0:Xo((r=m(e)).ph)||l("SyncEngine","The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."),t.label=1;case 1:return t.trys.push([1,3,,4]),[4/*yield*/,function(t){var e=m(t);return e.persistence.runTransaction("Get highest unacknowledged batch id","readonly",function(t){return e.Sr.qo(t);});}(r.ju)];case 2:return-1===(i=t.sent())?[2/*return*/,void n.resolve()]:((o=r.Lh.get(i)||[]).push(n),r.Lh.set(i,o),[3/*break*/,4]);case 3:return s=t.sent(),u=Lr(s,"Initialization of waitForPendingWrites() operation failed"),n.reject(u),[3/*break*/,4];case 4:return[2/*return*/];}});});}(e.fi,n);}),n.promise;},e.prototype.listen=function(t,e,n){var r=this;this.L_();var i=new lu(n),o=new Fr(t,i,e);return this.cs.ws(function(){return Or(r.q_,o);}),function(){i.Zl(),r.cs.ws(function(){return Pr(r.q_,o);});};},e.prototype.Q_=function(e){return t.__awaiter(this,void 0,void 0,function(){var n,r=this;return t.__generator(this,function(i){switch(i.label){case 0:return this.L_(),[4/*yield*/,this.O_.promise];case 1:return i.sent(),n=new dr(),[2/*return*/,(this.cs.ws(function(){return function(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s;return t.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4/*yield*/,function(t,e){var n=m(t);return n.persistence.runTransaction("read document","readonly",function(t){return n.Cc.Cr(t,e);});}(e,n)];case 1:return(i=t.sent())instanceof kn?r.resolve(i):i instanceof Rn?r.resolve(null):r.reject(new c(a.UNAVAILABLE,"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)")),[3/*break*/,3];case 2:return o=t.sent(),s=Lr(o,"Failed to get document '"+n+" from cache"),r.reject(s),[3/*break*/,3];case 3:return[2/*return*/];}});});}(r.ju,e,n);}),n.promise)];}});});},e.prototype.W_=function(e,n){return void 0===n&&(n={}),t.__awaiter(this,void 0,void 0,function(){var r,i=this;return t.__generator(this,function(t){switch(t.label){case 0:return this.L_(),[4/*yield*/,this.O_.promise];case 1:return t.sent(),r=new dr(),[2/*return*/,(this.cs.ws(function(){return function(t,e,n,r,i){var o=new lu({next:function next(o){// Remove query first before passing event to user to avoid
	// user actions affecting the now stale query.
	e.ws(function(){return Pr(t,s);});var u=o.docs.has(n);!u&&o.fromCache?// TODO(dimond): If we're online and the document doesn't
	// exist then we resolve with a doc.exists set to false. If
	// we're offline however, we reject the Promise in this
	// case. Two options: 1) Cache the negative response from
	// the server so we can deliver that even when you're
	// offline 2) Actually reject the Promise in the online case
	// if the document doesn't exist.
	i.reject(new c(a.UNAVAILABLE,"Failed to get document because the client is offline.")):u&&o.fromCache&&r&&"server"===r.source?i.reject(new c(a.UNAVAILABLE,'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')):i.resolve(o);},error:function error(t){return i.reject(t);}}),s=new Fr(Un(n.path),o,{includeMetadataChanges:!0,Xs:!0});return Or(t,s);}(i.q_,i.cs,e,n,r);}),r.promise)];}});});},e.prototype.j_=function(e){return t.__awaiter(this,void 0,void 0,function(){var n,r=this;return t.__generator(this,function(i){switch(i.label){case 0:return this.L_(),[4/*yield*/,this.O_.promise];case 1:return i.sent(),n=new dr(),[2/*return*/,(this.cs.ws(function(){return function(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s,u,a,c;return t.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4/*yield*/,To(e,n,/* usePreviousResults= */!0)];case 1:return i=t.sent(),o=new ys(n,i.Fc),s=o.wh(i.documents),u=o.yr(s,/* updateLimboDocuments= */!1),r.resolve(u.snapshot),[3/*break*/,3];case 2:return a=t.sent(),c=Lr(a,"Failed to execute query '"+n+" against cache"),r.reject(c),[3/*break*/,3];case 3:return[2/*return*/];}});});}(r.ju,e,n);}),n.promise)];}});});},e.prototype.K_=function(e,n){return void 0===n&&(n={}),t.__awaiter(this,void 0,void 0,function(){var r,i=this;return t.__generator(this,function(t){switch(t.label){case 0:return this.L_(),[4/*yield*/,this.O_.promise];case 1:return t.sent(),r=new dr(),[2/*return*/,(this.cs.ws(function(){return function(t,e,n,r,i){var o=new lu({next:function next(n){// Remove query first before passing event to user to avoid
	// user actions affecting the now stale query.
	e.ws(function(){return Pr(t,s);}),n.fromCache&&"server"===r.source?i.reject(new c(a.UNAVAILABLE,'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')):i.resolve(n);},error:function error(t){return i.reject(t);}}),s=new Fr(n,o,{includeMetadataChanges:!0,Xs:!0});return Or(t,s);}(i.q_,i.cs,e,n,r);}),r.promise)];}});});},e.prototype.write=function(e){var n=this;this.L_();var r=new dr();return this.cs.ws(function(){return function(e,n,r){return t.__awaiter(this,void 0,void 0,function(){var i,o,s,u;return t.__generator(this,function(t){switch(t.label){case 0:i=Qs(e),t.label=1;case 1:return t.trys.push([1,5,,6]),[4/*yield*/,/* Accepts locally generated Mutations and commit them to storage. */function(t,e){var n,r=m(t),i=ot.now(),o=e.reduce(function(t,e){return t.add(e.key);},Ot());return r.persistence.runTransaction("Locally write mutations","readwrite",function(t){return r.Cc.kr(t,o).next(function(o){n=o;for(// For non-idempotent mutations (such as `FieldValue.increment()`),
	// we record the base state in a separate patch mutation. This is
	// later used to guarantee consistent values and prevents flicker
	// even if the backend sends us an update that already includes our
	// transform.
	var s=[],u=0,a=e;u<a.length;u++){var c=a[u],h=yn(c,n.get(c.key));null!=h&&// NOTE: The base state should only be applied if there's some
	// existing document to override, so use a Precondition of
	// exists=true
	s.push(new _n(c.key,h,xn(h.proto.mapValue),fn.exists(!0)));}return r.Sr.ko(t,i,s,e);});}).then(function(t){var e=t.lr(n);return{batchId:t.batchId,wr:e};});}(i.ju,n)];case 2:return o=t.sent(),i.Sh.xi(o.batchId),function(t,e,n){var r=t.Oh[t.currentUser.ti()];r||(r=new bt(H)),r=r.ot(e,n),t.Oh[t.currentUser.ti()]=r;}(i,o.batchId,r),[4/*yield*/,Vs(i,o.wr)];case 3:return t.sent(),[4/*yield*/,is(i.ph)];case 4:return t.sent(),[3/*break*/,6];case 5:return s=t.sent(),u=Lr(s,"Failed to persist write"),r.reject(u),[3/*break*/,6];case 6:return[2/*return*/];}});});}(n.fi,e,r);}),r.promise;},e.prototype.U=function(){return this.bl.U;},e.prototype.G_=function(e){var n=this;this.L_();var r=new lu(e);return this.cs.ws(function(){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){return[2/*return*/,function(t,e){m(t).qs.add(e),// Immediately fire an initial event, indicating all existing listeners
	// are in-sync.
	e.next();}(this.q_,r)];});});}),function(){r.Zl(),n.cs.ws(function(){return t.__awaiter(n,void 0,void 0,function(){return t.__generator(this,function(t){return[2/*return*/,function(t,e){m(t).qs.delete(e);}(this.q_,r)];});});});};},Object.defineProperty(e.prototype,"z_",{get:function get(){// Technically, the asyncQueue is still running, but only accepting operations
	// related to termination or supposed to be run after termination. It is effectively
	// terminated to the eyes of users.
	return this.cs.ps;},enumerable:!1,configurable:!0}),/**
	     * Takes an updateFunction in which a set of reads and writes can be performed
	     * atomically. In the updateFunction, the client can read and write values
	     * using the supplied transaction object. After the updateFunction, all
	     * changes will be committed. If a retryable error occurs (ex: some other
	     * client has changed any of the data referenced), then the updateFunction
	     * will be called again after a backoff. If the updateFunction still fails
	     * after all retries, then the transaction will be rejected.
	     *
	     * The transaction object passed to the updateFunction contains methods for
	     * accessing documents and collections. Unlike other datastore access, data
	     * accessed with the transaction will not reflect local changes that have not
	     * been committed. For this reason, it is required that all reads are
	     * performed before any writes. Transactions must be performed while online.
	     */e.prototype.transaction=function(t){var e=this;this.L_();var n=new dr();return this.cs.ws(function(){return new Wu(e.cs,e.Ku,t,n).run(),Promise.resolve();}),n.promise;},e;}();/**
	 * @license
	 * Copyright 2019 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * TransactionRunner encapsulates the logic needed to run and retry transactions
	 * with backoff.
	 */function Qu(t){/**
	 * Returns true if obj is an object and contains at least one of the specified
	 * methods.
	 */return function(t,e){if("object"!=(typeof t==="undefined"?"undefined":_typeof(t))||null===t)return!1;for(var n=t,r=0,i=["next","error","complete"];r<i.length;r++){var o=i[r];if(o in n&&"function"==typeof n[o])return!0;}return!1;}(t);}var Hu=/** @class */function(){function t(t,e,n,r,i){this.U=t,this.timestampsInSnapshots=e,this.H_=n,this.Y_=r,this.J_=i;}return t.prototype.X_=function(t){switch(Jt(t)){case 0/* NullValue */:return null;case 1/* BooleanValue */:return t.booleanValue;case 2/* NumberValue */:return se(t.integerValue||t.doubleValue);case 3/* TimestampValue */:return this.Z_(t.timestampValue);case 4/* ServerTimestampValue */:return this.tf(t);case 5/* StringValue */:return t.stringValue;case 6/* BlobValue */:return this.J_(ue(t.bytesValue));case 7/* RefValue */:return this.ef(t.referenceValue);case 8/* GeoPointValue */:return this.nf(t.geoPointValue);case 9/* ArrayValue */:return this.sf(t.arrayValue);case 10/* ObjectValue */:return this.if(t.mapValue);default:throw y();}},t.prototype.if=function(t){var e=this,n={};return _(t.fields||{},function(t,r){n[t]=e.X_(r);}),n;},t.prototype.nf=function(t){return new Eu(se(t.latitude),se(t.longitude));},t.prototype.sf=function(t){var e=this;return(t.values||[]).map(function(t){return e.X_(t);});},t.prototype.tf=function(t){switch(this.H_){case"previous":var e=Yt(t);return null==e?null:this.X_(e);case"estimate":return this.Z_($t(t));default:return null;}},t.prototype.Z_=function(t){var e=oe(t),n=new ot(e.seconds,e.nanos);return this.timestampsInSnapshots?n:n.toDate();},t.prototype.ef=function(t){var e=E.g(t);g(He(e));var n=new rt(e.get(1),e.get(3)),r=new A(e.u(5));return n.isEqual(this.U)||// TODO(b/64130202): Somehow support foreign references.
	p("Document "+r+" contains a document reference within a different database ("+n.projectId+"/"+n.database+") which is not supported. It will be treated as a reference in the current database ("+this.U.projectId+"/"+this.U.database+") instead."),this.Y_(r);},t;}(),Yu=ui.ho,$u=/** @class */function(){function t(t){var e,n,r,i,o;if(void 0===t.host){if(void 0!==t.ssl)throw new c(a.INVALID_ARGUMENT,"Can't provide ssl option if host option is not set");this.host="firestore.googleapis.com",this.ssl=!0;}else O("settings","non-empty string","host",t.host),this.host=t.host,P("settings","boolean","ssl",t.ssl),this.ssl=null===(e=t.ssl)||void 0===e||e;if(j("settings",t,["host","ssl","credentials","timestampsInSnapshots","cacheSizeBytes","experimentalForceLongPolling","experimentalAutoDetectLongPolling","ignoreUndefinedProperties"]),P("settings","object","credentials",t.credentials),this.credentials=t.credentials,P("settings","boolean","timestampsInSnapshots",t.timestampsInSnapshots),P("settings","boolean","ignoreUndefinedProperties",t.ignoreUndefinedProperties),// Nobody should set timestampsInSnapshots anymore, but the error depends on
	// whether they set it to true or false...
	!0===t.timestampsInSnapshots?p("The setting 'timestampsInSnapshots: true' is no longer required and should be removed."):!1===t.timestampsInSnapshots&&p("Support for 'timestampsInSnapshots: false' will be removed soon. You must update your code to handle Timestamp objects."),this.timestampsInSnapshots=null===(n=t.timestampsInSnapshots)||void 0===n||n,this.ignoreUndefinedProperties=null!==(r=t.ignoreUndefinedProperties)&&void 0!==r&&r,P("settings","number","cacheSizeBytes",t.cacheSizeBytes),void 0===t.cacheSizeBytes)this.cacheSizeBytes=ui._o;else{if(t.cacheSizeBytes!==Yu&&t.cacheSizeBytes<ui.lo)throw new c(a.INVALID_ARGUMENT,"cacheSizeBytes must be at least "+ui.lo);this.cacheSizeBytes=t.cacheSizeBytes;}P("settings","boolean","experimentalForceLongPolling",t.experimentalForceLongPolling),this.experimentalForceLongPolling=null!==(i=t.experimentalForceLongPolling)&&void 0!==i&&i,P("settings","boolean","experimentalAutoDetectLongPolling",t.experimentalAutoDetectLongPolling),this.experimentalAutoDetectLongPolling=null!==(o=t.experimentalAutoDetectLongPolling)&&void 0!==o&&o,function(t,e,n,r){if(!0===e&&!0===r)throw new c(a.INVALID_ARGUMENT,"experimentalForceLongPolling and experimentalAutoDetectLongPolling cannot be used together.");}(0,t.experimentalForceLongPolling,0,t.experimentalAutoDetectLongPolling);}return t.prototype.isEqual=function(t){return this.host===t.host&&this.ssl===t.ssl&&this.timestampsInSnapshots===t.timestampsInSnapshots&&this.credentials===t.credentials&&this.cacheSizeBytes===t.cacheSizeBytes&&this.experimentalForceLongPolling===t.experimentalForceLongPolling&&this.experimentalAutoDetectLongPolling===t.experimentalAutoDetectLongPolling&&this.ignoreUndefinedProperties===t.ignoreUndefinedProperties;},t;}(),Xu=/** @class */function(){// Note: We are using `MemoryComponentProvider` as a default
	// ComponentProvider to ensure backwards compatibility with the format
	// expected by the console build.
	function e(n,r,i,o){var s=this;if(void 0===i&&(i=new cu()),void 0===o&&(o=new fu()),this.rf=i,this.af=o,this.cf=null,// Public for use in tests.
	// TODO(mikelehen): Use modularized initialization instead.
	this.uf=new xr(),this.INTERNAL={delete:function _delete(){return t.__awaiter(s,void 0,void 0,function(){return t.__generator(this,function(t){switch(t.label){case 0:// The client must be initalized to ensure that all subsequent API usage
	// throws an exception.
	return this.hf(),[4/*yield*/,this.lf.terminate()];case 1:// The client must be initalized to ensure that all subsequent API usage
	// throws an exception.
	return t.sent(),[2/*return*/];}});});}},"object"==_typeof(n.options)){// This is very likely a Firebase app object
	// TODO(b/34177605): Can we somehow use instanceof?
	var u=n;this.cf=u,this.__=e._f(u),this.ff=u.name,this.df=new Oo(r);}else{var h=n;if(!h.projectId)throw new c(a.INVALID_ARGUMENT,"Must provide projectId");this.__=new rt(h.projectId,h.database),// Use a default persistenceKey that lines up with FirebaseApp.
	this.ff="[DEFAULT]",this.df=new Ro();}this.wf=new $u({});}return Object.defineProperty(e.prototype,"mf",{get:function get(){return this.Tf||(// Lazy initialize UserDataReader once the settings are frozen
	this.Tf=new ku(this.__,this.wf.ignoreUndefinedProperties)),this.Tf;},enumerable:!1,configurable:!0}),e.prototype.settings=function(t){D("Firestore.settings",arguments,1),k("Firestore.settings","object",1,t),t.merge&&// Remove the property from the settings once the merge is completed
	delete(t=Object.assign(Object.assign({},this.wf),t)).merge;var e=new $u(t);if(this.lf&&!this.wf.isEqual(e))throw new c(a.FAILED_PRECONDITION,"Firestore has already been started and its settings can no longer be changed. You can only call settings() before calling any other methods on a Firestore object.");this.wf=e,void 0!==e.credentials&&(this.df=function(t){if(!t)return new Ro();switch(t.type){case"gapi":var e=t.client;// Make sure this really is a Gapi client.
	return g(!("object"!=(typeof e==="undefined"?"undefined":_typeof(e))||null===e||!e.auth||!e.auth.getAuthHeaderValueForFirstParty)),new Vo(e,t.sessionIndex||"0");case"provider":return t.client;default:throw new c(a.INVALID_ARGUMENT,"makeCredentialsProvider failed due to invalid credential type");}}(e.credentials));},e.prototype.enableNetwork=function(){return this.hf(),this.lf.enableNetwork();},e.prototype.disableNetwork=function(){return this.hf(),this.lf.disableNetwork();},e.prototype.enablePersistence=function(t){var e,n;if(this.lf)throw new c(a.FAILED_PRECONDITION,"Firestore has already been started and persistence can no longer be enabled. You can only call enablePersistence() before calling any other methods on a Firestore object.");var r=!1,i=!1;if(t&&(void 0!==t.experimentalTabSynchronization&&p("The 'experimentalTabSynchronization' setting will be removed. Use 'synchronizeTabs' instead."),r=null!==(n=null!==(e=t.synchronizeTabs)&&void 0!==e?e:t.experimentalTabSynchronization)&&void 0!==n&&n,i=!!t.experimentalForceOwningTab&&t.experimentalForceOwningTab,r&&i))throw new c(a.INVALID_ARGUMENT,"The 'experimentalForceOwningTab' setting cannot be used with 'synchronizeTabs'.");return this.Ef(this.rf,this.af,{jl:!0,cacheSizeBytes:this.wf.cacheSizeBytes,synchronizeTabs:r,ka:i});},e.prototype.clearPersistence=function(){return t.__awaiter(this,void 0,void 0,function(){var e,n=this;return t.__generator(this,function(r){if(void 0!==this.lf&&!this.lf.z_)throw new c(a.FAILED_PRECONDITION,"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.");return e=new dr(),[2/*return*/,(this.uf.bs(function(){return t.__awaiter(n,void 0,void 0,function(){var n;return t.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4/*yield*/,this.rf.clearPersistence(this.__,this.ff)];case 1:return t.sent(),e.resolve(),[3/*break*/,3];case 2:return n=t.sent(),e.reject(n),[3/*break*/,3];case 3:return[2/*return*/];}});});}),e.promise)];});});},e.prototype.terminate=function(){return this.app._removeServiceInstance("firestore"),this.INTERNAL.delete();},Object.defineProperty(e.prototype,"If",{get:function get(){return this.hf(),this.lf.z_;},enumerable:!1,configurable:!0}),e.prototype.waitForPendingWrites=function(){return this.hf(),this.lf.waitForPendingWrites();},e.prototype.onSnapshotsInSync=function(t){if(this.hf(),Qu(t))return this.lf.G_(t);k("Firestore.onSnapshotsInSync","function",1,t);var e={next:t};return this.lf.G_(e);},e.prototype.hf=function(){return this.lf||// Kick off starting the client but don't actually wait for it.
	// eslint-disable-next-line @typescript-eslint/no-floating-promises
	this.Ef(new cu(),new fu(),{jl:!1}),this.lf;},e.prototype.Af=function(){return new nt(this.__,this.ff,this.wf.host,this.wf.ssl,this.wf.experimentalForceLongPolling,this.wf.experimentalAutoDetectLongPolling);},e.prototype.Ef=function(t,e,n){var r=this.Af();return this.lf=new Ku(this.df,this.uf),this.lf.start(r,t,e,n);},e._f=function(t){if(e=t.options,"projectId",!Object.prototype.hasOwnProperty.call(e,"projectId"))throw new c(a.INVALID_ARGUMENT,'"projectId" not provided in firebase.initializeApp.');var e,n=t.options.projectId;if(!n||"string"!=typeof n)throw new c(a.INVALID_ARGUMENT,"projectId must be a string in FirebaseApp.options");return new rt(n);},Object.defineProperty(e.prototype,"app",{get:function get(){if(!this.cf)throw new c(a.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is not available");return this.cf;},enumerable:!1,configurable:!0}),e.prototype.collection=function(t){return D("Firestore.collection",arguments,1),k("Firestore.collection","non-empty string",1,t),this.hf(),new la(E.g(t),this,/* converter= */null);},e.prototype.doc=function(t){return D("Firestore.doc",arguments,1),k("Firestore.doc","non-empty string",1,t),this.hf(),ta.Rf(E.g(t),this,/* converter= */null);},e.prototype.collectionGroup=function(t){if(D("Firestore.collectionGroup",arguments,1),k("Firestore.collectionGroup","non-empty string",1,t),t.indexOf("/")>=0)throw new c(a.INVALID_ARGUMENT,"Invalid collection ID '"+t+"' passed to function Firestore.collectionGroup(). Collection IDs must not contain '/'.");return this.hf(),new ha(/**
	 * Creates a new Query for a collection group query that matches all documents
	 * within the provided collection group.
	 */function(t){return new Pn(E.P(),t);}(t),this,/* converter= */null);},e.prototype.runTransaction=function(t){var e=this;return D("Firestore.runTransaction",arguments,1),k("Firestore.runTransaction","function",1,t),this.hf().transaction(function(n){return t(new Ju(e,n));});},e.prototype.batch=function(){return this.hf(),new Zu(this);},Object.defineProperty(e,"logLevel",{get:function get(){switch(f()){case n.LogLevel.DEBUG:return"debug";case n.LogLevel.ERROR:return"error";case n.LogLevel.SILENT:return"silent";case n.LogLevel.WARN:return"warn";case n.LogLevel.INFO:return"info";case n.LogLevel.VERBOSE:return"verbose";default:// The default log level is error
	return"error";}},enumerable:!1,configurable:!0}),e.setLogLevel=function(t){var e;D("Firestore.setLogLevel",arguments,1),U("setLogLevel",["debug","error","silent","warn","info","verbose"],1,t),e=t,h.setLogLevel(e);},// Note: this is not a property because the minifier can't work correctly with
	// the way TypeScript compiler outputs properties.
	e.prototype.gf=function(){return this.wf.timestampsInSnapshots;},// Visible for testing.
	e.prototype.Pf=function(){return this.wf;},e;}(),Ju=/** @class */function(){function t(t,e){this.yf=t,this.Vf=e;}return t.prototype.get=function(t){var e=this;D("Transaction.get",arguments,1);var n=ya("Transaction.get",t,this.yf);return this.Vf.v_([n.f_]).then(function(t){if(!t||1!==t.length)return y();var r=t[0];if(r instanceof Rn)return new na(e.yf,n.f_,null,/* fromCache= */!1,/* hasPendingWrites= */!1,n.d_);if(r instanceof kn)return new na(e.yf,n.f_,r,/* fromCache= */!1,/* hasPendingWrites= */!1,n.d_);throw y();});},t.prototype.set=function(t,e,n){L("Transaction.set",arguments,2,3);var r=ya("Transaction.set",t,this.yf);n=pa("Transaction.set",n);var i=ma(r.d_,e,n),o=Ru(this.yf.mf,"Transaction.set",r.f_,i,null!==r.d_,n);return this.Vf.set(r.f_,o),this;},t.prototype.update=function(t,e,n){for(var r,i,o=[],s=3;s<arguments.length;s++){o[s-3]=arguments[s];}return"string"==typeof e||e instanceof du?(x("Transaction.update",arguments,3),r=ya("Transaction.update",t,this.yf),i=Pu(this.yf.mf,"Transaction.update",r.f_,e,n,o)):(D("Transaction.update",arguments,2),r=ya("Transaction.update",t,this.yf),i=Ou(this.yf.mf,"Transaction.update",r.f_,e)),this.Vf.update(r.f_,i),this;},t.prototype.delete=function(t){D("Transaction.delete",arguments,1);var e=ya("Transaction.delete",t,this.yf);return this.Vf.delete(e.f_),this;},t;}(),Zu=/** @class */function(){function t(t){this.yf=t,this.pf=[],this.bf=!1;}return t.prototype.set=function(t,e,n){L("WriteBatch.set",arguments,2,3),this.vf();var r=ya("WriteBatch.set",t,this.yf);n=pa("WriteBatch.set",n);var i=ma(r.d_,e,n),o=Ru(this.yf.mf,"WriteBatch.set",r.f_,i,null!==r.d_,n);return this.pf=this.pf.concat(o.w_(r.f_,fn.ze())),this;},t.prototype.update=function(t,e,n){for(var r,i,o=[],s=3;s<arguments.length;s++){o[s-3]=arguments[s];}return this.vf(),"string"==typeof e||e instanceof du?(x("WriteBatch.update",arguments,3),r=ya("WriteBatch.update",t,this.yf),i=Pu(this.yf.mf,"WriteBatch.update",r.f_,e,n,o)):(D("WriteBatch.update",arguments,2),r=ya("WriteBatch.update",t,this.yf),i=Ou(this.yf.mf,"WriteBatch.update",r.f_,e)),this.pf=this.pf.concat(i.w_(r.f_,fn.exists(!0))),this;},t.prototype.delete=function(t){D("WriteBatch.delete",arguments,1),this.vf();var e=ya("WriteBatch.delete",t,this.yf);return this.pf=this.pf.concat(new Nn(e.f_,fn.ze())),this;},t.prototype.commit=function(){return this.vf(),this.bf=!0,this.pf.length>0?this.yf.hf().write(this.pf):Promise.resolve();},t.prototype.vf=function(){if(this.bf)throw new c(a.FAILED_PRECONDITION,"A write batch can no longer be used after commit() has been called.");},t;}(),ta=/** @class */function(e){function n(t,n,r){var i=this;return(i=e.call(this,n.__,t,r)||this).f_=t,i.firestore=n,i.d_=r,i.lf=i.firestore.hf(),i;}return t.__extends(n,e),n.Rf=function(t,e,r){if(t.length%2!=0)throw new c(a.INVALID_ARGUMENT,"Invalid document reference. Document references must have an even number of segments, but "+t.R()+" has "+t.length);return new n(new A(t),e,r);},Object.defineProperty(n.prototype,"id",{get:function get(){return this.f_.path._();},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"parent",{get:function get(){return new la(this.f_.path.h(),this.firestore,this.d_);},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"path",{get:function get(){return this.f_.path.R();},enumerable:!1,configurable:!0}),n.prototype.collection=function(t){if(D("DocumentReference.collection",arguments,1),k("DocumentReference.collection","non-empty string",1,t),!t)throw new c(a.INVALID_ARGUMENT,"Must provide a non-empty collection name to collection()");var e=E.g(t);return new la(this.f_.path.child(e),this.firestore,/* converter= */null);},n.prototype.isEqual=function(t){if(!(t instanceof n))throw G("isEqual","DocumentReference",1,t);return this.firestore===t.firestore&&this.f_.isEqual(t.f_)&&this.d_===t.d_;},n.prototype.set=function(t,e){L("DocumentReference.set",arguments,1,2),e=pa("DocumentReference.set",e);var n=ma(this.d_,t,e),r=Ru(this.firestore.mf,"DocumentReference.set",this.f_,n,null!==this.d_,e);return this.lf.write(r.w_(this.f_,fn.ze()));},n.prototype.update=function(t,e){for(var n,r=[],i=2;i<arguments.length;i++){r[i-2]=arguments[i];}return"string"==typeof t||t instanceof du?(x("DocumentReference.update",arguments,2),n=Pu(this.firestore.mf,"DocumentReference.update",this.f_,t,e,r)):(D("DocumentReference.update",arguments,1),n=Ou(this.firestore.mf,"DocumentReference.update",this.f_,t)),this.lf.write(n.w_(this.f_,fn.exists(!0)));},n.prototype.delete=function(){return D("DocumentReference.delete",arguments,0),this.lf.write([new Nn(this.f_,fn.ze())]);},n.prototype.onSnapshot=function(){for(var t,e,n,r=this,i=[],o=0;o<arguments.length;o++){i[o]=arguments[o];}L("DocumentReference.onSnapshot",arguments,1,4);var s={includeMetadataChanges:!1},u=0;"object"!=_typeof(i[u])||Qu(i[u])||(j("DocumentReference.onSnapshot",s=i[u],["includeMetadataChanges"]),P("DocumentReference.onSnapshot","boolean","includeMetadataChanges",s.includeMetadataChanges),u++);var a={includeMetadataChanges:s.includeMetadataChanges};if(Qu(i[u])){var c=i[u];i[u]=null===(t=c.next)||void 0===t?void 0:t.bind(c),i[u+1]=null===(e=c.error)||void 0===e?void 0:e.bind(c),i[u+2]=null===(n=c.complete)||void 0===n?void 0:n.bind(c);}else k("DocumentReference.onSnapshot","function",u,i[u]),R("DocumentReference.onSnapshot","function",u+1,i[u+1]),R("DocumentReference.onSnapshot","function",u+2,i[u+2]);var h={next:function next(t){i[u]&&i[u](r.Sf(t));},error:i[u+1],complete:i[u+2]};return this.lf.listen(Un(this.f_.path),a,h);},n.prototype.get=function(t){var e=this;L("DocumentReference.get",arguments,0,1),va("DocumentReference.get",t);var n=this.firestore.hf();return t&&"cache"===t.source?n.Q_(this.f_).then(function(t){return new na(e.firestore,e.f_,t,/*fromCache=*/!0,t instanceof kn&&t.Je,e.d_);}):n.W_(this.f_,t).then(function(t){return e.Sf(t);});},n.prototype.withConverter=function(t){return new n(this.f_,this.firestore,t);},/**
	     * Converts a ViewSnapshot that contains the current document to a
	     * DocumentSnapshot.
	     */n.prototype.Sf=function(t){var e=t.docs.get(this.f_);return new na(this.firestore,this.f_,e,t.fromCache,t.hasPendingWrites,this.d_);},n;}(Au),ea=/** @class */function(){function t(t,e){this.hasPendingWrites=t,this.fromCache=e/**
	     * Returns true if this `SnapshotMetadata` is equal to the provided one.
	     *
	     * @param other The `SnapshotMetadata` to compare against.
	     * @return true if this `SnapshotMetadata` is equal to the provided one.
	     */;}return t.prototype.isEqual=function(t){return this.hasPendingWrites===t.hasPendingWrites&&this.fromCache===t.fromCache;},t;}(),na=/** @class */function(){function t(t,e,n,r,i,o){this.yf=t,this.f_=e,this.Df=n,this.Cf=r,this.Nf=i,this.d_=o;}return t.prototype.data=function(t){var e=this;if(L("DocumentSnapshot.data",arguments,0,1),t=da("DocumentSnapshot.data",t),this.Df){// We only want to use the converter and create a new DocumentSnapshot
	// if a converter has been provided.
	if(this.d_){var n=new ra(this.yf,this.f_,this.Df,this.Cf,this.Nf,/* converter= */null);return this.d_.fromFirestore(n,t);}return new Hu(this.yf.__,this.yf.gf(),t.serverTimestamps||"none",function(t){return new ta(t,e.yf,/* converter= */null);},function(t){return new et(t);}).X_(this.Df.rn());}},t.prototype.get=function(t,e){var n=this;if(L("DocumentSnapshot.get",arguments,1,2),e=da("DocumentSnapshot.get",e),this.Df){var r=this.Df.data().field(qu("DocumentSnapshot.get",t,this.f_));if(null!==r)return new Hu(this.yf.__,this.yf.gf(),e.serverTimestamps||"none",function(t){return new ta(t,n.yf,n.d_);},function(t){return new et(t);}).X_(r);}},Object.defineProperty(t.prototype,"id",{get:function get(){return this.f_.path._();},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"ref",{get:function get(){return new ta(this.f_,this.yf,this.d_);},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"exists",{get:function get(){return null!==this.Df;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"metadata",{get:function get(){return new ea(this.Nf,this.Cf);},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){if(!(e instanceof t))throw G("isEqual","DocumentSnapshot",1,e);return this.yf===e.yf&&this.Cf===e.Cf&&this.f_.isEqual(e.f_)&&(null===this.Df?null===e.Df:this.Df.isEqual(e.Df))&&this.d_===e.d_;},t;}(),ra=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.prototype.data=function(t){return e.prototype.data.call(this,t);},n;}(na);/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */// settings() defaults:
	function ia(t,e,n,r,i,o,s){var u;if(i.p()){if("array-contains"/* ARRAY_CONTAINS */===o||"array-contains-any"/* ARRAY_CONTAINS_ANY */===o)throw new c(a.INVALID_ARGUMENT,"Invalid Query. You can't perform '"+o+"' queries on FieldPath.documentId().");if("in"/* IN */===o||"not-in"/* NOT_IN */===o){ua(s,o);for(var h=[],f=0,l=s;f<l.length;f++){var p=l[f];h.push(sa(r,t,p));}u={arrayValue:{values:h}};}else u=sa(r,t,s);}else"in"/* IN */!==o&&"not-in"/* NOT_IN */!==o&&"array-contains-any"/* ARRAY_CONTAINS_ANY */!==o||ua(s,o),u=Vu(n,e,s,/* allowArrays= */"in"/* IN */===o||"not-in"/* NOT_IN */===o);var d=Jn.create(i,o,u);return function(t,e){if(e.hn()){var n=qn(t);if(null!==n&&!n.isEqual(e.field))throw new c(a.INVALID_ARGUMENT,"Invalid query. All where filters with an inequality (<, <=, >, or >=) must be on the same field. But you have inequality filters on '"+n.toString()+"' and '"+e.field.toString()+"'");var r=Mn(t);null!==r&&aa(t,e.field,r);}var i=function(t,e){for(var n=0,r=t.filters;n<r.length;n++){var i=r[n];if(e.indexOf(i.op)>=0)return i.op;}return null;}(t,/**
	 * Given an operator, returns the set of operators that cannot be used with it.
	 *
	 * Operators in a query must adhere to the following set of rules:
	 * 1. Only one array operator is allowed.
	 * 2. Only one disjunctive operator is allowed.
	 * 3. NOT_EQUAL cannot be used with another NOT_EQUAL operator.
	 * 4. NOT_IN cannot be used with array, disjunctive, or NOT_EQUAL operators.
	 *
	 * Array operators: ARRAY_CONTAINS, ARRAY_CONTAINS_ANY
	 * Disjunctive operators: IN, ARRAY_CONTAINS_ANY, NOT_IN
	 */function(t){switch(t){case"!="/* NOT_EQUAL */:return["!="/* NOT_EQUAL */,"not-in"/* NOT_IN */];case"array-contains"/* ARRAY_CONTAINS */:return["array-contains"/* ARRAY_CONTAINS */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"not-in"/* NOT_IN */];case"in"/* IN */:return["array-contains-any"/* ARRAY_CONTAINS_ANY */,"in"/* IN */,"not-in"/* NOT_IN */];case"array-contains-any"/* ARRAY_CONTAINS_ANY */:return["array-contains"/* ARRAY_CONTAINS */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"in"/* IN */,"not-in"/* NOT_IN */];case"not-in"/* NOT_IN */:return["array-contains"/* ARRAY_CONTAINS */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"in"/* IN */,"not-in"/* NOT_IN */,"!="/* NOT_EQUAL */];default:return[];}}(e.op));if(null!==i)// Special case when it's a duplicate op to give a slightly clearer error message.
	throw i===e.op?new c(a.INVALID_ARGUMENT,"Invalid query. You cannot use more than one '"+e.op.toString()+"' filter."):new c(a.INVALID_ARGUMENT,"Invalid query. You cannot use '"+e.op.toString()+"' filters with '"+i.toString()+"' filters.");}(t,d),d;}function oa(t,e,n){if(null!==t.startAt)throw new c(a.INVALID_ARGUMENT,"Invalid query. You must not call startAt() or startAfter() before calling orderBy().");if(null!==t.endAt)throw new c(a.INVALID_ARGUMENT,"Invalid query. You must not call endAt() or endBefore() before calling orderBy().");var r=new fr(e,n);return function(t,e){if(null===Mn(t)){// This is the first order by. It must match any inequality.
	var n=qn(t);null!==n&&aa(t,n,e.field);}}(t,r),r/**
	 * Create a Bound from a query and a document.
	 *
	 * Note that the Bound will always include the key of the document
	 * and so only the provided document will compare equal to the returned
	 * position.
	 *
	 * Will throw if the document does not contain all fields of the order by
	 * of the query or if any of the fields in the order by are an uncommitted
	 * server timestamp.
	 *//**
	 * Parses the given documentIdValue into a ReferenceValue, throwing
	 * appropriate errors if the value is anything other than a DocumentReference
	 * or String, or if the string is malformed.
	 */;}function sa(t,e,n){if("string"==typeof n){if(""===n)throw new c(a.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");if(!jn(e)&&-1!==n.indexOf("/"))throw new c(a.INVALID_ARGUMENT,"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '"+n+"' contains a '/' character.");var r=e.path.child(E.g(n));if(!A.F(r))throw new c(a.INVALID_ARGUMENT,"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '"+r+"' is not because it has an odd number of segments ("+r.length+").");return ae(t,new A(r));}if(n instanceof Au)return ae(t,n.f_);throw new c(a.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: "+M(n)+".");}/**
	 * Validates that the value passed into a disjunctive filter satisfies all
	 * array requirements.
	 */function ua(t,e){if(!Array.isArray(t)||0===t.length)throw new c(a.INVALID_ARGUMENT,"Invalid Query. A non-empty array is required for '"+e.toString()+"' filters.");if(t.length>10)throw new c(a.INVALID_ARGUMENT,"Invalid Query. '"+e.toString()+"' filters support a maximum of 10 elements in the value array.");if("in"/* IN */===e||"array-contains-any"/* ARRAY_CONTAINS_ANY */===e){if(t.indexOf(null)>=0)throw new c(a.INVALID_ARGUMENT,"Invalid Query. '"+e.toString()+"' filters cannot contain 'null' in the value array.");if(t.filter(function(t){return Number.isNaN(t);}).length>0)throw new c(a.INVALID_ARGUMENT,"Invalid Query. '"+e.toString()+"' filters cannot contain 'NaN' in the value array.");}}function aa(t,e,n){if(!n.isEqual(e))throw new c(a.INVALID_ARGUMENT,"Invalid query. You have a where filter with an inequality (<, <=, >, or >=) on field '"+e.toString()+"' and so you must also use '"+e.toString()+"' as your first orderBy(), but your first orderBy() is on field '"+n.toString()+"' instead.");}function ca(t){if(Fn(t)&&0===t.on.length)throw new c(a.UNIMPLEMENTED,"limitToLast() queries require specifying at least one orderBy() clause");}var ha=/** @class */function(){function e(t,e,n){this.Ff=t,this.firestore=e,this.d_=n;}return e.prototype.where=function(t,n,r){D("Query.where",arguments,3),q("Query.where",3,r);// Enumerated from the WhereFilterOp type in index.d.ts.
	var i=U("Query.where",["<"/* LESS_THAN */,"<="/* LESS_THAN_OR_EQUAL */,"=="/* EQUAL */,"!="/* NOT_EQUAL */,">="/* GREATER_THAN_OR_EQUAL */,">"/* GREATER_THAN */,"array-contains"/* ARRAY_CONTAINS */,"in"/* IN */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"not-in"/* NOT_IN */],2,n),o=qu("Query.where",t),s=ia(this.Ff,"Query.where",this.firestore.mf,this.firestore.__,o,i,r);return new e(function(t,e){var n=t.filters.concat([e]);return new Pn(t.path,t.collectionGroup,t.on.slice(),n,t.limit,t.an,t.startAt,t.endAt);}(this.Ff,s),this.firestore,this.d_);},e.prototype.orderBy=function(t,n){var r;if(L("Query.orderBy",arguments,1,2),R("Query.orderBy","non-empty string",2,n),void 0===n||"asc"===n)r="asc"/* ASCENDING */;else{if("desc"!==n)throw new c(a.INVALID_ARGUMENT,"Function Query.orderBy() has unknown direction '"+n+"', expected 'asc' or 'desc'.");r="desc"/* DESCENDING */;}var i=qu("Query.orderBy",t),o=oa(this.Ff,i,r);return new e(function(t,e){// TODO(dimond): validate that orderBy does not list the same key twice.
	var n=t.on.concat([e]);return new Pn(t.path,t.collectionGroup,n,t.filters.slice(),t.limit,t.an,t.startAt,t.endAt);}(this.Ff,o),this.firestore,this.d_);},e.prototype.limit=function(t){return D("Query.limit",arguments,1),k("Query.limit","number",1,t),z("Query.limit",1,t),new e(Bn(this.Ff,t,"F"/* First */),this.firestore,this.d_);},e.prototype.limitToLast=function(t){return D("Query.limitToLast",arguments,1),k("Query.limitToLast","number",1,t),z("Query.limitToLast",1,t),new e(Bn(this.Ff,t,"L"/* Last */),this.firestore,this.d_);},e.prototype.startAt=function(t){for(var n=[],r=1;r<arguments.length;r++){n[r-1]=arguments[r];}x("Query.startAt",arguments,1);var i=this.xf("Query.startAt",t,n,/*before=*/!0);return new e(Wn(this.Ff,i),this.firestore,this.d_);},e.prototype.startAfter=function(t){for(var n=[],r=1;r<arguments.length;r++){n[r-1]=arguments[r];}x("Query.startAfter",arguments,1);var i=this.xf("Query.startAfter",t,n,/*before=*/!1);return new e(Wn(this.Ff,i),this.firestore,this.d_);},e.prototype.endBefore=function(t){for(var n=[],r=1;r<arguments.length;r++){n[r-1]=arguments[r];}x("Query.endBefore",arguments,1);var i=this.xf("Query.endBefore",t,n,/*before=*/!0);return new e(Kn(this.Ff,i),this.firestore,this.d_);},e.prototype.endAt=function(t){for(var n=[],r=1;r<arguments.length;r++){n[r-1]=arguments[r];}x("Query.endAt",arguments,1);var i=this.xf("Query.endAt",t,n,/*before=*/!1);return new e(Kn(this.Ff,i),this.firestore,this.d_);},e.prototype.isEqual=function(t){if(!(t instanceof e))throw G("isEqual","Query",1,t);return this.firestore===t.firestore&&Qn(this.Ff,t.Ff)&&this.d_===t.d_;},e.prototype.withConverter=function(t){return new e(this.Ff,this.firestore,t);},/** Helper function to create a bound from a document or fields */e.prototype.xf=function(e,n,r,i){if(q(e,1,n),n instanceof na)return D(e,t.__spreadArrays([n],r),1),function(t,e,n,r,i){if(!r)throw new c(a.NOT_FOUND,"Can't use a DocumentSnapshot that doesn't exist for "+n+"().");// Because people expect to continue/end a query at the exact document
	// provided, we need to use the implicit sort order rather than the explicit
	// sort order, because it's guaranteed to contain the document key. That way
	// the position becomes unambiguous and the query continues/ends exactly at
	// the provided document. Without the key (by using the explicit sort
	// orders), multiple documents could match the position, yielding duplicate
	// results.
	for(var o=[],s=0,u=Gn(t);s<u.length;s++){var h=u[s];if(h.field.p())o.push(ae(e,r.key));else{var f=r.field(h.field);if(Ht(f))throw new c(a.INVALID_ARGUMENT,'Invalid query. You are trying to start or end a query using a document for which the field "'+h.field+'" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');if(null===f){var l=h.field.R();throw new c(a.INVALID_ARGUMENT,"Invalid query. You are trying to start or end a query using a document for which the field '"+l+"' (used as the orderBy) does not exist.");}o.push(f);}}return new ur(o,i);}(this.Ff,this.firestore.__,e,n.Df,i);var o=[n].concat(r);return function(t,e,n,r,i,o){// Use explicit order by's because it has to match the query the user made
	var s=t.on;if(i.length>s.length)throw new c(a.INVALID_ARGUMENT,"Too many arguments provided to "+r+"(). The number of arguments must be less than or equal to the number of orderBy() clauses");for(var u=[],h=0;h<i.length;h++){var f=i[h];if(s[h].field.p()){if("string"!=typeof f)throw new c(a.INVALID_ARGUMENT,"Invalid query. Expected a string for document ID in "+r+"(), but got a "+(typeof f==="undefined"?"undefined":_typeof(f)));if(!jn(t)&&-1!==f.indexOf("/"))throw new c(a.INVALID_ARGUMENT,"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to "+r+"() must be a plain document ID, but '"+f+"' contains a slash.");var l=t.path.child(E.g(f));if(!A.F(l))throw new c(a.INVALID_ARGUMENT,"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to "+r+"() must result in a valid document path, but '"+l+"' is not because it contains an odd number of segments.");var p=new A(l);u.push(ae(e,p));}else{var d=Vu(n,r,f);u.push(d);}}return new ur(u,o);}(this.Ff,this.firestore.__,this.firestore.mf,e,o,i);},e.prototype.onSnapshot=function(){for(var t,e,n,r=this,i=[],o=0;o<arguments.length;o++){i[o]=arguments[o];}L("Query.onSnapshot",arguments,1,4);var s={},u=0;if("object"!=_typeof(i[u])||Qu(i[u])||(j("Query.onSnapshot",s=i[u],["includeMetadataChanges"]),P("Query.onSnapshot","boolean","includeMetadataChanges",s.includeMetadataChanges),u++),Qu(i[u])){var a=i[u];i[u]=null===(t=a.next)||void 0===t?void 0:t.bind(a),i[u+1]=null===(e=a.error)||void 0===e?void 0:e.bind(a),i[u+2]=null===(n=a.complete)||void 0===n?void 0:n.bind(a);}else k("Query.onSnapshot","function",u,i[u]),R("Query.onSnapshot","function",u+1,i[u+1]),R("Query.onSnapshot","function",u+2,i[u+2]);var c={next:function next(t){i[u]&&i[u](new fa(r.firestore,r.Ff,t,r.d_));},error:i[u+1],complete:i[u+2]};return ca(this.Ff),this.firestore.hf().listen(this.Ff,s,c);},e.prototype.get=function(t){var e=this;L("Query.get",arguments,0,1),va("Query.get",t),ca(this.Ff);var n=this.firestore.hf();return(t&&"cache"===t.source?n.j_(this.Ff):n.K_(this.Ff,t)).then(function(t){return new fa(e.firestore,e.Ff,t,e.d_);});},e;}(),fa=/** @class */function(){function t(t,e,n,r){this.yf=t,this.$f=e,this.kf=n,this.d_=r,this.Mf=null,this.Of=null,this.metadata=new ea(n.hasPendingWrites,n.fromCache);}return Object.defineProperty(t.prototype,"docs",{get:function get(){var t=[];return this.forEach(function(e){return t.push(e);}),t;},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"empty",{get:function get(){return this.kf.docs.m();},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function get(){return this.kf.docs.size;},enumerable:!1,configurable:!0}),t.prototype.forEach=function(t,e){var n=this;L("QuerySnapshot.forEach",arguments,1,2),k("QuerySnapshot.forEach","function",1,t),this.kf.docs.forEach(function(r){t.call(e,n.Lf(r,n.metadata.fromCache,n.kf.Wt.has(r.key)));});},Object.defineProperty(t.prototype,"query",{get:function get(){return new ha(this.$f,this.yf,this.d_);},enumerable:!1,configurable:!0}),t.prototype.docChanges=function(t){t&&(j("QuerySnapshot.docChanges",t,["includeMetadataChanges"]),P("QuerySnapshot.docChanges","boolean","includeMetadataChanges",t.includeMetadataChanges));var e=!(!t||!t.includeMetadataChanges);if(e&&this.kf.Kt)throw new c(a.INVALID_ARGUMENT,"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");return this.Mf&&this.Of===e||(this.Mf=/**
	     * Calculates the array of DocumentChanges for a given ViewSnapshot.
	     *
	     * Exported for testing.
	     *
	     * @param snapshot The ViewSnapshot that represents the expected state.
	     * @param includeMetadataChanges Whether to include metadata changes.
	     * @param converter A factory function that returns a QueryDocumentSnapshot.
	     * @return An object that matches the DocumentChange API.
	     */function(t,e,n){if(t.Qt.m()){// Special case the first snapshot because index calculation is easy and
	// fast
	var r=0;return t.docChanges.map(function(e){var i=n(e.doc,t.fromCache,t.Wt.has(e.doc.key));return e.doc,{type:"added",doc:i,oldIndex:-1,newIndex:r++};});}// A DocumentSet that is updated incrementally as changes are applied to use
	// to lookup the index of a document.
	var i=t.Qt;return t.docChanges.filter(function(t){return e||3/* Metadata */!==t.type;}).map(function(e){var r=n(e.doc,t.fromCache,t.Wt.has(e.doc.key)),o=-1,s=-1;return 0/* Added */!==e.type&&(o=i.indexOf(e.doc.key),i=i.delete(e.doc.key)),1/* Removed */!==e.type&&(s=(i=i.add(e.doc)).indexOf(e.doc.key)),{type:ga(e.type),doc:r,oldIndex:o,newIndex:s};});}(this.kf,e,this.Lf.bind(this)),this.Of=e),this.Mf;},/** Check the equality. The call can be very expensive. */t.prototype.isEqual=function(e){if(!(e instanceof t))throw G("isEqual","QuerySnapshot",1,e);return this.yf===e.yf&&Qn(this.$f,e.$f)&&this.kf.isEqual(e.kf)&&this.d_===e.d_;},t.prototype.Lf=function(t,e,n){return new ra(this.yf,t.key,t,e,n,this.d_);},t;}(),la=/** @class */function(e){function n(t,n,r){var i=this;if((i=e.call(this,Un(t),n,r)||this).Bf=t,t.length%2!=1)throw new c(a.INVALID_ARGUMENT,"Invalid collection reference. Collection references must have an odd number of segments, but "+t.R()+" has "+t.length);return i;}return t.__extends(n,e),Object.defineProperty(n.prototype,"id",{get:function get(){return this.Ff.path._();},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"parent",{get:function get(){var t=this.Ff.path.h();return t.m()?null:new ta(new A(t),this.firestore,/* converter= */null);},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"path",{get:function get(){return this.Ff.path.R();},enumerable:!1,configurable:!0}),n.prototype.doc=function(t){L("CollectionReference.doc",arguments,0,1),// We allow omission of 'pathString' but explicitly prohibit passing in both
	// 'undefined' and 'null'.
	0===arguments.length&&(t=Q.k()),k("CollectionReference.doc","non-empty string",1,t);var e=E.g(t);return ta.Rf(this.Ff.path.child(e),this.firestore,this.d_);},n.prototype.add=function(t){D("CollectionReference.add",arguments,1);var e=this.d_?this.d_.toFirestore(t):t;k("CollectionReference.add","object",1,e);var n=this.doc();// Call set() with the converted value directly to avoid calling toFirestore() a second time.
	return new ta(n.f_,this.firestore,null).set(e).then(function(){return n;});},n.prototype.withConverter=function(t){return new n(this.Bf,this.firestore,t);},n;}(ha);function pa(t,e){if(void 0===e)return{merge:!1};if(j(t,e,["merge","mergeFields"]),P(t,"boolean","merge",e.merge),function(t,e,n,r,i){void 0!==r&&function(t,e,n,r,i){if(!(r instanceof Array))throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires its "+e+" option to be an array, but it was: "+M(r));for(var o=0;o<r.length;++o){if(!i(r[o]))throw new c(a.INVALID_ARGUMENT,"Function "+t+"() requires all "+e+" elements to be "+n+", but the value at index "+o+" was: "+M(r[o]));}}(t,e,n,r,i);}(t,"mergeFields","a string or a FieldPath",e.mergeFields,function(t){return"string"==typeof t||t instanceof du;}),void 0!==e.mergeFields&&void 0!==e.merge)throw new c(a.INVALID_ARGUMENT,"Invalid options passed to function "+t+'(): You cannot specify both "merge" and "mergeFields".');return e;}function da(t,e){return void 0===e?{}:(j(t,e,["serverTimestamps"]),V(t,0,"serverTimestamps",e.serverTimestamps,["estimate","previous","none"]),e);}function va(t,e){R(t,"object",1,e),e&&(j(t,e,["source"]),V(t,0,"source",e.source,["default","server","cache"]));}function ya(t,e,n){if(e instanceof Au){if(e.firestore!==n)throw new c(a.INVALID_ARGUMENT,"Provided document reference is from a different Firestore instance.");return e;}throw G(t,"DocumentReference",1,e);}function ga(t){switch(t){case 0/* Added */:return"added";case 2/* Modified */:case 3/* Metadata */:return"modified";case 1/* Removed */:return"removed";default:return y();}}/**
	 * Converts custom model object of type T into DocumentData by applying the
	 * converter if it exists.
	 *
	 * This function is used when converting user objects to DocumentData
	 * because we want to provide the user with a more specific error message if
	 * their set() or fails due to invalid data originating from a toFirestore()
	 * call.
	 */function ma(t,e,n){// Cast to `any` in order to satisfy the union type constraint on
	// toFirestore().
	// eslint-disable-next-line @typescript-eslint/no-explicit-any
	return t?n&&(n.merge||n.mergeFields)?t.toFirestore(e,n):t.toFirestore(e):e;}/**
	 * @license
	 * Copyright 2020 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */var wa=/** @class */function(e){function n(){return null!==e&&e.apply(this,arguments)||this;}return t.__extends(n,e),n.serverTimestamp=function(){S("FieldValue.serverTimestamp",arguments);var t=new wu("serverTimestamp");return t.e_="FieldValue.serverTimestamp",new n(t);},n.delete=function(){S("FieldValue.delete",arguments);var t=new gu("deleteField");return t.e_="FieldValue.delete",new n(t);},n.arrayUnion=function(){for(var t=[],e=0;e<arguments.length;e++){t[e]=arguments[e];}x("FieldValue.arrayUnion",arguments,1);var r=/**
	 * Returns a special value that can be used with {@link setDoc()} or {@link
	 * updateDoc()} that tells the server to union the given elements with any array
	 * value that already exists on the server. Each specified element that doesn't
	 * already exist in the array will be added to the end. If the field being
	 * modified is not already an array it will be overwritten with an array
	 * containing exactly the specified elements.
	 *
	 * @param elements The elements to union into the array.
	 * @return The `FieldValue` sentinel for use in a call to `setDoc()` or
	 * `updateDoc()`.
	 */function(){for(var t=[],e=0;e<arguments.length;e++){t[e]=arguments[e];}// NOTE: We don't actually parse the data until it's used in set() or
	// update() since we'd need the Firestore instance to do this.
	return x("arrayUnion()",arguments,1),new _u("arrayUnion",t);}.apply(void 0,t);return r.e_="FieldValue.arrayUnion",new n(r);},n.arrayRemove=function(){for(var t=[],e=0;e<arguments.length;e++){t[e]=arguments[e];}x("FieldValue.arrayRemove",arguments,1);var r=function(){for(var t=[],e=0;e<arguments.length;e++){t[e]=arguments[e];}// NOTE: We don't actually parse the data until it's used in set() or
	// update() since we'd need the Firestore instance to do this.
	return x("arrayRemove()",arguments,1),new bu("arrayRemove",t);}.apply(void 0,t);return r.e_="FieldValue.arrayRemove",new n(r);},n.increment=function(t){k("FieldValue.increment","number",1,t),D("FieldValue.increment",arguments,1);var e=function(t){return new Iu("increment",t);}(t);return e.e_="FieldValue.increment",new n(e);},n.prototype.isEqual=function(t){return this.l_.isEqual(t.l_);},n;}(Tu),_a={Firestore:Xu,GeoPoint:Eu,Timestamp:ot,Blob:et,Transaction:Ju,WriteBatch:Zu,DocumentReference:ta,DocumentSnapshot:na,Query:ha,QueryDocumentSnapshot:ra,QuerySnapshot:fa,CollectionReference:la,FieldPath:du,FieldValue:wa,setLogLevel:Xu.setLogLevel,CACHE_SIZE_UNLIMITED:Yu};/**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Configures Firestore as part of the Firebase SDK by calling registerService.
	 *
	 * @param firebase The FirebaseNamespace to register Firestore with
	 * @param firestoreFactory A factory function that returns a new Firestore
	 *    instance.
	 *//**
	 * @license
	 * Copyright 2017 Google LLC
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *//**
	 * Registers the main Firestore build with the components framework.
	 * Persistence can be enabled via `firebase.firestore().enablePersistence()`.
	 */function ba(t){!function(t,e){t.INTERNAL.registerComponent(new o.Component("firestore",function(t){return function(t,e){var n=new fu(),r=new hu(n);return new Xu(t,e,r,n);}(t.getProvider("app").getImmediate(),t.getProvider("auth-internal"));},"PUBLIC"/* PUBLIC */).setServiceProps(Object.assign({},_a)));}(t),t.registerVersion("@firebase/firestore","1.18.0");}ba(u.default),exports.__PRIVATE_registerFirestore=ba;//# sourceMappingURL=index.cjs.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 190 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	(function () {
	  /*
	  Copyright The Closure Library Authors.
	  SPDX-License-Identifier: Apache-2.0
	  */
	  var m;function aa(a) {
	    var b = 0;return function () {
	      return b < a.length ? { done: !1, value: a[b++] } : { done: !0 };
	    };
	  }function p(a) {
	    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];return b ? b.call(a) : { next: aa(a) };
	  }var ba = "function" == typeof Object.create ? Object.create : function (a) {
	    function b() {}b.prototype = a;return new b();
	  },
	      ca = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
	    if (a == Array.prototype || a == Object.prototype) return a;a[b] = c.value;return a;
	  };
	  function da(a) {
	    a = ["object" == (typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) && globalThis, a, "object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) && window, "object" == (typeof self === "undefined" ? "undefined" : _typeof(self)) && self, "object" == (typeof global === "undefined" ? "undefined" : _typeof(global)) && global];for (var b = 0; b < a.length; ++b) {
	      var c = a[b];if (c && c.Math == Math) return c;
	    }throw Error("Cannot find global object");
	  }var ea = da(this);function q(a, b) {
	    if (b) a: {
	      var c = ea;a = a.split(".");for (var d = 0; d < a.length - 1; d++) {
	        var e = a[d];if (!(e in c)) break a;c = c[e];
	      }a = a[a.length - 1];d = c[a];b = b(d);b != d && null != b && ca(c, a, { configurable: !0, writable: !0, value: b });
	    }
	  }var fa;
	  if ("function" == typeof Object.setPrototypeOf) fa = Object.setPrototypeOf;else {
	    var ha;a: {
	      var ia = { Ha: !0 },
	          ja = {};try {
	        ja.__proto__ = ia;ha = ja.Ha;break a;
	      } catch (a) {}ha = !1;
	    }fa = ha ? function (a, b) {
	      a.__proto__ = b;if (a.__proto__ !== b) throw new TypeError(a + " is not extensible");return a;
	    } : null;
	  }var la = fa;
	  q("Symbol", function (a) {
	    function b(e) {
	      if (this instanceof b) throw new TypeError("Symbol is not a constructor");return new c("jscomp_symbol_" + (e || "") + "_" + d++, e);
	    }function c(e, f) {
	      this.a = e;ca(this, "description", { configurable: !0, writable: !0, value: f });
	    }if (a) return a;c.prototype.toString = function () {
	      return this.a;
	    };var d = 0;return b;
	  });
	  q("Symbol.iterator", function (a) {
	    if (a) return a;a = Symbol("Symbol.iterator");for (var b = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), c = 0; c < b.length; c++) {
	      var d = ea[b[c]];"function" === typeof d && "function" != typeof d.prototype[a] && ca(d.prototype, a, { configurable: !0, writable: !0, value: function value() {
	          return ma(aa(this));
	        } });
	    }return a;
	  });function ma(a) {
	    a = { next: a };a[Symbol.iterator] = function () {
	      return this;
	    };return a;
	  }
	  function t(a, b) {
	    return Object.prototype.hasOwnProperty.call(a, b);
	  }
	  q("WeakMap", function (a) {
	    function b(g) {
	      this.a = (h += Math.random() + 1).toString();if (g) {
	        g = p(g);for (var l; !(l = g.next()).done;) {
	          l = l.value, this.set(l[0], l[1]);
	        }
	      }
	    }function c() {}function d(g) {
	      var l = typeof g === "undefined" ? "undefined" : _typeof(g);return "object" === l && null !== g || "function" === l;
	    }function e(g) {
	      if (!t(g, k)) {
	        var l = new c();ca(g, k, { value: l });
	      }
	    }function f(g) {
	      var l = Object[g];l && (Object[g] = function (n) {
	        if (n instanceof c) return n;Object.isExtensible(n) && e(n);return l(n);
	      });
	    }if (function () {
	      if (!a || !Object.seal) return !1;try {
	        var g = Object.seal({}),
	            l = Object.seal({}),
	            n = new a([[g, 2], [l, 3]]);if (2 != n.get(g) || 3 != n.get(l)) return !1;n.delete(g);n.set(l, 4);return !n.has(g) && 4 == n.get(l);
	      } catch (r) {
	        return !1;
	      }
	    }()) return a;var k = "$jscomp_hidden_" + Math.random();f("freeze");f("preventExtensions");f("seal");var h = 0;b.prototype.set = function (g, l) {
	      if (!d(g)) throw Error("Invalid WeakMap key");e(g);if (!t(g, k)) throw Error("WeakMap key fail: " + g);g[k][this.a] = l;return this;
	    };b.prototype.get = function (g) {
	      return d(g) && t(g, k) ? g[k][this.a] : void 0;
	    };b.prototype.has = function (g) {
	      return d(g) && t(g, k) && t(g[k], this.a);
	    };b.prototype.delete = function (g) {
	      return d(g) && t(g, k) && t(g[k], this.a) ? delete g[k][this.a] : !1;
	    };return b;
	  });
	  q("Map", function (a) {
	    function b() {
	      var h = {};return h.O = h.next = h.head = h;
	    }function c(h, g) {
	      var l = h.a;return ma(function () {
	        if (l) {
	          for (; l.head != h.a;) {
	            l = l.O;
	          }for (; l.next != l.head;) {
	            return l = l.next, { done: !1, value: g(l) };
	          }l = null;
	        }return { done: !0, value: void 0 };
	      });
	    }function d(h, g) {
	      var l = g && (typeof g === "undefined" ? "undefined" : _typeof(g));"object" == l || "function" == l ? f.has(g) ? l = f.get(g) : (l = "" + ++k, f.set(g, l)) : l = "p_" + g;var n = h.b[l];if (n && t(h.b, l)) for (h = 0; h < n.length; h++) {
	        var r = n[h];if (g !== g && r.key !== r.key || g === r.key) return { id: l, list: n, index: h, D: r };
	      }return { id: l, list: n,
	        index: -1, D: void 0 };
	    }function e(h) {
	      this.b = {};this.a = b();this.size = 0;if (h) {
	        h = p(h);for (var g; !(g = h.next()).done;) {
	          g = g.value, this.set(g[0], g[1]);
	        }
	      }
	    }if (function () {
	      if (!a || "function" != typeof a || !a.prototype.entries || "function" != typeof Object.seal) return !1;try {
	        var h = Object.seal({ x: 4 }),
	            g = new a(p([[h, "s"]]));if ("s" != g.get(h) || 1 != g.size || g.get({ x: 4 }) || g.set({ x: 4 }, "t") != g || 2 != g.size) return !1;var l = g.entries(),
	            n = l.next();if (n.done || n.value[0] != h || "s" != n.value[1]) return !1;n = l.next();return n.done || 4 != n.value[0].x || "t" != n.value[1] || !l.next().done ? !1 : !0;
	      } catch (r) {
	        return !1;
	      }
	    }()) return a;var f = new WeakMap();e.prototype.set = function (h, g) {
	      h = 0 === h ? 0 : h;var l = d(this, h);l.list || (l.list = this.b[l.id] = []);l.D ? l.D.value = g : (l.D = { next: this.a, O: this.a.O, head: this.a, key: h, value: g }, l.list.push(l.D), this.a.O.next = l.D, this.a.O = l.D, this.size++);return this;
	    };e.prototype.delete = function (h) {
	      h = d(this, h);return h.D && h.list ? (h.list.splice(h.index, 1), h.list.length || delete this.b[h.id], h.D.O.next = h.D.next, h.D.next.O = h.D.O, h.D.head = null, this.size--, !0) : !1;
	    };e.prototype.clear = function () {
	      this.b = {};this.a = this.a.O = b();this.size = 0;
	    };e.prototype.has = function (h) {
	      return !!d(this, h).D;
	    };e.prototype.get = function (h) {
	      return (h = d(this, h).D) && h.value;
	    };e.prototype.entries = function () {
	      return c(this, function (h) {
	        return [h.key, h.value];
	      });
	    };e.prototype.keys = function () {
	      return c(this, function (h) {
	        return h.key;
	      });
	    };e.prototype.values = function () {
	      return c(this, function (h) {
	        return h.value;
	      });
	    };e.prototype.forEach = function (h, g) {
	      for (var l = this.entries(), n; !(n = l.next()).done;) {
	        n = n.value, h.call(g, n[1], n[0], this);
	      }
	    };e.prototype[Symbol.iterator] = e.prototype.entries;var k = 0;return e;
	  });
	  q("Set", function (a) {
	    function b(c) {
	      this.a = new Map();if (c) {
	        c = p(c);for (var d; !(d = c.next()).done;) {
	          this.add(d.value);
	        }
	      }this.size = this.a.size;
	    }if (function () {
	      if (!a || "function" != typeof a || !a.prototype.entries || "function" != typeof Object.seal) return !1;try {
	        var c = Object.seal({ x: 4 }),
	            d = new a(p([c]));if (!d.has(c) || 1 != d.size || d.add(c) != d || 1 != d.size || d.add({ x: 4 }) != d || 2 != d.size) return !1;var e = d.entries(),
	            f = e.next();if (f.done || f.value[0] != c || f.value[1] != c) return !1;f = e.next();return f.done || f.value[0] == c || 4 != f.value[0].x || f.value[1] != f.value[0] ? !1 : e.next().done;
	      } catch (k) {
	        return !1;
	      }
	    }()) return a;b.prototype.add = function (c) {
	      c = 0 === c ? 0 : c;this.a.set(c, c);this.size = this.a.size;return this;
	    };b.prototype.delete = function (c) {
	      c = this.a.delete(c);this.size = this.a.size;return c;
	    };b.prototype.clear = function () {
	      this.a.clear();this.size = 0;
	    };b.prototype.has = function (c) {
	      return this.a.has(c);
	    };b.prototype.entries = function () {
	      return this.a.entries();
	    };b.prototype.values = function () {
	      return this.a.values();
	    };b.prototype.keys = b.prototype.values;b.prototype[Symbol.iterator] = b.prototype.values;b.prototype.forEach = function (c, d) {
	      var e = this;this.a.forEach(function (f) {
	        return c.call(d, f, f, e);
	      });
	    };return b;
	  });function na(a, b) {
	    a instanceof String && (a += "");var c = 0,
	        d = { next: function next() {
	        if (c < a.length) {
	          var e = c++;return { value: b(e, a[e]), done: !1 };
	        }d.next = function () {
	          return { done: !0, value: void 0 };
	        };return d.next();
	      } };d[Symbol.iterator] = function () {
	      return d;
	    };return d;
	  }q("Array.prototype.values", function (a) {
	    return a ? a : function () {
	      return na(this, function (b, c) {
	        return c;
	      });
	    };
	  });
	  var goog = goog || {},
	      u = this || self;function oa() {}function pa(a) {
	    var b = typeof a === "undefined" ? "undefined" : _typeof(a);return "object" != b ? b : a ? Array.isArray(a) ? "array" : b : "null";
	  }function qa(a) {
	    var b = pa(a);return "array" == b || "object" == b && "number" == typeof a.length;
	  }function v(a) {
	    var b = typeof a === "undefined" ? "undefined" : _typeof(a);return "object" == b && null != a || "function" == b;
	  }function ra(a) {
	    return Object.prototype.hasOwnProperty.call(a, sa) && a[sa] || (a[sa] = ++ta);
	  }var sa = "closure_uid_" + (1E9 * Math.random() >>> 0),
	      ta = 0;function ua(a, b, c) {
	    return a.call.apply(a.bind, arguments);
	  }
	  function va(a, b, c) {
	    if (!a) throw Error();if (2 < arguments.length) {
	      var d = Array.prototype.slice.call(arguments, 2);return function () {
	        var e = Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e, d);return a.apply(b, e);
	      };
	    }return function () {
	      return a.apply(b, arguments);
	    };
	  }function w(a, b, c) {
	    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? w = ua : w = va;return w.apply(null, arguments);
	  }
	  function wa(a, b) {
	    var c = Array.prototype.slice.call(arguments, 1);return function () {
	      var d = c.slice();d.push.apply(d, arguments);return a.apply(this, d);
	    };
	  }var x = Date.now;function y(a, b) {
	    function c() {}c.prototype = b.prototype;a.P = b.prototype;a.prototype = new c();a.prototype.constructor = a;
	  };function z() {
	    0 != xa && (ya[ra(this)] = this);this.j = this.j;this.i = this.i;
	  }var xa = 0,
	      ya = {};z.prototype.j = !1;z.prototype.la = function () {
	    if (!this.j && (this.j = !0, this.H(), 0 != xa)) {
	      var a = ra(this);if (0 != xa && this.i && 0 < this.i.length) throw Error(this + " did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete ya[a];
	    }
	  };z.prototype.H = function () {
	    if (this.i) for (; this.i.length;) {
	      this.i.shift()();
	    }
	  };var za = Array.prototype.indexOf ? function (a, b) {
	    return Array.prototype.indexOf.call(a, b, void 0);
	  } : function (a, b) {
	    if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);for (var c = 0; c < a.length; c++) {
	      if (c in a && a[c] === b) return c;
	    }return -1;
	  },
	      Aa = Array.prototype.forEach ? function (a, b, c) {
	    Array.prototype.forEach.call(a, b, c);
	  } : function (a, b, c) {
	    for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
	      f in e && b.call(c, e[f], f, a);
	    }
	  };
	  function Da(a) {
	    a: {
	      var b = Ea;for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {
	        if (e in d && b.call(void 0, d[e], e, a)) {
	          b = e;break a;
	        }
	      }b = -1;
	    }return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
	  }function Fa(a) {
	    return Array.prototype.concat.apply([], arguments);
	  }function Ga(a) {
	    var b = a.length;if (0 < b) {
	      for (var c = Array(b), d = 0; d < b; d++) {
	        c[d] = a[d];
	      }return c;
	    }return [];
	  };function Ha(a) {
	    return (/^[\s\xa0]*$/.test(a)
	    );
	  }var Ia = String.prototype.trim ? function (a) {
	    return a.trim();
	  } : function (a) {
	    return (/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]
	    );
	  };function A(a, b) {
	    return -1 != a.indexOf(b);
	  }function Ja(a, b) {
	    return a < b ? -1 : a > b ? 1 : 0;
	  };var B;a: {
	    var Ka = u.navigator;if (Ka) {
	      var La = Ka.userAgent;if (La) {
	        B = La;break a;
	      }
	    }B = "";
	  };function Ma(a, b, c) {
	    for (var d in a) {
	      b.call(c, a[d], d, a);
	    }
	  }function Na(a) {
	    var b = {},
	        c;for (c in a) {
	      b[c] = a[c];
	    }return b;
	  }var Oa = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function Pa(a, b) {
	    for (var c, d, e = 1; e < arguments.length; e++) {
	      d = arguments[e];for (c in d) {
	        a[c] = d[c];
	      }for (var f = 0; f < Oa.length; f++) {
	        c = Oa[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
	      }
	    }
	  };function Qa(a) {
	    Qa[" "](a);return a;
	  }Qa[" "] = oa;function Ra(a, b) {
	    var c = Sa;return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
	  };var Ta = A(B, "Opera"),
	      C = A(B, "Trident") || A(B, "MSIE"),
	      Ua = A(B, "Edge"),
	      Va = Ua || C,
	      Wa = A(B, "Gecko") && !(A(B.toLowerCase(), "webkit") && !A(B, "Edge")) && !(A(B, "Trident") || A(B, "MSIE")) && !A(B, "Edge"),
	      Xa = A(B.toLowerCase(), "webkit") && !A(B, "Edge");function Ya() {
	    var a = u.document;return a ? a.documentMode : void 0;
	  }var Za;
	  a: {
	    var $a = "",
	        ab = function () {
	      var a = B;if (Wa) return (/rv:([^\);]+)(\)|;)/.exec(a)
	      );if (Ua) return (/Edge\/([\d\.]+)/.exec(a)
	      );if (C) return (/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a)
	      );if (Xa) return (/WebKit\/(\S+)/.exec(a)
	      );if (Ta) return (/(?:Version)[ \/]?(\S+)/.exec(a)
	      );
	    }();ab && ($a = ab ? ab[1] : "");if (C) {
	      var bb = Ya();if (null != bb && bb > parseFloat($a)) {
	        Za = String(bb);break a;
	      }
	    }Za = $a;
	  }var Sa = {};
	  function cb(a) {
	    return Ra(a, function () {
	      for (var b = 0, c = Ia(String(Za)).split("."), d = Ia(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {
	        var k = c[f] || "",
	            h = d[f] || "";do {
	          k = /(\d*)(\D*)(.*)/.exec(k) || ["", "", "", ""];h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];if (0 == k[0].length && 0 == h[0].length) break;b = Ja(0 == k[1].length ? 0 : parseInt(k[1], 10), 0 == h[1].length ? 0 : parseInt(h[1], 10)) || Ja(0 == k[2].length, 0 == h[2].length) || Ja(k[2], h[2]);k = k[3];h = h[3];
	        } while (0 == b);
	      }return 0 <= b;
	    });
	  }var db;
	  if (u.document && C) {
	    var eb = Ya();db = eb ? eb : parseInt(Za, 10) || void 0;
	  } else db = void 0;var fb = db;var gb = !C || 9 <= Number(fb),
	      hb = C && !cb("9"),
	      ib = function () {
	    if (!u.addEventListener || !Object.defineProperty) return !1;var a = !1,
	        b = Object.defineProperty({}, "passive", { get: function get() {
	        a = !0;
	      } });try {
	      u.addEventListener("test", oa, b), u.removeEventListener("test", oa, b);
	    } catch (c) {}return a;
	  }();function D(a, b) {
	    this.type = a;this.a = this.target = b;this.defaultPrevented = !1;
	  }D.prototype.b = function () {
	    this.defaultPrevented = !0;
	  };function E(a, b) {
	    D.call(this, a ? a.type : "");this.relatedTarget = this.a = this.target = null;this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;this.key = "";this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;this.pointerId = 0;this.pointerType = "";this.c = null;if (a) {
	      var c = this.type = a.type,
	          d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;this.target = a.target || a.srcElement;this.a = b;if (b = a.relatedTarget) {
	        if (Wa) {
	          a: {
	            try {
	              Qa(b.nodeName);var e = !0;break a;
	            } catch (f) {}e = !1;
	          }e || (b = null);
	        }
	      } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);this.relatedTarget = b;d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);this.button = a.button;this.key = a.key || "";this.ctrlKey = a.ctrlKey;this.altKey = a.altKey;this.shiftKey = a.shiftKey;this.metaKey = a.metaKey;this.pointerId = a.pointerId || 0;this.pointerType = "string" === typeof a.pointerType ? a.pointerType : jb[a.pointerType] || "";this.c = a;a.defaultPrevented && this.b();
	    }
	  }y(E, D);var jb = { 2: "touch", 3: "pen", 4: "mouse" };E.prototype.b = function () {
	    E.P.b.call(this);var a = this.c;if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, hb) try {
	      if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
	    } catch (b) {}
	  };var F = "closure_listenable_" + (1E6 * Math.random() | 0),
	      kb = 0;function lb(a, b, c, d, e) {
	    this.listener = a;this.proxy = null;this.src = b;this.type = c;this.capture = !!d;this.ea = e;this.key = ++kb;this.$ = this.aa = !1;
	  }function mb(a) {
	    a.$ = !0;a.listener = null;a.proxy = null;a.src = null;a.ea = null;
	  };function nb(a) {
	    this.src = a;this.a = {};this.b = 0;
	  }nb.prototype.add = function (a, b, c, d, e) {
	    var f = a.toString();a = this.a[f];a || (a = this.a[f] = [], this.b++);var k = ob(a, b, d, e);-1 < k ? (b = a[k], c || (b.aa = !1)) : (b = new lb(b, this.src, f, !!d, e), b.aa = c, a.push(b));return b;
	  };function pb(a, b) {
	    var c = b.type;if (c in a.a) {
	      var d = a.a[c],
	          e = za(d, b),
	          f;(f = 0 <= e) && Array.prototype.splice.call(d, e, 1);f && (mb(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
	    }
	  }
	  function ob(a, b, c, d) {
	    for (var e = 0; e < a.length; ++e) {
	      var f = a[e];if (!f.$ && f.listener == b && f.capture == !!c && f.ea == d) return e;
	    }return -1;
	  };var qb = "closure_lm_" + (1E6 * Math.random() | 0),
	      rb = {},
	      sb = 0;function tb(a, b, c, d, e) {
	    if (d && d.once) return ub(a, b, c, d, e);if (Array.isArray(b)) {
	      for (var f = 0; f < b.length; f++) {
	        tb(a, b[f], c, d, e);
	      }return null;
	    }c = vb(c);return a && a[F] ? a.xa(b, c, v(d) ? !!d.capture : !!d, e) : wb(a, b, c, !1, d, e);
	  }
	  function wb(a, b, c, d, e, f) {
	    if (!b) throw Error("Invalid event type");var k = v(e) ? !!e.capture : !!e;if (k && !gb) return null;var h = xb(a);h || (a[qb] = h = new nb(a));c = h.add(b, c, d, k, f);if (c.proxy) return c;d = zb();c.proxy = d;d.src = a;d.listener = c;if (a.addEventListener) ib || (e = k), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(Ab(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");sb++;
	    return c;
	  }function zb() {
	    var a = Bb,
	        b = gb ? function (c) {
	      return a.call(b.src, b.listener, c);
	    } : function (c) {
	      c = a.call(b.src, b.listener, c);if (!c) return c;
	    };return b;
	  }function ub(a, b, c, d, e) {
	    if (Array.isArray(b)) {
	      for (var f = 0; f < b.length; f++) {
	        ub(a, b[f], c, d, e);
	      }return null;
	    }c = vb(c);return a && a[F] ? a.ya(b, c, v(d) ? !!d.capture : !!d, e) : wb(a, b, c, !0, d, e);
	  }
	  function Cb(a, b, c, d, e) {
	    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
	      Cb(a, b[f], c, d, e);
	    } else (d = v(d) ? !!d.capture : !!d, c = vb(c), a && a[F]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = ob(f, c, d, e), -1 < c && (mb(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = xb(a)) && (b = a.a[b.toString()], a = -1, b && (a = ob(b, c, d, e)), (c = -1 < a ? b[a] : null) && Db(c));
	  }
	  function Db(a) {
	    if ("number" !== typeof a && a && !a.$) {
	      var b = a.src;if (b && b[F]) pb(b.c, a);else {
	        var c = a.type,
	            d = a.proxy;b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(Ab(c), d) : b.addListener && b.removeListener && b.removeListener(d);sb--;(c = xb(b)) ? (pb(c, a), 0 == c.b && (c.src = null, b[qb] = null)) : mb(a);
	      }
	    }
	  }function Ab(a) {
	    return a in rb ? rb[a] : rb[a] = "on" + a;
	  }function Eb(a, b) {
	    var c = a.listener,
	        d = a.ea || a.src;a.aa && Db(a);return c.call(d, b);
	  }
	  function Bb(a, b) {
	    if (a.$) return !0;if (!gb) {
	      if (!b) a: {
	        b = ["window", "event"];for (var c = u, d = 0; d < b.length; d++) {
	          if (c = c[b[d]], null == c) {
	            b = null;break a;
	          }
	        }b = c;
	      }b = new E(b, this);return Eb(a, b);
	    }return Eb(a, new E(b, this));
	  }function xb(a) {
	    a = a[qb];return a instanceof nb ? a : null;
	  }var Fb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);function vb(a) {
	    if ("function" == pa(a)) return a;a[Fb] || (a[Fb] = function (b) {
	      return a.handleEvent(b);
	    });return a[Fb];
	  };function G() {
	    z.call(this);this.c = new nb(this);this.K = this;this.C = null;
	  }y(G, z);G.prototype[F] = !0;m = G.prototype;m.addEventListener = function (a, b, c, d) {
	    tb(this, a, b, c, d);
	  };m.removeEventListener = function (a, b, c, d) {
	    Cb(this, a, b, c, d);
	  };
	  m.dispatchEvent = function (a) {
	    var b,
	        c = this.C;if (c) for (b = []; c; c = c.C) {
	      b.push(c);
	    }c = this.K;var d = a.type || a;if ("string" === typeof a) a = new D(a, c);else if (a instanceof D) a.target = a.target || c;else {
	      var e = a;a = new D(d, c);Pa(a, e);
	    }e = !0;if (b) for (var f = b.length - 1; 0 <= f; f--) {
	      var k = a.a = b[f];e = Gb(k, d, !0, a) && e;
	    }k = a.a = c;e = Gb(k, d, !0, a) && e;e = Gb(k, d, !1, a) && e;if (b) for (f = 0; f < b.length; f++) {
	      k = a.a = b[f], e = Gb(k, d, !1, a) && e;
	    }return e;
	  };
	  m.H = function () {
	    G.P.H.call(this);if (this.c) {
	      var a = this.c,
	          b = 0,
	          c;for (c in a.a) {
	        for (var d = a.a[c], e = 0; e < d.length; e++) {
	          ++b, mb(d[e]);
	        }delete a.a[c];a.b--;
	      }
	    }this.C = null;
	  };m.xa = function (a, b, c, d) {
	    return this.c.add(String(a), b, !1, c, d);
	  };m.ya = function (a, b, c, d) {
	    return this.c.add(String(a), b, !0, c, d);
	  };
	  function Gb(a, b, c, d) {
	    b = a.c.a[String(b)];if (!b) return !0;b = b.concat();for (var e = !0, f = 0; f < b.length; ++f) {
	      var k = b[f];if (k && !k.$ && k.capture == c) {
	        var h = k.listener,
	            g = k.ea || k.src;k.aa && pb(a.c, k);e = !1 !== h.call(g, d) && e;
	      }
	    }return e && !d.defaultPrevented;
	  };var Hb = u.JSON.stringify;function Ib(a, b) {
	    this.c = a;this.f = b;this.b = 0;this.a = null;
	  }Ib.prototype.get = function () {
	    if (0 < this.b) {
	      this.b--;var a = this.a;this.a = a.next;a.next = null;
	    } else a = this.c();return a;
	  };function Jb() {
	    this.b = this.a = null;
	  }var Lb = new Ib(function () {
	    return new Kb();
	  }, function (a) {
	    a.reset();
	  });Jb.prototype.add = function (a, b) {
	    var c = Lb.get();c.set(a, b);this.b ? this.b.next = c : this.a = c;this.b = c;
	  };function Mb() {
	    var a = Nb,
	        b = null;a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);return b;
	  }function Kb() {
	    this.next = this.b = this.a = null;
	  }Kb.prototype.set = function (a, b) {
	    this.a = a;this.b = b;this.next = null;
	  };Kb.prototype.reset = function () {
	    this.next = this.b = this.a = null;
	  };function Ob(a) {
	    u.setTimeout(function () {
	      throw a;
	    }, 0);
	  };function Pb(a, b) {
	    Qb || Rb();Sb || (Qb(), Sb = !0);Nb.add(a, b);
	  }var Qb;function Rb() {
	    var a = u.Promise.resolve(void 0);Qb = function Qb() {
	      a.then(Tb);
	    };
	  }var Sb = !1,
	      Nb = new Jb();function Tb() {
	    for (var a; a = Mb();) {
	      try {
	        a.a.call(a.b);
	      } catch (c) {
	        Ob(c);
	      }var b = Lb;b.f(a);100 > b.b && (b.b++, a.next = b.a, b.a = a);
	    }Sb = !1;
	  };function Ub(a, b) {
	    G.call(this);this.b = a || 1;this.a = b || u;this.f = w(this.ab, this);this.g = x();
	  }y(Ub, G);m = Ub.prototype;m.ca = !1;m.N = null;m.ab = function () {
	    if (this.ca) {
	      var a = x() - this.g;0 < a && a < .8 * this.b ? this.N = this.a.setTimeout(this.f, this.b - a) : (this.N && (this.a.clearTimeout(this.N), this.N = null), this.dispatchEvent("tick"), this.ca && (Vb(this), this.start()));
	    }
	  };m.start = function () {
	    this.ca = !0;this.N || (this.N = this.a.setTimeout(this.f, this.b), this.g = x());
	  };function Vb(a) {
	    a.ca = !1;a.N && (a.a.clearTimeout(a.N), a.N = null);
	  }
	  m.H = function () {
	    Ub.P.H.call(this);Vb(this);delete this.a;
	  };function Wb(a, b, c) {
	    if ("function" == pa(a)) c && (a = w(a, c));else if (a && "function" == typeof a.handleEvent) a = w(a.handleEvent, a);else throw Error("Invalid listener argument");return 2147483647 < Number(b) ? -1 : u.setTimeout(a, b || 0);
	  };function H(a, b, c) {
	    z.call(this);this.g = null != c ? a.bind(c) : a;this.h = b;this.b = null;this.c = !1;this.a = null;
	  }H.prototype = ba(z.prototype);H.prototype.constructor = H;if (la) la(H, z);else for (var I in z) {
	    if ("prototype" != I) if (Object.defineProperties) {
	      var Xb = Object.getOwnPropertyDescriptor(z, I);Xb && Object.defineProperty(H, I, Xb);
	    } else H[I] = z[I];
	  }H.P = z.prototype;H.prototype.f = function (a) {
	    this.b = arguments;this.a ? this.c = !0 : Yb(this);
	  };
	  H.prototype.H = function () {
	    z.prototype.H.call(this);this.a && (u.clearTimeout(this.a), this.a = null, this.c = !1, this.b = null);
	  };function Yb(a) {
	    a.a = Wb(function () {
	      a.a = null;a.c && (a.c = !1, Yb(a));
	    }, a.h);var b = a.b;a.b = null;a.g.apply(null, b);
	  };function J(a) {
	    z.call(this);this.b = a;this.a = {};
	  }y(J, z);var Zb = [];function $b(a, b, c, d) {
	    Array.isArray(c) || (c && (Zb[0] = c.toString()), c = Zb);for (var e = 0; e < c.length; e++) {
	      var f = tb(b, c[e], d || a.handleEvent, !1, a.b || a);if (!f) break;a.a[f.key] = f;
	    }
	  }function ac(a) {
	    Ma(a.a, function (b, c) {
	      this.a.hasOwnProperty(c) && Db(b);
	    }, a);a.a = {};
	  }J.prototype.H = function () {
	    J.P.H.call(this);ac(this);
	  };J.prototype.handleEvent = function () {
	    throw Error("EventHandler.handleEvent not implemented");
	  };function bc() {
	    this.a = !0;
	  }function cc(a, b, c, d, e, f) {
	    a.info(function () {
	      if (a.a) {
	        if (f) {
	          var k = "";for (var h = f.split("&"), g = 0; g < h.length; g++) {
	            var l = h[g].split("=");if (1 < l.length) {
	              var n = l[0];l = l[1];var r = n.split("_");k = 2 <= r.length && "type" == r[1] ? k + (n + "=" + l + "&") : k + (n + "=redacted&");
	            }
	          }
	        } else k = null;
	      } else k = f;return "XMLHTTP REQ (" + d + ") [attempt " + e + "]: " + b + "\n" + c + "\n" + k;
	    });
	  }function dc(a, b, c, d, e, f, k) {
	    a.info(function () {
	      return "XMLHTTP RESP (" + d + ") [ attempt " + e + "]: " + b + "\n" + c + "\n" + f + " " + k;
	    });
	  }
	  function K(a, b, c, d) {
	    a.info(function () {
	      return "XMLHTTP TEXT (" + b + "): " + ec(a, c) + (d ? " " + d : "");
	    });
	  }function fc(a, b) {
	    a.info(function () {
	      return "TIMEOUT: " + b;
	    });
	  }bc.prototype.info = function () {};function ec(a, b) {
	    if (!a.a) return b;if (!b) return null;try {
	      var c = JSON.parse(b);if (c) for (a = 0; a < c.length; a++) {
	        if (Array.isArray(c[a])) {
	          var d = c[a];if (!(2 > d.length)) {
	            var e = d[1];if (Array.isArray(e) && !(1 > e.length)) {
	              var f = e[0];if ("noop" != f && "stop" != f && "close" != f) for (var k = 1; k < e.length; k++) {
	                e[k] = "";
	              }
	            }
	          }
	        }
	      }return Hb(c);
	    } catch (h) {
	      return b;
	    }
	  };var gc = null;function hc() {
	    return gc = gc || new G();
	  }function ic(a) {
	    D.call(this, "serverreachability", a);
	  }y(ic, D);function L(a) {
	    var b = hc();b.dispatchEvent(new ic(b, a));
	  }function jc(a) {
	    D.call(this, "statevent", a);
	  }y(jc, D);function M(a) {
	    var b = hc();b.dispatchEvent(new jc(b, a));
	  }function kc(a) {
	    D.call(this, "timingevent", a);
	  }y(kc, D);function lc(a, b) {
	    if ("function" != pa(a)) throw Error("Fn must not be null and must be a function");return u.setTimeout(function () {
	      a();
	    }, b);
	  };var mc = { NO_ERROR: 0, bb: 1, jb: 2, ib: 3, fb: 4, hb: 5, kb: 6, Fa: 7, TIMEOUT: 8, nb: 9 };var nc = { eb: "complete", rb: "success", Ga: "error", Fa: "abort", pb: "ready", qb: "readystatechange", TIMEOUT: "timeout", lb: "incrementaldata", ob: "progress", gb: "downloadprogress", sb: "uploadprogress" };function oc() {}oc.prototype.a = null;function pc(a) {
	    var b;(b = a.a) || (b = a.a = {});return b;
	  };function qc() {}var rc = { OPEN: "a", cb: "b", Ga: "c", mb: "d" };function sc() {
	    D.call(this, "d");
	  }y(sc, D);function tc() {
	    D.call(this, "c");
	  }y(tc, D);var uc;function vc() {}y(vc, oc);uc = new vc();function wc(a, b, c, d) {
	    this.g = a;this.c = b;this.f = c;this.V = d || 1;this.K = new J(this);this.T = xc;a = Va ? 125 : void 0;this.U = new Ub(a);this.B = null;this.b = !1;this.j = this.l = this.i = this.I = this.u = this.W = this.o = null;this.s = [];this.a = null;this.F = 0;this.h = this.m = null;this.R = -1;this.v = !1;this.S = 0;this.G = null;this.Y = this.C = this.X = this.J = !1;
	  }var xc = 45E3,
	      yc = {},
	      zc = {};m = wc.prototype;m.setTimeout = function (a) {
	    this.T = a;
	  };function Ac(a, b, c) {
	    a.I = 1;a.i = Bc(N(b));a.j = c;a.J = !0;Cc(a, null);
	  }
	  function Cc(a, b) {
	    a.u = x();Dc(a);a.l = N(a.i);var c = a.l,
	        d = a.V;Array.isArray(d) || (d = [String(d)]);Ec(c.b, "t", d);a.F = 0;a.a = Fc(a.g, a.g.C ? b : null);0 < a.S && (a.G = new H(w(a.Ea, a, a.a), a.S));$b(a.K, a.a, "readystatechange", a.Za);b = a.B ? Na(a.B) : {};a.j ? (a.m || (a.m = "POST"), b["Content-Type"] = "application/x-www-form-urlencoded", a.a.da(a.l, a.m, a.j, b)) : (a.m = "GET", a.a.da(a.l, a.m, null, b));L(1);cc(a.c, a.m, a.l, a.f, a.V, a.j);
	  }m.Za = function (a) {
	    a = a.target;var b = this.G;b && 3 == O(a) ? b.f() : this.Ea(a);
	  };
	  m.Ea = function (a) {
	    try {
	      if (a == this.a) a: {
	        var b = O(this.a),
	            c = this.a.wa(),
	            d = this.a.Z();if (!(3 > b || 3 == b && !Va && !this.a.ba())) {
	          this.v || 4 != b || 7 == c || (8 == c || 0 >= d ? L(3) : L(2));Gc(this);var e = this.a.Z();this.R = e;var f = this.a.ba();this.b = 200 == e;dc(this.c, this.m, this.l, this.f, this.V, b, e);if (this.b) {
	            if (this.X && !this.C) {
	              b: {
	                if (this.a) {
	                  var k,
	                      h = this.a;if ((k = h.a ? h.a.getResponseHeader("X-HTTP-Initial-Response") : null) && !Ha(k)) {
	                    var g = k;break b;
	                  }
	                }g = null;
	              }if (g) K(this.c, this.f, g, "Initial handshake response via X-HTTP-Initial-Response"), this.C = !0, Ic(this, g);else {
	                this.b = !1;this.h = 3;M(12);P(this);Jc(this);break a;
	              }
	            }this.J ? (Kc(this, b, f), Va && this.b && 3 == b && ($b(this.K, this.U, "tick", this.Ya), this.U.start())) : (K(this.c, this.f, f, null), Ic(this, f));4 == b && P(this);this.b && !this.v && (4 == b ? Mc(this.g, this) : (this.b = !1, Dc(this)));
	          } else 400 == e && 0 < f.indexOf("Unknown SID") ? (this.h = 3, M(12)) : (this.h = 0, M(13)), P(this), Jc(this);
	        }
	      }
	    } catch (l) {} finally {}
	  };
	  function Kc(a, b, c) {
	    for (var d = !0; !a.v && a.F < c.length;) {
	      var e = Nc(a, c);if (e == zc) {
	        4 == b && (a.h = 4, M(14), d = !1);K(a.c, a.f, null, "[Incomplete Response]");break;
	      } else if (e == yc) {
	        a.h = 4;M(15);K(a.c, a.f, c, "[Invalid Chunk]");d = !1;break;
	      } else K(a.c, a.f, e, null), Ic(a, e);
	    }4 == b && 0 == c.length && (a.h = 1, M(16), d = !1);a.b = a.b && d;d ? 0 < c.length && !a.Y && (a.Y = !0, b = a.g, b.a == a && b.X && !b.G && (b.c.info("Great, no buffering proxy detected. Bytes received: " + c.length), Oc(b), b.G = !0)) : (K(a.c, a.f, c, "[Invalid Chunked Response]"), P(a), Jc(a));
	  }
	  m.Ya = function () {
	    if (this.a) {
	      var a = O(this.a),
	          b = this.a.ba();this.F < b.length && (Gc(this), Kc(this, a, b), this.b && 4 != a && Dc(this));
	    }
	  };function Nc(a, b) {
	    var c = a.F,
	        d = b.indexOf("\n", c);if (-1 == d) return zc;c = Number(b.substring(c, d));if (isNaN(c)) return yc;d += 1;if (d + c > b.length) return zc;b = b.substr(d, c);a.F = d + c;return b;
	  }m.cancel = function () {
	    this.v = !0;P(this);
	  };function Dc(a) {
	    a.W = x() + a.T;Pc(a, a.T);
	  }function Pc(a, b) {
	    if (null != a.o) throw Error("WatchDog timer not null");a.o = lc(w(a.Xa, a), b);
	  }
	  function Gc(a) {
	    a.o && (u.clearTimeout(a.o), a.o = null);
	  }m.Xa = function () {
	    this.o = null;var a = x();0 <= a - this.W ? (fc(this.c, this.l), 2 != this.I && (L(3), M(17)), P(this), this.h = 2, Jc(this)) : Pc(this, this.W - a);
	  };function Jc(a) {
	    0 == a.g.A || a.v || Mc(a.g, a);
	  }function P(a) {
	    Gc(a);var b = a.G;b && "function" == typeof b.la && b.la();a.G = null;Vb(a.U);ac(a.K);a.a && (b = a.a, a.a = null, b.abort(), b.la());
	  }
	  function Ic(a, b) {
	    try {
	      var c = a.g;if (0 != c.A && (c.a == a || Qc(c.b, a))) if (c.J = a.R, !a.C && Qc(c.b, a) && 3 == c.A) {
	        try {
	          var d = c.ra.a.parse(b);
	        } catch (Hc) {
	          d = null;
	        }if (Array.isArray(d) && 3 == d.length) {
	          var e = d;if (0 == e[0]) a: {
	            if (!c.j) {
	              if (c.a) if (c.a.u + 3E3 < a.u) Rc(c), Sc(c);else break a;Tc(c);M(18);
	            }
	          } else c.qa = e[1], 0 < c.qa - c.T && 37500 > e[2] && c.I && 0 == c.o && !c.m && (c.m = lc(w(c.Ua, c), 6E3));if (1 >= Uc(c.b) && c.ga) {
	            try {
	              c.ga();
	            } catch (Hc) {}c.ga = void 0;
	          }
	        } else Q(c, 11);
	      } else if ((a.C || c.a == a) && Rc(c), !Ha(b)) for (b = d = c.ra.a.parse(b), d = 0; d < b.length; d++) {
	        if (e = b[d], c.T = e[0], e = e[1], 2 == c.A) {
	          if ("c" == e[0]) {
	            c.K = e[1];c.ia = e[2];var f = e[3];null != f && (c.ja = f, c.c.info("VER=" + c.ja));var k = e[4];null != k && (c.ma = k, c.c.info("SVER=" + c.ma));var h = e[5];if (null != h && "number" === typeof h && 0 < h) {
	              var g = 1.5 * h;c.F = g;c.c.info("backChannelRequestTimeoutMs_=" + g);
	            }g = c;var l = a.a;if (l) {
	              var n = l.a ? l.a.getResponseHeader("X-Client-Wire-Protocol") : null;if (n) {
	                var r = g.b;!r.a && (A(n, "spdy") || A(n, "quic") || A(n, "h2")) && (r.f = r.g, r.a = new Set(), r.b && (Vc(r, r.b), r.b = null));
	              }if (g.v) {
	                var yb = l.a ? l.a.getResponseHeader("X-HTTP-Session-Id") : null;yb && (g.pa = yb, R(g.B, g.v, yb));
	              }
	            }c.A = 3;c.f && c.f.va();c.X && (c.R = x() - a.u, c.c.info("Handshake RTT: " + c.R + "ms"));g = c;var Ba = a;g.na = Wc(g, g.C ? g.ia : null, g.ha);if (Ba.C) {
	              Xc(g.b, Ba);var Ca = Ba,
	                  Lc = g.F;Lc && Ca.setTimeout(Lc);Ca.o && (Gc(Ca), Dc(Ca));g.a = Ba;
	            } else Yc(g);0 < c.g.length && Zc(c);
	          } else "stop" != e[0] && "close" != e[0] || Q(c, 7);
	        } else 3 == c.A && ("stop" == e[0] || "close" == e[0] ? "stop" == e[0] ? Q(c, 7) : $c(c) : "noop" != e[0] && c.f && c.f.ua(e), c.o = 0);
	      }L(4);
	    } catch (Hc) {}
	  };function ad(a) {
	    if (a.L && "function" == typeof a.L) return a.L();if ("string" === typeof a) return a.split("");if (qa(a)) {
	      for (var b = [], c = a.length, d = 0; d < c; d++) {
	        b.push(a[d]);
	      }return b;
	    }b = [];c = 0;for (d in a) {
	      b[c++] = a[d];
	    }return b;
	  }
	  function bd(a, b) {
	    if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (qa(a) || "string" === typeof a) Aa(a, b, void 0);else {
	      if (a.M && "function" == typeof a.M) var c = a.M();else if (a.L && "function" == typeof a.L) c = void 0;else if (qa(a) || "string" === typeof a) {
	        c = [];for (var d = a.length, e = 0; e < d; e++) {
	          c.push(e);
	        }
	      } else for (e in c = [], d = 0, a) {
	        c[d++] = e;
	      }d = ad(a);e = d.length;for (var f = 0; f < e; f++) {
	        b.call(void 0, d[f], c && c[f], a);
	      }
	    }
	  };function S(a, b) {
	    this.b = {};this.a = [];this.c = 0;var c = arguments.length;if (1 < c) {
	      if (c % 2) throw Error("Uneven number of arguments");for (var d = 0; d < c; d += 2) {
	        this.set(arguments[d], arguments[d + 1]);
	      }
	    } else if (a) if (a instanceof S) for (c = a.M(), d = 0; d < c.length; d++) {
	      this.set(c[d], a.get(c[d]));
	    } else for (d in a) {
	      this.set(d, a[d]);
	    }
	  }m = S.prototype;m.L = function () {
	    cd(this);for (var a = [], b = 0; b < this.a.length; b++) {
	      a.push(this.b[this.a[b]]);
	    }return a;
	  };m.M = function () {
	    cd(this);return this.a.concat();
	  };
	  function cd(a) {
	    if (a.c != a.a.length) {
	      for (var b = 0, c = 0; b < a.a.length;) {
	        var d = a.a[b];T(a.b, d) && (a.a[c++] = d);b++;
	      }a.a.length = c;
	    }if (a.c != a.a.length) {
	      var e = {};for (c = b = 0; b < a.a.length;) {
	        d = a.a[b], T(e, d) || (a.a[c++] = d, e[d] = 1), b++;
	      }a.a.length = c;
	    }
	  }m.get = function (a, b) {
	    return T(this.b, a) ? this.b[a] : b;
	  };m.set = function (a, b) {
	    T(this.b, a) || (this.c++, this.a.push(a));this.b[a] = b;
	  };m.forEach = function (a, b) {
	    for (var c = this.M(), d = 0; d < c.length; d++) {
	      var e = c[d],
	          f = this.get(e);a.call(b, f, e, this);
	    }
	  };
	  function T(a, b) {
	    return Object.prototype.hasOwnProperty.call(a, b);
	  };var dd = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function ed(a, b) {
	    if (a) {
	      a = a.split("&");for (var c = 0; c < a.length; c++) {
	        var d = a[c].indexOf("="),
	            e = null;if (0 <= d) {
	          var f = a[c].substring(0, d);e = a[c].substring(d + 1);
	        } else f = a[c];b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
	      }
	    }
	  };function U(a, b) {
	    this.c = this.j = this.f = "";this.h = null;this.i = this.g = "";this.a = !1;if (a instanceof U) {
	      this.a = void 0 !== b ? b : a.a;fd(this, a.f);this.j = a.j;gd(this, a.c);hd(this, a.h);this.g = a.g;b = a.b;var c = new id();c.c = b.c;b.a && (c.a = new S(b.a), c.b = b.b);jd(this, c);this.i = a.i;
	    } else a && (c = String(a).match(dd)) ? (this.a = !!b, fd(this, c[1] || "", !0), this.j = kd(c[2] || ""), gd(this, c[3] || "", !0), hd(this, c[4]), this.g = kd(c[5] || "", !0), jd(this, c[6] || "", !0), this.i = kd(c[7] || "")) : (this.a = !!b, this.b = new id(null, this.a));
	  }
	  U.prototype.toString = function () {
	    var a = [],
	        b = this.f;b && a.push(ld(b, md, !0), ":");var c = this.c;if (c || "file" == b) a.push("//"), (b = this.j) && a.push(ld(b, md, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.h, null != c && a.push(":", String(c));if (c = this.g) this.c && "/" != c.charAt(0) && a.push("/"), a.push(ld(c, "/" == c.charAt(0) ? nd : od, !0));(c = this.b.toString()) && a.push("?", c);(c = this.i) && a.push("#", ld(c, pd));return a.join("");
	  };function N(a) {
	    return new U(a);
	  }
	  function fd(a, b, c) {
	    a.f = c ? kd(b, !0) : b;a.f && (a.f = a.f.replace(/:$/, ""));
	  }function gd(a, b, c) {
	    a.c = c ? kd(b, !0) : b;
	  }function hd(a, b) {
	    if (b) {
	      b = Number(b);if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);a.h = b;
	    } else a.h = null;
	  }function jd(a, b, c) {
	    b instanceof id ? (a.b = b, qd(a.b, a.a)) : (c || (b = ld(b, rd)), a.b = new id(b, a.a));
	  }function R(a, b, c) {
	    a.b.set(b, c);
	  }function Bc(a) {
	    R(a, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ x()).toString(36));return a;
	  }
	  function sd(a) {
	    return a instanceof U ? N(a) : new U(a, void 0);
	  }function td(a, b, c, d) {
	    var e = new U(null, void 0);a && fd(e, a);b && gd(e, b);c && hd(e, c);d && (e.g = d);return e;
	  }function kd(a, b) {
	    return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
	  }function ld(a, b, c) {
	    return "string" === typeof a ? (a = encodeURI(a).replace(b, ud), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
	  }function ud(a) {
	    a = a.charCodeAt(0);return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
	  }
	  var md = /[#\/\?@]/g,
	      od = /[#\?:]/g,
	      nd = /[#\?]/g,
	      rd = /[#\?@]/g,
	      pd = /#/g;function id(a, b) {
	    this.b = this.a = null;this.c = a || null;this.f = !!b;
	  }function V(a) {
	    a.a || (a.a = new S(), a.b = 0, a.c && ed(a.c, function (b, c) {
	      a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
	    }));
	  }m = id.prototype;m.add = function (a, b) {
	    V(this);this.c = null;a = W(this, a);var c = this.a.get(a);c || this.a.set(a, c = []);c.push(b);this.b += 1;return this;
	  };
	  function vd(a, b) {
	    V(a);b = W(a, b);T(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, T(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && cd(a)));
	  }function wd(a, b) {
	    V(a);b = W(a, b);return T(a.a.b, b);
	  }m.forEach = function (a, b) {
	    V(this);this.a.forEach(function (c, d) {
	      Aa(c, function (e) {
	        a.call(b, e, d, this);
	      }, this);
	    }, this);
	  };m.M = function () {
	    V(this);for (var a = this.a.L(), b = this.a.M(), c = [], d = 0; d < b.length; d++) {
	      for (var e = a[d], f = 0; f < e.length; f++) {
	        c.push(b[d]);
	      }
	    }return c;
	  };
	  m.L = function (a) {
	    V(this);var b = [];if ("string" === typeof a) wd(this, a) && (b = Fa(b, this.a.get(W(this, a))));else {
	      a = this.a.L();for (var c = 0; c < a.length; c++) {
	        b = Fa(b, a[c]);
	      }
	    }return b;
	  };m.set = function (a, b) {
	    V(this);this.c = null;a = W(this, a);wd(this, a) && (this.b -= this.a.get(a).length);this.a.set(a, [b]);this.b += 1;return this;
	  };m.get = function (a, b) {
	    if (!a) return b;a = this.L(a);return 0 < a.length ? String(a[0]) : b;
	  };function Ec(a, b, c) {
	    vd(a, b);0 < c.length && (a.c = null, a.a.set(W(a, b), Ga(c)), a.b += c.length);
	  }
	  m.toString = function () {
	    if (this.c) return this.c;if (!this.a) return "";for (var a = [], b = this.a.M(), c = 0; c < b.length; c++) {
	      var d = b[c],
	          e = encodeURIComponent(String(d));d = this.L(d);for (var f = 0; f < d.length; f++) {
	        var k = e;"" !== d[f] && (k += "=" + encodeURIComponent(String(d[f])));a.push(k);
	      }
	    }return this.c = a.join("&");
	  };function W(a, b) {
	    b = String(b);a.f && (b = b.toLowerCase());return b;
	  }function qd(a, b) {
	    b && !a.f && (V(a), a.c = null, a.a.forEach(function (c, d) {
	      var e = d.toLowerCase();d != e && (vd(this, d), Ec(this, e, c));
	    }, a));a.f = b;
	  };function xd(a, b) {
	    this.b = a;this.a = b;
	  };function yd(a) {
	    this.g = a || zd;u.PerformanceNavigationTiming ? (a = u.performance.getEntriesByType("navigation"), a = 0 < a.length && ("hq" == a[0].nextHopProtocol || "h2" == a[0].nextHopProtocol)) : a = !!(u.ka && u.ka.Aa && u.ka.Aa() && u.ka.Aa().tb);this.f = a ? this.g : 1;this.a = null;1 < this.f && (this.a = new Set());this.b = null;this.c = [];
	  }var zd = 10;function Ad(a) {
	    return a.b ? !0 : a.a ? a.a.size >= a.f : !1;
	  }function Uc(a) {
	    return a.b ? 1 : a.a ? a.a.size : 0;
	  }function Qc(a, b) {
	    return a.b ? a.b == b : a.a ? a.a.has(b) : !1;
	  }function Vc(a, b) {
	    a.a ? a.a.add(b) : a.b = b;
	  }
	  function Xc(a, b) {
	    a.b && a.b == b ? a.b = null : a.a && a.a.has(b) && a.a.delete(b);
	  }yd.prototype.cancel = function () {
	    this.c = Bd(this);if (this.b) this.b.cancel(), this.b = null;else if (this.a && 0 !== this.a.size) {
	      for (var a = p(this.a.values()), b = a.next(); !b.done; b = a.next()) {
	        b.value.cancel();
	      }this.a.clear();
	    }
	  };function Bd(a) {
	    if (null != a.b) return a.c.concat(a.b.s);if (null != a.a && 0 !== a.a.size) {
	      var b = a.c;a = p(a.a.values());for (var c = a.next(); !c.done; c = a.next()) {
	        b = b.concat(c.value.s);
	      }return b;
	    }return Ga(a.c);
	  };function Cd() {}Cd.prototype.stringify = function (a) {
	    return u.JSON.stringify(a, void 0);
	  };Cd.prototype.parse = function (a) {
	    return u.JSON.parse(a, void 0);
	  };function Dd() {
	    this.a = new Cd();
	  }function Ed(a, b, c) {
	    var d = c || "";try {
	      bd(a, function (e, f) {
	        var k = e;v(e) && (k = Hb(e));b.push(d + f + "=" + encodeURIComponent(k));
	      });
	    } catch (e) {
	      throw b.push(d + "type=" + encodeURIComponent("_badmap")), e;
	    }
	  };function Fd(a, b) {
	    var c = new bc();if (u.Image) {
	      var d = new Image();d.onload = wa(Gd, c, d, "TestLoadImage: loaded", !0, b);d.onerror = wa(Gd, c, d, "TestLoadImage: error", !1, b);d.onabort = wa(Gd, c, d, "TestLoadImage: abort", !1, b);d.ontimeout = wa(Gd, c, d, "TestLoadImage: timeout", !1, b);u.setTimeout(function () {
	        if (d.ontimeout) d.ontimeout();
	      }, 1E4);d.src = a;
	    } else b(!1);
	  }function Gd(a, b, c, d, e) {
	    try {
	      b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);
	    } catch (f) {}
	  };var Hd = u.JSON.parse;function X(a) {
	    G.call(this);this.headers = new S();this.I = a || null;this.b = !1;this.s = this.a = null;this.B = "";this.h = 0;this.f = "";this.g = this.v = this.l = this.u = !1;this.o = 0;this.m = null;this.J = Id;this.F = this.G = !1;
	  }y(X, G);var Id = "",
	      Jd = /^https?$/i,
	      Kd = ["POST", "PUT"];m = X.prototype;
	  m.da = function (a, b, c, d) {
	    if (this.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.B + "; newUri=" + a);b = b ? b.toUpperCase() : "GET";this.B = a;this.f = "";this.h = 0;this.u = !1;this.b = !0;this.a = new XMLHttpRequest();this.s = this.I ? pc(this.I) : pc(uc);this.a.onreadystatechange = w(this.Ba, this);try {
	      this.v = !0, this.a.open(b, String(a), !0), this.v = !1;
	    } catch (f) {
	      Ld(this, f);return;
	    }a = c || "";var e = new S(this.headers);d && bd(d, function (f, k) {
	      e.set(k, f);
	    });d = Da(e.M());c = u.FormData && a instanceof u.FormData;!(0 <= za(Kd, b)) || d || c || e.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");e.forEach(function (f, k) {
	      this.a.setRequestHeader(k, f);
	    }, this);this.J && (this.a.responseType = this.J);"withCredentials" in this.a && this.a.withCredentials !== this.G && (this.a.withCredentials = this.G);try {
	      Md(this), 0 < this.o && ((this.F = Nd(this.a)) ? (this.a.timeout = this.o, this.a.ontimeout = w(this.za, this)) : this.m = Wb(this.za, this.o, this)), this.l = !0, this.a.send(a), this.l = !1;
	    } catch (f) {
	      Ld(this, f);
	    }
	  };
	  function Nd(a) {
	    return C && cb(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout;
	  }function Ea(a) {
	    return "content-type" == a.toLowerCase();
	  }m.za = function () {
	    "undefined" != typeof goog && this.a && (this.f = "Timed out after " + this.o + "ms, aborting", this.h = 8, this.dispatchEvent("timeout"), this.abort(8));
	  };function Ld(a, b) {
	    a.b = !1;a.a && (a.g = !0, a.a.abort(), a.g = !1);a.f = b;a.h = 5;Od(a);Pd(a);
	  }function Od(a) {
	    a.u || (a.u = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
	  }
	  m.abort = function (a) {
	    this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, this.dispatchEvent("complete"), this.dispatchEvent("abort"), Pd(this));
	  };m.H = function () {
	    this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), Pd(this, !0));X.P.H.call(this);
	  };m.Ba = function () {
	    this.j || (this.v || this.l || this.g ? Qd(this) : this.Wa());
	  };m.Wa = function () {
	    Qd(this);
	  };
	  function Qd(a) {
	    if (a.b && "undefined" != typeof goog && (!a.s[1] || 4 != O(a) || 2 != a.Z())) if (a.l && 4 == O(a)) Wb(a.Ba, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == O(a)) {
	      a.b = !1;try {
	        var b = a.Z();a: switch (b) {case 200:case 201:case 202:case 204:case 206:case 304:case 1223:
	            var c = !0;break a;default:
	            c = !1;}var d;if (!(d = c)) {
	          var e;if (e = 0 === b) {
	            var f = String(a.B).match(dd)[1] || null;if (!f && u.self && u.self.location) {
	              var k = u.self.location.protocol;f = k.substr(0, k.length - 1);
	            }e = !Jd.test(f ? f.toLowerCase() : "");
	          }d = e;
	        }if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
	          a.h = 6;try {
	            var h = 2 < O(a) ? a.a.statusText : "";
	          } catch (g) {
	            h = "";
	          }a.f = h + " [" + a.Z() + "]";Od(a);
	        }
	      } finally {
	        Pd(a);
	      }
	    }
	  }function Pd(a, b) {
	    if (a.a) {
	      Md(a);var c = a.a,
	          d = a.s[0] ? oa : null;a.a = null;a.s = null;b || a.dispatchEvent("ready");try {
	        c.onreadystatechange = d;
	      } catch (e) {}
	    }
	  }function Md(a) {
	    a.a && a.F && (a.a.ontimeout = null);a.m && (u.clearTimeout(a.m), a.m = null);
	  }function O(a) {
	    return a.a ? a.a.readyState : 0;
	  }m.Z = function () {
	    try {
	      return 2 < O(this) ? this.a.status : -1;
	    } catch (a) {
	      return -1;
	    }
	  };
	  m.ba = function () {
	    try {
	      return this.a ? this.a.responseText : "";
	    } catch (a) {
	      return "";
	    }
	  };m.Pa = function (a) {
	    if (this.a) {
	      var b = this.a.responseText;a && 0 == b.indexOf(a) && (b = b.substring(a.length));return Hd(b);
	    }
	  };m.wa = function () {
	    return this.h;
	  };m.Sa = function () {
	    return "string" === typeof this.f ? this.f : String(this.f);
	  };function Rd(a) {
	    var b = "";Ma(a, function (c, d) {
	      b += d;b += ":";b += c;b += "\r\n";
	    });return b;
	  }function Sd(a, b, c) {
	    a: {
	      for (d in c) {
	        var d = !1;break a;
	      }d = !0;
	    }d || (c = Rd(c), "string" === typeof a ? (encodeURIComponent(String(b)), null != c && encodeURIComponent(String(c))) : R(a, b, c));
	  };function Td(a, b, c) {
	    return c && c.internalChannelParams ? c.internalChannelParams[a] || b : b;
	  }
	  function Ud(a) {
	    this.ma = 0;this.g = [];this.c = new bc();this.ia = this.na = this.B = this.ha = this.a = this.pa = this.v = this.Y = this.i = this.S = this.l = null;this.Oa = this.U = 0;this.La = Td("failFast", !1, a);this.I = this.m = this.j = this.h = this.f = null;this.V = !0;this.J = this.qa = this.T = -1;this.W = this.o = this.u = 0;this.Ia = Td("baseRetryDelayMs", 5E3, a);this.Ta = Td("retryDelaySeedMs", 1E4, a);this.Ma = Td("forwardChannelMaxRetries", 2, a);this.oa = Td("forwardChannelRequestTimeoutMs", 2E4, a);this.Na = a && a.g || void 0;this.F = void 0;this.C = a && a.supportsCrossDomainXhr || !1;this.K = "";this.b = new yd(a && a.concurrentRequestLimit);this.ra = new Dd();this.fa = a && a.fastHandshake || !1;this.Ka = a && a.b || !1;a && a.f && (this.c.a = !1);a && a.forceLongPolling && (this.V = !1);this.X = !this.fa && this.V && a && a.c || !1;this.ga = void 0;this.R = 0;this.G = !1;this.s = null;
	  }m = Ud.prototype;m.ja = 8;m.A = 1;
	  function $c(a) {
	    Vd(a);if (3 == a.A) {
	      var b = a.U++,
	          c = N(a.B);R(c, "SID", a.K);R(c, "RID", b);R(c, "TYPE", "terminate");Wd(a, c);b = new wc(a, a.c, b, void 0);b.I = 2;b.i = Bc(N(c));c = !1;u.navigator && u.navigator.sendBeacon && (c = u.navigator.sendBeacon(b.i.toString(), ""));!c && u.Image && (new Image().src = b.i, c = !0);c || (b.a = Fc(b.g, null), b.a.da(b.i));b.u = x();Dc(b);
	    }Xd(a);
	  }function Sc(a) {
	    a.a && (Oc(a), a.a.cancel(), a.a = null);
	  }
	  function Vd(a) {
	    Sc(a);a.j && (u.clearTimeout(a.j), a.j = null);Rc(a);a.b.cancel();a.h && ("number" === typeof a.h && u.clearTimeout(a.h), a.h = null);
	  }function Yd(a, b) {
	    a.g.push(new xd(a.Oa++, b));3 == a.A && Zc(a);
	  }function Zc(a) {
	    Ad(a.b) || a.h || (a.h = !0, Pb(a.Da, a), a.u = 0);
	  }function Zd(a, b) {
	    if (Uc(a.b) >= a.b.f - (a.h ? 1 : 0)) return !1;if (a.h) return a.g = b.s.concat(a.g), !0;if (1 == a.A || 2 == a.A || a.u >= (a.La ? 0 : a.Ma)) return !1;a.h = lc(w(a.Da, a, b), $d(a, a.u));a.u++;return !0;
	  }
	  m.Da = function (a) {
	    if (this.h) if (this.h = null, 1 == this.A) {
	      if (!a) {
	        this.U = Math.floor(1E5 * Math.random());a = this.U++;var b = new wc(this, this.c, a, void 0),
	            c = this.l;this.S && (c ? (c = Na(c), Pa(c, this.S)) : c = this.S);null === this.i && (b.B = c);var d;if (this.fa) a: {
	          for (var e = d = 0; e < this.g.length; e++) {
	            b: {
	              var f = this.g[e];if ("__data__" in f.a && (f = f.a.__data__, "string" === typeof f)) {
	                f = f.length;break b;
	              }f = void 0;
	            }if (void 0 === f) break;d += f;if (4096 < d) {
	              d = e;break a;
	            }if (4096 === d || e === this.g.length - 1) {
	              d = e + 1;break a;
	            }
	          }d = 1E3;
	        } else d = 1E3;d = ae(this, b, d);e = N(this.B);R(e, "RID", a);R(e, "CVER", 22);this.v && R(e, "X-HTTP-Session-Id", this.v);Wd(this, e);this.i && c && Sd(e, this.i, c);Vc(this.b, b);this.Ka && R(e, "TYPE", "init");this.fa ? (R(e, "$req", d), R(e, "SID", "null"), b.X = !0, Ac(b, e, null)) : Ac(b, e, d);this.A = 2;
	      }
	    } else 3 == this.A && (a ? be(this, a) : 0 == this.g.length || Ad(this.b) || be(this));
	  };
	  function be(a, b) {
	    var c;b ? c = b.f : c = a.U++;var d = N(a.B);R(d, "SID", a.K);R(d, "RID", c);R(d, "AID", a.T);Wd(a, d);a.i && a.l && Sd(d, a.i, a.l);c = new wc(a, a.c, c, a.u + 1);null === a.i && (c.B = a.l);b && (a.g = b.s.concat(a.g));b = ae(a, c, 1E3);c.setTimeout(Math.round(.5 * a.oa) + Math.round(.5 * a.oa * Math.random()));Vc(a.b, c);Ac(c, d, b);
	  }function Wd(a, b) {
	    a.f && bd({}, function (c, d) {
	      R(b, d, c);
	    });
	  }
	  function ae(a, b, c) {
	    c = Math.min(a.g.length, c);var d = a.f ? w(a.f.Ja, a.f, a) : null;a: for (var e = a.g, f = -1;;) {
	      var k = ["count=" + c];-1 == f ? 0 < c ? (f = e[0].b, k.push("ofs=" + f)) : f = 0 : k.push("ofs=" + f);for (var h = !0, g = 0; g < c; g++) {
	        var l = e[g].b,
	            n = e[g].a;l -= f;if (0 > l) f = Math.max(0, e[g].b - 100), h = !1;else try {
	          Ed(n, k, "req" + l + "_");
	        } catch (r) {
	          d && d(n);
	        }
	      }if (h) {
	        d = k.join("&");break a;
	      }
	    }a = a.g.splice(0, c);b.s = a;return d;
	  }function Yc(a) {
	    a.a || a.j || (a.W = 1, Pb(a.Ca, a), a.o = 0);
	  }
	  function Tc(a) {
	    if (a.a || a.j || 3 <= a.o) return !1;a.W++;a.j = lc(w(a.Ca, a), $d(a, a.o));a.o++;return !0;
	  }m.Ca = function () {
	    this.j = null;ce(this);if (this.X && !(this.G || null == this.a || 0 >= this.R)) {
	      var a = 2 * this.R;this.c.info("BP detection timer enabled: " + a);this.s = lc(w(this.Va, this), a);
	    }
	  };m.Va = function () {
	    this.s && (this.s = null, this.c.info("BP detection timeout reached."), this.c.info("Buffering proxy detected and switch to long-polling!"), this.I = !1, this.G = !0, Sc(this), ce(this));
	  };
	  function Oc(a) {
	    null != a.s && (u.clearTimeout(a.s), a.s = null);
	  }function ce(a) {
	    a.a = new wc(a, a.c, "rpc", a.W);null === a.i && (a.a.B = a.l);a.a.S = 0;var b = N(a.na);R(b, "RID", "rpc");R(b, "SID", a.K);R(b, "CI", a.I ? "0" : "1");R(b, "AID", a.T);Wd(a, b);R(b, "TYPE", "xmlhttp");a.i && a.l && Sd(b, a.i, a.l);a.F && a.a.setTimeout(a.F);var c = a.a;a = a.ia;c.I = 1;c.i = Bc(N(b));c.j = null;c.J = !0;Cc(c, a);
	  }m.Ua = function () {
	    null != this.m && (this.m = null, Sc(this), Tc(this), M(19));
	  };function Rc(a) {
	    null != a.m && (u.clearTimeout(a.m), a.m = null);
	  }
	  function Mc(a, b) {
	    var c = null;if (a.a == b) {
	      Rc(a);Oc(a);a.a = null;var d = 2;
	    } else if (Qc(a.b, b)) c = b.s, Xc(a.b, b), d = 1;else return;a.J = b.R;if (0 != a.A) if (b.b) {
	      if (1 == d) {
	        c = b.j ? b.j.length : 0;b = x() - b.u;var e = a.u;d = hc();d.dispatchEvent(new kc(d, c, b, e));Zc(a);
	      } else Yc(a);
	    } else if (e = b.h, 3 == e || 0 == e && 0 < a.J || !(1 == d && Zd(a, b) || 2 == d && Tc(a))) switch (c && 0 < c.length && (b = a.b, b.c = b.c.concat(c)), e) {case 1:
	        Q(a, 5);break;case 4:
	        Q(a, 10);break;case 3:
	        Q(a, 6);break;default:
	        Q(a, 2);}
	  }
	  function $d(a, b) {
	    var c = a.Ia + Math.floor(Math.random() * a.Ta);a.f || (c *= 2);return c * b;
	  }function Q(a, b) {
	    a.c.info("Error code " + b);if (2 == b) {
	      var c = null;a.f && (c = null);var d = w(a.$a, a);c || (c = new U("//www.google.com/images/cleardot.gif"), u.location && "http" == u.location.protocol || fd(c, "https"), Bc(c));Fd(c.toString(), d);
	    } else M(2);a.A = 0;a.f && a.f.ta(b);Xd(a);Vd(a);
	  }m.$a = function (a) {
	    a ? (this.c.info("Successfully pinged google.com"), M(2)) : (this.c.info("Failed to ping google.com"), M(1));
	  };
	  function Xd(a) {
	    a.A = 0;a.J = -1;if (a.f) {
	      if (0 != Bd(a.b).length || 0 != a.g.length) a.b.c.length = 0, Ga(a.g), a.g.length = 0;a.f.sa();
	    }
	  }function Wc(a, b, c) {
	    var d = sd(c);if ("" != d.c) b && gd(d, b + "." + d.c), hd(d, d.h);else {
	      var e = u.location;d = td(e.protocol, b ? b + "." + e.hostname : e.hostname, +e.port, c);
	    }a.Y && Ma(a.Y, function (f, k) {
	      R(d, k, f);
	    });b = a.v;c = a.pa;b && c && R(d, b, c);R(d, "VER", a.ja);Wd(a, d);return d;
	  }function Fc(a, b) {
	    if (b && !a.C) throw Error("Can't create secondary domain capable XhrIo object.");b = new X(a.Na);b.G = a.C;return b;
	  }
	  function de() {}m = de.prototype;m.va = function () {};m.ua = function () {};m.ta = function () {};m.sa = function () {};m.Ja = function () {};function ee() {
	    if (C && !(10 <= Number(fb))) throw Error("Environmental error: no available transport.");
	  }ee.prototype.a = function (a, b) {
	    return new Y(a, b);
	  };
	  function Y(a, b) {
	    G.call(this);this.a = new Ud(b);this.l = a;this.b = b && b.messageUrlParams || null;a = b && b.messageHeaders || null;b && b.clientProtocolHeaderRequired && (a ? a["X-Client-Protocol"] = "webchannel" : a = { "X-Client-Protocol": "webchannel" });this.a.l = a;a = b && b.initMessageHeaders || null;b && b.messageContentType && (a ? a["X-WebChannel-Content-Type"] = b.messageContentType : a = { "X-WebChannel-Content-Type": b.messageContentType });b && b.a && (a ? a["X-WebChannel-Client-Profile"] = b.a : a = { "X-WebChannel-Client-Profile": b.a });this.a.S = a;(a = b && b.httpHeadersOverwriteParam) && !Ha(a) && (this.a.i = a);this.h = b && b.supportsCrossDomainXhr || !1;this.g = b && b.sendRawJson || !1;(b = b && b.httpSessionIdParam) && !Ha(b) && (this.a.v = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));this.f = new Z(this);
	  }y(Y, G);m = Y.prototype;m.addEventListener = function (a, b, c, d) {
	    Y.P.addEventListener.call(this, a, b, c, d);
	  };m.removeEventListener = function (a, b, c, d) {
	    Y.P.removeEventListener.call(this, a, b, c, d);
	  };
	  m.Qa = function () {
	    this.a.f = this.f;this.h && (this.a.C = !0);var a = this.a,
	        b = this.l,
	        c = this.b || void 0;M(0);a.ha = b;a.Y = c || {};a.I = a.V;a.B = Wc(a, null, a.ha);Zc(a);
	  };m.close = function () {
	    $c(this.a);
	  };m.Ra = function (a) {
	    if ("string" === typeof a) {
	      var b = {};b.__data__ = a;Yd(this.a, b);
	    } else this.g ? (b = {}, b.__data__ = Hb(a), Yd(this.a, b)) : Yd(this.a, a);
	  };m.H = function () {
	    this.a.f = null;delete this.f;$c(this.a);delete this.a;Y.P.H.call(this);
	  };
	  function fe(a) {
	    sc.call(this);var b = a.__sm__;if (b) {
	      a: {
	        for (var c in b) {
	          a = c;break a;
	        }a = void 0;
	      }(this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;
	    } else this.data = a;
	  }y(fe, sc);function ge() {
	    tc.call(this);this.status = 1;
	  }y(ge, tc);function Z(a) {
	    this.a = a;
	  }y(Z, de);Z.prototype.va = function () {
	    this.a.dispatchEvent("a");
	  };Z.prototype.ua = function (a) {
	    this.a.dispatchEvent(new fe(a));
	  };Z.prototype.ta = function (a) {
	    this.a.dispatchEvent(new ge(a));
	  };Z.prototype.sa = function () {
	    this.a.dispatchEvent("b");
	  }; /*
	     Copyright 2017 Google LLC
	     Licensed under the Apache License, Version 2.0 (the "License");
	     you may not use this file except in compliance with the License.
	     You may obtain a copy of the License at
	     http://www.apache.org/licenses/LICENSE-2.0
	     Unless required by applicable law or agreed to in writing, software
	     distributed under the License is distributed on an "AS IS" BASIS,
	     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     See the License for the specific language governing permissions and
	     limitations under the License.
	     */
	  ee.prototype.createWebChannel = ee.prototype.a;Y.prototype.send = Y.prototype.Ra;Y.prototype.open = Y.prototype.Qa;Y.prototype.close = Y.prototype.close;mc.NO_ERROR = 0;mc.TIMEOUT = 8;mc.HTTP_ERROR = 6;nc.COMPLETE = "complete";qc.EventType = rc;rc.OPEN = "a";rc.CLOSE = "b";rc.ERROR = "c";rc.MESSAGE = "d";G.prototype.listen = G.prototype.xa;X.prototype.listenOnce = X.prototype.ya;X.prototype.getLastError = X.prototype.Sa;X.prototype.getLastErrorCode = X.prototype.wa;X.prototype.getStatus = X.prototype.Z;X.prototype.getResponseJson = X.prototype.Pa;
	  X.prototype.getResponseText = X.prototype.ba;X.prototype.send = X.prototype.da;module.exports.createWebChannelTransport = function () {
	    return new ee();
	  };module.exports.ErrorCode = mc;module.exports.EventType = nc;module.exports.WebChannel = qc;module.exports.XhrIo = X;
	}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});

	//# sourceMappingURL=index.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function _typeof(obj) {
	  "@babel/helpers - typeof";
	  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
	    _typeof = function _typeof(obj) {
	      return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	    };
	  } else {
	    _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	    };
	  }return _typeof(obj);
	}

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _react = _interopRequireWildcard(__webpack_require__(1));

	var _propTypes = _interopRequireDefault(__webpack_require__(192));

	var _flatpickr = _interopRequireDefault(__webpack_require__(201));

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}

	function _getRequireWildcardCache() {
	  if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {
	    return cache;
	  };return cache;
	}

	function _interopRequireWildcard(obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  }if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
	    return { "default": obj };
	  }var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {
	    return cache.get(obj);
	  }var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) {
	      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {
	        Object.defineProperty(newObj, key, desc);
	      } else {
	        newObj[key] = obj[key];
	      }
	    }
	  }newObj["default"] = obj;if (cache) {
	    cache.set(obj, newObj);
	  }return newObj;
	}

	function _toConsumableArray(arr) {
	  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
	}

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}

	function _unsupportedIterableToArray(o, minLen) {
	  if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
	}

	function _iterableToArray(iter) {
	  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
	}

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
	}

	function _arrayLikeToArray(arr, len) {
	  if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {
	    arr2[i] = arr[i];
	  }return arr2;
	}

	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }return target;
	  };return _extends.apply(this, arguments);
	}

	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
	    }
	  }return target;
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
	  }return target;
	}

	function ownKeys(object, enumerableOnly) {
	  var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
	    var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {
	      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
	    });keys.push.apply(keys, symbols);
	  }return keys;
	}

	function _objectSpread(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {
	      ownKeys(Object(source), true).forEach(function (key) {
	        _defineProperty(target, key, source[key]);
	      });
	    } else if (Object.getOwnPropertyDescriptors) {
	      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
	    } else {
	      ownKeys(Object(source)).forEach(function (key) {
	        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
	      });
	    }
	  }return target;
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}

	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);
	}

	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;return o;
	  };return _setPrototypeOf(o, p);
	}

	function _createSuper(Derived) {
	  var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {
	    var Super = _getPrototypeOf(Derived),
	        result;if (hasNativeReflectConstruct) {
	      var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);
	    } else {
	      result = Super.apply(this, arguments);
	    }return _possibleConstructorReturn(this, result);
	  };
	}

	function _possibleConstructorReturn(self, call) {
	  if (call && (_typeof(call) === "object" || typeof call === "function")) {
	    return call;
	  }return _assertThisInitialized(self);
	}

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return self;
	}

	function _isNativeReflectConstruct() {
	  if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {
	    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;
	  } catch (e) {
	    return false;
	  }
	}

	function _getPrototypeOf(o) {
	  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };return _getPrototypeOf(o);
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	var hooks = ['onChange', 'onOpen', 'onClose', 'onMonthChange', 'onYearChange', 'onReady', 'onValueUpdate', 'onDayCreate'];

	var hookPropType = _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].arrayOf(_propTypes["default"].func)]);

	var callbacks = ['onCreate', 'onDestroy'];
	var callbackPropTypes = _propTypes["default"].func;

	var DateTimePicker = /*#__PURE__*/function (_Component) {
	  _inherits(DateTimePicker, _Component);

	  var _super = _createSuper(DateTimePicker);

	  function DateTimePicker() {
	    var _this;

	    _classCallCheck(this, DateTimePicker);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = _super.call.apply(_super, [this].concat(args));

	    _defineProperty(_assertThisInitialized(_this), "createFlatpickrInstance", function () {
	      var options = _objectSpread({
	        onClose: function onClose() {
	          _this.node.blur && _this.node.blur();
	        }
	      }, _this.props.options); // Add prop hooks to options


	      options = mergeHooks(options, _this.props);
	      _this.flatpickr = (0, _flatpickr["default"])(_this.node, options);

	      if (_this.props.hasOwnProperty('value')) {
	        _this.flatpickr.setDate(_this.props.value, false);
	      }

	      var onCreate = _this.props.onCreate;
	      if (onCreate) onCreate(_this.flatpickr);
	    });

	    _defineProperty(_assertThisInitialized(_this), "destroyFlatpickrInstance", function () {
	      var onDestroy = _this.props.onDestroy;
	      if (onDestroy) onDestroy(_this.flatpickr);

	      _this.flatpickr.destroy();

	      _this.flatpickr = null;
	    });

	    _defineProperty(_assertThisInitialized(_this), "handleNodeChange", function (node) {
	      _this.node = node;

	      if (_this.flatpickr) {
	        _this.destroyFlatpickrInstance();

	        _this.createFlatpickrInstance();
	      }
	    });

	    return _this;
	  }

	  _createClass(DateTimePicker, [{
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      var options = this.props.options;
	      var prevOptions = prevProps.options;
	      options = mergeHooks(options, this.props); // Add prev ones too so we can compare against them later

	      prevOptions = mergeHooks(prevOptions, prevProps);
	      var optionsKeys = Object.getOwnPropertyNames(options);

	      for (var index = optionsKeys.length - 1; index >= 0; index--) {
	        var key = optionsKeys[index];
	        var value = options[key];

	        if (value !== prevOptions[key]) {
	          // Hook handlers must be set as an array
	          if (hooks.indexOf(key) !== -1 && !Array.isArray(value)) {
	            value = [value];
	          }

	          this.flatpickr.set(key, value);
	        }
	      }

	      if (this.props.hasOwnProperty('value') && !(this.props.value && Array.isArray(this.props.value) && prevProps.value && Array.isArray(prevProps.value) && this.props.value.every(function (v, i) {
	        prevProps[i] === v;
	      })) && this.props.value !== prevProps.value) {
	        this.flatpickr.setDate(this.props.value, false);
	      }
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.createFlatpickrInstance();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.destroyFlatpickrInstance();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      // eslint-disable-next-line no-unused-vars
	      var _this$props = this.props,
	          options = _this$props.options,
	          defaultValue = _this$props.defaultValue,
	          value = _this$props.value,
	          children = _this$props.children,
	          render = _this$props.render,
	          props = _objectWithoutProperties(_this$props, ["options", "defaultValue", "value", "children", "render"]); // Don't pass hooks and callbacks to dom node


	      hooks.forEach(function (hook) {
	        delete props[hook];
	      });
	      callbacks.forEach(function (callback) {
	        delete props[callback];
	      });
	      if (render) return render(_objectSpread(_objectSpread({}, props), {}, {
	        defaultValue: defaultValue,
	        value: value
	      }), this.handleNodeChange);
	      return options.wrap ? /*#__PURE__*/_react["default"].createElement("div", _extends({}, props, {
	        ref: this.handleNodeChange
	      }), children) : /*#__PURE__*/_react["default"].createElement("input", _extends({}, props, {
	        defaultValue: defaultValue,
	        ref: this.handleNodeChange
	      }));
	    }
	  }]);

	  return DateTimePicker;
	}(_react.Component);

	_defineProperty(DateTimePicker, "propTypes", {
	  defaultValue: _propTypes["default"].string,
	  options: _propTypes["default"].object,
	  onChange: hookPropType,
	  onOpen: hookPropType,
	  onClose: hookPropType,
	  onMonthChange: hookPropType,
	  onYearChange: hookPropType,
	  onReady: hookPropType,
	  onValueUpdate: hookPropType,
	  onDayCreate: hookPropType,
	  onCreate: callbackPropTypes,
	  onDestroy: callbackPropTypes,
	  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].array, _propTypes["default"].object, _propTypes["default"].number]),
	  children: _propTypes["default"].node,
	  className: _propTypes["default"].string,
	  render: _propTypes["default"].func
	});

	_defineProperty(DateTimePicker, "defaultProps", {
	  options: {}
	});

	function mergeHooks(inputOptions, props) {
	  var options = _objectSpread({}, inputOptions);

	  hooks.forEach(function (hook) {
	    if (props.hasOwnProperty(hook)) {
	      var _options$hook;

	      if (options[hook] && !Array.isArray(options[hook])) {
	        options[hook] = [options[hook]];
	      } else if (!options[hook]) {
	        options[hook] = [];
	      }

	      var propHook = Array.isArray(props[hook]) ? props[hook] : [props[hook]];

	      (_options$hook = options[hook]).push.apply(_options$hook, _toConsumableArray(propHook));
	    }
	  });
	  return options;
	}

	var _default = DateTimePicker;
	exports["default"] = _default;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var ReactIs = __webpack_require__(193);

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(196)(ReactIs.isElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(200)();
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(194);
	} else {
	  module.exports = __webpack_require__(195);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 194 */
/***/ (function(module, exports) {

	/** @license React v16.13.1
	 * react-is.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var b = "function" === typeof Symbol && Symbol.for,
	    c = b ? Symbol.for("react.element") : 60103,
	    d = b ? Symbol.for("react.portal") : 60106,
	    e = b ? Symbol.for("react.fragment") : 60107,
	    f = b ? Symbol.for("react.strict_mode") : 60108,
	    g = b ? Symbol.for("react.profiler") : 60114,
	    h = b ? Symbol.for("react.provider") : 60109,
	    k = b ? Symbol.for("react.context") : 60110,
	    l = b ? Symbol.for("react.async_mode") : 60111,
	    m = b ? Symbol.for("react.concurrent_mode") : 60111,
	    n = b ? Symbol.for("react.forward_ref") : 60112,
	    p = b ? Symbol.for("react.suspense") : 60113,
	    q = b ? Symbol.for("react.suspense_list") : 60120,
	    r = b ? Symbol.for("react.memo") : 60115,
	    t = b ? Symbol.for("react.lazy") : 60116,
	    v = b ? Symbol.for("react.block") : 60121,
	    w = b ? Symbol.for("react.fundamental") : 60117,
	    x = b ? Symbol.for("react.responder") : 60118,
	    y = b ? Symbol.for("react.scope") : 60119;
	function z(a) {
	  if ("object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && null !== a) {
	    var u = a.$$typeof;switch (u) {case c:
	        switch (a = a.type, a) {case l:case m:case e:case g:case f:case p:
	            return a;default:
	            switch (a = a && a.$$typeof, a) {case k:case n:case t:case r:case h:
	                return a;default:
	                return u;}}case d:
	        return u;}
	  }
	}function A(a) {
	  return z(a) === m;
	}exports.AsyncMode = l;exports.ConcurrentMode = m;exports.ContextConsumer = k;exports.ContextProvider = h;exports.Element = c;exports.ForwardRef = n;exports.Fragment = e;exports.Lazy = t;exports.Memo = r;exports.Portal = d;
	exports.Profiler = g;exports.StrictMode = f;exports.Suspense = p;exports.isAsyncMode = function (a) {
	  return A(a) || z(a) === l;
	};exports.isConcurrentMode = A;exports.isContextConsumer = function (a) {
	  return z(a) === k;
	};exports.isContextProvider = function (a) {
	  return z(a) === h;
	};exports.isElement = function (a) {
	  return "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && null !== a && a.$$typeof === c;
	};exports.isForwardRef = function (a) {
	  return z(a) === n;
	};exports.isFragment = function (a) {
	  return z(a) === e;
	};exports.isLazy = function (a) {
	  return z(a) === t;
	};
	exports.isMemo = function (a) {
	  return z(a) === r;
	};exports.isPortal = function (a) {
	  return z(a) === d;
	};exports.isProfiler = function (a) {
	  return z(a) === g;
	};exports.isStrictMode = function (a) {
	  return z(a) === f;
	};exports.isSuspense = function (a) {
	  return z(a) === p;
	};
	exports.isValidElementType = function (a) {
	  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
	};exports.typeOf = z;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.13.1
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	if (process.env.NODE_ENV !== "production") {
	  (function () {
	    'use strict';

	    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	    // nor polyfill, then a plain number is used for performance.

	    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
	    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
	    // (unstable) APIs that have been removed. Can we remove the symbols?

	    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
	    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
	    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
	    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
	    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
	    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

	    function isValidElementType(type) {
	      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
	    }

	    function typeOf(object) {
	      if ((typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null) {
	        var $$typeof = object.$$typeof;

	        switch ($$typeof) {
	          case REACT_ELEMENT_TYPE:
	            var type = object.type;

	            switch (type) {
	              case REACT_ASYNC_MODE_TYPE:
	              case REACT_CONCURRENT_MODE_TYPE:
	              case REACT_FRAGMENT_TYPE:
	              case REACT_PROFILER_TYPE:
	              case REACT_STRICT_MODE_TYPE:
	              case REACT_SUSPENSE_TYPE:
	                return type;

	              default:
	                var $$typeofType = type && type.$$typeof;

	                switch ($$typeofType) {
	                  case REACT_CONTEXT_TYPE:
	                  case REACT_FORWARD_REF_TYPE:
	                  case REACT_LAZY_TYPE:
	                  case REACT_MEMO_TYPE:
	                  case REACT_PROVIDER_TYPE:
	                    return $$typeofType;

	                  default:
	                    return $$typeof;
	                }

	            }

	          case REACT_PORTAL_TYPE:
	            return $$typeof;
	        }
	      }

	      return undefined;
	    } // AsyncMode is deprecated along with isAsyncMode

	    var AsyncMode = REACT_ASYNC_MODE_TYPE;
	    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	    var ContextConsumer = REACT_CONTEXT_TYPE;
	    var ContextProvider = REACT_PROVIDER_TYPE;
	    var Element = REACT_ELEMENT_TYPE;
	    var ForwardRef = REACT_FORWARD_REF_TYPE;
	    var Fragment = REACT_FRAGMENT_TYPE;
	    var Lazy = REACT_LAZY_TYPE;
	    var Memo = REACT_MEMO_TYPE;
	    var Portal = REACT_PORTAL_TYPE;
	    var Profiler = REACT_PROFILER_TYPE;
	    var StrictMode = REACT_STRICT_MODE_TYPE;
	    var Suspense = REACT_SUSPENSE_TYPE;
	    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

	    function isAsyncMode(object) {
	      {
	        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
	        }
	      }

	      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
	    }
	    function isConcurrentMode(object) {
	      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
	    }
	    function isContextConsumer(object) {
	      return typeOf(object) === REACT_CONTEXT_TYPE;
	    }
	    function isContextProvider(object) {
	      return typeOf(object) === REACT_PROVIDER_TYPE;
	    }
	    function isElement(object) {
	      return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	    }
	    function isForwardRef(object) {
	      return typeOf(object) === REACT_FORWARD_REF_TYPE;
	    }
	    function isFragment(object) {
	      return typeOf(object) === REACT_FRAGMENT_TYPE;
	    }
	    function isLazy(object) {
	      return typeOf(object) === REACT_LAZY_TYPE;
	    }
	    function isMemo(object) {
	      return typeOf(object) === REACT_MEMO_TYPE;
	    }
	    function isPortal(object) {
	      return typeOf(object) === REACT_PORTAL_TYPE;
	    }
	    function isProfiler(object) {
	      return typeOf(object) === REACT_PROFILER_TYPE;
	    }
	    function isStrictMode(object) {
	      return typeOf(object) === REACT_STRICT_MODE_TYPE;
	    }
	    function isSuspense(object) {
	      return typeOf(object) === REACT_SUSPENSE_TYPE;
	    }

	    exports.AsyncMode = AsyncMode;
	    exports.ConcurrentMode = ConcurrentMode;
	    exports.ContextConsumer = ContextConsumer;
	    exports.ContextProvider = ContextProvider;
	    exports.Element = Element;
	    exports.ForwardRef = ForwardRef;
	    exports.Fragment = Fragment;
	    exports.Lazy = Lazy;
	    exports.Memo = Memo;
	    exports.Portal = Portal;
	    exports.Profiler = Profiler;
	    exports.StrictMode = StrictMode;
	    exports.Suspense = Suspense;
	    exports.isAsyncMode = isAsyncMode;
	    exports.isConcurrentMode = isConcurrentMode;
	    exports.isContextConsumer = isContextConsumer;
	    exports.isContextProvider = isContextProvider;
	    exports.isElement = isElement;
	    exports.isForwardRef = isForwardRef;
	    exports.isFragment = isFragment;
	    exports.isLazy = isLazy;
	    exports.isMemo = isMemo;
	    exports.isPortal = isPortal;
	    exports.isProfiler = isProfiler;
	    exports.isStrictMode = isStrictMode;
	    exports.isSuspense = isSuspense;
	    exports.isValidElementType = isValidElementType;
	    exports.typeOf = typeOf;
	  })();
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var ReactIs = __webpack_require__(193);
	var assign = __webpack_require__(4);

	var ReactPropTypesSecret = __webpack_require__(197);
	var has = __webpack_require__(198);
	var checkPropTypes = __webpack_require__(199);

	var printWarning = function printWarning() {};

	if (process.env.NODE_ENV !== 'production') {
	  printWarning = function printWarning(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	function emptyFunctionThatReturnsNull() {
	  return null;
	}

	module.exports = function (isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bigint: createPrimitiveTypeChecker('bigint'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    elementType: createElementTypeTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message, data) {
	    this.message = message;
	    this.data = data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' ? data : {};
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (!manualPropTypeCallCache[cacheKey] &&
	          // Avoid spamming the console because they are often not actionable except for lib authors
	          manualPropTypeWarningCount < 3) {
	            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), { expectedType: expectedType });
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!ReactIs.isValidElementType(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (arguments.length > 1) {
	          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
	        } else {
	          printWarning('Invalid argument supplied to oneOf, expected an array.');
	        }
	      }
	      return emptyFunctionThatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
	        var type = getPreciseType(value);
	        if (type === 'symbol') {
	          return String(value);
	        }
	        return value;
	      });
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (has(propValue, key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunctionThatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
	        return emptyFunctionThatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var expectedTypes = [];
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
	        if (checkerResult == null) {
	          return null;
	        }
	        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
	          expectedTypes.push(checkerResult.data.expectedType);
	        }
	      }
	      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function invalidValidatorError(componentName, location, propFullName, key, type) {
	    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (has(shapeTypes, key) && typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        if (!checker) {
	          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // falsy value can't be a Symbol
	    if (!propValue) {
	      return false;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 197 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 198 */
/***/ (function(module, exports) {

	"use strict";

	module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var printWarning = function printWarning() {};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactPropTypesSecret = __webpack_require__(197);
	  var loggedTypeFailures = {};
	  var has = __webpack_require__(198);

	  printWarning = function printWarning(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {/**/}
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (has(typeSpecs, typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + _typeof(typeSpecs[typeSpecName]) + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + (typeof error === 'undefined' ? 'undefined' : _typeof(error)) + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
	        }
	      }
	    }
	  }
	}

	/**
	 * Resets warning cache when testing.
	 *
	 * @private
	 */
	checkPropTypes.resetWarningCache = function () {
	  if (process.env.NODE_ENV !== 'production') {
	    loggedTypeFailures = {};
	  }
	};

	module.exports = checkPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = __webpack_require__(197);

	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;

	module.exports = function () {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
	    err.name = 'Invariant Violation';
	    throw err;
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bigint: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,

	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };

	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/* flatpickr v4.6.13, @license MIT */
	(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.flatpickr = factory());
	})(undefined, function () {
	    'use strict';

	    /*! *****************************************************************************
	    Copyright (c) Microsoft Corporation.
	      Permission to use, copy, modify, and/or distribute this software for any
	    purpose with or without fee is hereby granted.
	      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
	    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
	    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
	    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
	    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
	    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
	    PERFORMANCE OF THIS SOFTWARE.
	    ***************************************************************************** */

	    var _assign = function __assign() {
	        _assign = Object.assign || function __assign(t) {
	            for (var s, i = 1, n = arguments.length; i < n; i++) {
	                s = arguments[i];
	                for (var p in s) {
	                    if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	                }
	            }
	            return t;
	        };
	        return _assign.apply(this, arguments);
	    };

	    function __spreadArrays() {
	        for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
	            s += arguments[i].length;
	        }for (var r = Array(s), k = 0, i = 0; i < il; i++) {
	            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
	                r[k] = a[j];
	            }
	        }return r;
	    }

	    var HOOKS = ["onChange", "onClose", "onDayCreate", "onDestroy", "onKeyDown", "onMonthChange", "onOpen", "onParseConfig", "onReady", "onValueUpdate", "onYearChange", "onPreCalendarPosition"];
	    var defaults = {
	        _disable: [],
	        allowInput: false,
	        allowInvalidPreload: false,
	        altFormat: "F j, Y",
	        altInput: false,
	        altInputClass: "form-control input",
	        animate: (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === "object" && window.navigator.userAgent.indexOf("MSIE") === -1,
	        ariaDateFormat: "F j, Y",
	        autoFillDefaultTime: true,
	        clickOpens: true,
	        closeOnSelect: true,
	        conjunction: ", ",
	        dateFormat: "Y-m-d",
	        defaultHour: 12,
	        defaultMinute: 0,
	        defaultSeconds: 0,
	        disable: [],
	        disableMobile: false,
	        enableSeconds: false,
	        enableTime: false,
	        errorHandler: function errorHandler(err) {
	            return typeof console !== "undefined" && console.warn(err);
	        },
	        getWeek: function getWeek(givenDate) {
	            var date = new Date(givenDate.getTime());
	            date.setHours(0, 0, 0, 0);
	            // Thursday in current week decides the year.
	            date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
	            // January 4 is always in week 1.
	            var week1 = new Date(date.getFullYear(), 0, 4);
	            // Adjust to Thursday in week 1 and count number of weeks from date to week1.
	            return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
	        },
	        hourIncrement: 1,
	        ignoredFocusElements: [],
	        inline: false,
	        locale: "default",
	        minuteIncrement: 5,
	        mode: "single",
	        monthSelectorType: "dropdown",
	        nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
	        noCalendar: false,
	        now: new Date(),
	        onChange: [],
	        onClose: [],
	        onDayCreate: [],
	        onDestroy: [],
	        onKeyDown: [],
	        onMonthChange: [],
	        onOpen: [],
	        onParseConfig: [],
	        onReady: [],
	        onValueUpdate: [],
	        onYearChange: [],
	        onPreCalendarPosition: [],
	        plugins: [],
	        position: "auto",
	        positionElement: undefined,
	        prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
	        shorthandCurrentMonth: false,
	        showMonths: 1,
	        static: false,
	        time_24hr: false,
	        weekNumbers: false,
	        wrap: false
	    };

	    var english = {
	        weekdays: {
	            shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	            longhand: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
	        },
	        months: {
	            shorthand: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
	            longhand: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
	        },
	        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
	        firstDayOfWeek: 0,
	        ordinal: function ordinal(nth) {
	            var s = nth % 100;
	            if (s > 3 && s < 21) return "th";
	            switch (s % 10) {
	                case 1:
	                    return "st";
	                case 2:
	                    return "nd";
	                case 3:
	                    return "rd";
	                default:
	                    return "th";
	            }
	        },
	        rangeSeparator: " to ",
	        weekAbbreviation: "Wk",
	        scrollTitle: "Scroll to increment",
	        toggleTitle: "Click to toggle",
	        amPM: ["AM", "PM"],
	        yearAriaLabel: "Year",
	        monthAriaLabel: "Month",
	        hourAriaLabel: "Hour",
	        minuteAriaLabel: "Minute",
	        time_24hr: false
	    };

	    var pad = function pad(number, length) {
	        if (length === void 0) {
	            length = 2;
	        }
	        return ("000" + number).slice(length * -1);
	    };
	    var int = function int(bool) {
	        return bool === true ? 1 : 0;
	    };
	    /* istanbul ignore next */
	    function debounce(fn, wait) {
	        var t;
	        return function () {
	            var _this = this;
	            var args = arguments;
	            clearTimeout(t);
	            t = setTimeout(function () {
	                return fn.apply(_this, args);
	            }, wait);
	        };
	    }
	    var arrayify = function arrayify(obj) {
	        return obj instanceof Array ? obj : [obj];
	    };

	    function toggleClass(elem, className, bool) {
	        if (bool === true) return elem.classList.add(className);
	        elem.classList.remove(className);
	    }
	    function createElement(tag, className, content) {
	        var e = window.document.createElement(tag);
	        className = className || "";
	        content = content || "";
	        e.className = className;
	        if (content !== undefined) e.textContent = content;
	        return e;
	    }
	    function clearNode(node) {
	        while (node.firstChild) {
	            node.removeChild(node.firstChild);
	        }
	    }
	    function findParent(node, condition) {
	        if (condition(node)) return node;else if (node.parentNode) return findParent(node.parentNode, condition);
	        return undefined; // nothing found
	    }
	    function createNumberInput(inputClassName, opts) {
	        var wrapper = createElement("div", "numInputWrapper"),
	            numInput = createElement("input", "numInput " + inputClassName),
	            arrowUp = createElement("span", "arrowUp"),
	            arrowDown = createElement("span", "arrowDown");
	        if (navigator.userAgent.indexOf("MSIE 9.0") === -1) {
	            numInput.type = "number";
	        } else {
	            numInput.type = "text";
	            numInput.pattern = "\\d*";
	        }
	        if (opts !== undefined) for (var key in opts) {
	            numInput.setAttribute(key, opts[key]);
	        }wrapper.appendChild(numInput);
	        wrapper.appendChild(arrowUp);
	        wrapper.appendChild(arrowDown);
	        return wrapper;
	    }
	    function getEventTarget(event) {
	        try {
	            if (typeof event.composedPath === "function") {
	                var path = event.composedPath();
	                return path[0];
	            }
	            return event.target;
	        } catch (error) {
	            return event.target;
	        }
	    }

	    var doNothing = function doNothing() {
	        return undefined;
	    };
	    var monthToStr = function monthToStr(monthNumber, shorthand, locale) {
	        return locale.months[shorthand ? "shorthand" : "longhand"][monthNumber];
	    };
	    var revFormat = {
	        D: doNothing,
	        F: function F(dateObj, monthName, locale) {
	            dateObj.setMonth(locale.months.longhand.indexOf(monthName));
	        },
	        G: function G(dateObj, hour) {
	            dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));
	        },
	        H: function H(dateObj, hour) {
	            dateObj.setHours(parseFloat(hour));
	        },
	        J: function J(dateObj, day) {
	            dateObj.setDate(parseFloat(day));
	        },
	        K: function K(dateObj, amPM, locale) {
	            dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], "i").test(amPM)));
	        },
	        M: function M(dateObj, shortMonth, locale) {
	            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));
	        },
	        S: function S(dateObj, seconds) {
	            dateObj.setSeconds(parseFloat(seconds));
	        },
	        U: function U(_, unixSeconds) {
	            return new Date(parseFloat(unixSeconds) * 1000);
	        },
	        W: function W(dateObj, weekNum, locale) {
	            var weekNumber = parseInt(weekNum);
	            var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
	            date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);
	            return date;
	        },
	        Y: function Y(dateObj, year) {
	            dateObj.setFullYear(parseFloat(year));
	        },
	        Z: function Z(_, ISODate) {
	            return new Date(ISODate);
	        },
	        d: function d(dateObj, day) {
	            dateObj.setDate(parseFloat(day));
	        },
	        h: function h(dateObj, hour) {
	            dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));
	        },
	        i: function i(dateObj, minutes) {
	            dateObj.setMinutes(parseFloat(minutes));
	        },
	        j: function j(dateObj, day) {
	            dateObj.setDate(parseFloat(day));
	        },
	        l: doNothing,
	        m: function m(dateObj, month) {
	            dateObj.setMonth(parseFloat(month) - 1);
	        },
	        n: function n(dateObj, month) {
	            dateObj.setMonth(parseFloat(month) - 1);
	        },
	        s: function s(dateObj, seconds) {
	            dateObj.setSeconds(parseFloat(seconds));
	        },
	        u: function u(_, unixMillSeconds) {
	            return new Date(parseFloat(unixMillSeconds));
	        },
	        w: doNothing,
	        y: function y(dateObj, year) {
	            dateObj.setFullYear(2000 + parseFloat(year));
	        }
	    };
	    var tokenRegex = {
	        D: "",
	        F: "",
	        G: "(\\d\\d|\\d)",
	        H: "(\\d\\d|\\d)",
	        J: "(\\d\\d|\\d)\\w+",
	        K: "",
	        M: "",
	        S: "(\\d\\d|\\d)",
	        U: "(.+)",
	        W: "(\\d\\d|\\d)",
	        Y: "(\\d{4})",
	        Z: "(.+)",
	        d: "(\\d\\d|\\d)",
	        h: "(\\d\\d|\\d)",
	        i: "(\\d\\d|\\d)",
	        j: "(\\d\\d|\\d)",
	        l: "",
	        m: "(\\d\\d|\\d)",
	        n: "(\\d\\d|\\d)",
	        s: "(\\d\\d|\\d)",
	        u: "(.+)",
	        w: "(\\d\\d|\\d)",
	        y: "(\\d{2})"
	    };
	    var formats = {
	        // get the date in UTC
	        Z: function Z(date) {
	            return date.toISOString();
	        },
	        // weekday name, short, e.g. Thu
	        D: function D(date, locale, options) {
	            return locale.weekdays.shorthand[formats.w(date, locale, options)];
	        },
	        // full month name e.g. January
	        F: function F(date, locale, options) {
	            return monthToStr(formats.n(date, locale, options) - 1, false, locale);
	        },
	        // padded hour 1-12
	        G: function G(date, locale, options) {
	            return pad(formats.h(date, locale, options));
	        },
	        // hours with leading zero e.g. 03
	        H: function H(date) {
	            return pad(date.getHours());
	        },
	        // day (1-30) with ordinal suffix e.g. 1st, 2nd
	        J: function J(date, locale) {
	            return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();
	        },
	        // AM/PM
	        K: function K(date, locale) {
	            return locale.amPM[int(date.getHours() > 11)];
	        },
	        // shorthand month e.g. Jan, Sep, Oct, etc
	        M: function M(date, locale) {
	            return monthToStr(date.getMonth(), true, locale);
	        },
	        // seconds 00-59
	        S: function S(date) {
	            return pad(date.getSeconds());
	        },
	        // unix timestamp
	        U: function U(date) {
	            return date.getTime() / 1000;
	        },
	        W: function W(date, _, options) {
	            return options.getWeek(date);
	        },
	        // full year e.g. 2016, padded (0001-9999)
	        Y: function Y(date) {
	            return pad(date.getFullYear(), 4);
	        },
	        // day in month, padded (01-30)
	        d: function d(date) {
	            return pad(date.getDate());
	        },
	        // hour from 1-12 (am/pm)
	        h: function h(date) {
	            return date.getHours() % 12 ? date.getHours() % 12 : 12;
	        },
	        // minutes, padded with leading zero e.g. 09
	        i: function i(date) {
	            return pad(date.getMinutes());
	        },
	        // day in month (1-30)
	        j: function j(date) {
	            return date.getDate();
	        },
	        // weekday name, full, e.g. Thursday
	        l: function l(date, locale) {
	            return locale.weekdays.longhand[date.getDay()];
	        },
	        // padded month number (01-12)
	        m: function m(date) {
	            return pad(date.getMonth() + 1);
	        },
	        // the month number (1-12)
	        n: function n(date) {
	            return date.getMonth() + 1;
	        },
	        // seconds 0-59
	        s: function s(date) {
	            return date.getSeconds();
	        },
	        // Unix Milliseconds
	        u: function u(date) {
	            return date.getTime();
	        },
	        // number of the day of the week
	        w: function w(date) {
	            return date.getDay();
	        },
	        // last two digits of year e.g. 16 for 2016
	        y: function y(date) {
	            return String(date.getFullYear()).substring(2);
	        }
	    };

	    var createDateFormatter = function createDateFormatter(_a) {
	        var _b = _a.config,
	            config = _b === void 0 ? defaults : _b,
	            _c = _a.l10n,
	            l10n = _c === void 0 ? english : _c,
	            _d = _a.isMobile,
	            isMobile = _d === void 0 ? false : _d;
	        return function (dateObj, frmt, overrideLocale) {
	            var locale = overrideLocale || l10n;
	            if (config.formatDate !== undefined && !isMobile) {
	                return config.formatDate(dateObj, frmt, locale);
	            }
	            return frmt.split("").map(function (c, i, arr) {
	                return formats[c] && arr[i - 1] !== "\\" ? formats[c](dateObj, locale, config) : c !== "\\" ? c : "";
	            }).join("");
	        };
	    };
	    var createDateParser = function createDateParser(_a) {
	        var _b = _a.config,
	            config = _b === void 0 ? defaults : _b,
	            _c = _a.l10n,
	            l10n = _c === void 0 ? english : _c;
	        return function (date, givenFormat, timeless, customLocale) {
	            if (date !== 0 && !date) return undefined;
	            var locale = customLocale || l10n;
	            var parsedDate;
	            var dateOrig = date;
	            if (date instanceof Date) parsedDate = new Date(date.getTime());else if (typeof date !== "string" && date.toFixed !== undefined // timestamp
	            )
	                // create a copy
	                parsedDate = new Date(date);else if (typeof date === "string") {
	                // date string
	                var format = givenFormat || (config || defaults).dateFormat;
	                var datestr = String(date).trim();
	                if (datestr === "today") {
	                    parsedDate = new Date();
	                    timeless = true;
	                } else if (config && config.parseDate) {
	                    parsedDate = config.parseDate(date, format);
	                } else if (/Z$/.test(datestr) || /GMT$/.test(datestr) // datestrings w/ timezone
	                ) {
	                        parsedDate = new Date(date);
	                    } else {
	                    var matched = void 0,
	                        ops = [];
	                    for (var i = 0, matchIndex = 0, regexStr = ""; i < format.length; i++) {
	                        var token_1 = format[i];
	                        var isBackSlash = token_1 === "\\";
	                        var escaped = format[i - 1] === "\\" || isBackSlash;
	                        if (tokenRegex[token_1] && !escaped) {
	                            regexStr += tokenRegex[token_1];
	                            var match = new RegExp(regexStr).exec(date);
	                            if (match && (matched = true)) {
	                                ops[token_1 !== "Y" ? "push" : "unshift"]({
	                                    fn: revFormat[token_1],
	                                    val: match[++matchIndex]
	                                });
	                            }
	                        } else if (!isBackSlash) regexStr += "."; // don't really care
	                    }
	                    parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));
	                    ops.forEach(function (_a) {
	                        var fn = _a.fn,
	                            val = _a.val;
	                        return parsedDate = fn(parsedDate, val, locale) || parsedDate;
	                    });
	                    parsedDate = matched ? parsedDate : undefined;
	                }
	            }
	            /* istanbul ignore next */
	            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
	                config.errorHandler(new Error("Invalid date provided: " + dateOrig));
	                return undefined;
	            }
	            if (timeless === true) parsedDate.setHours(0, 0, 0, 0);
	            return parsedDate;
	        };
	    };
	    /**
	     * Compute the difference in dates, measured in ms
	     */
	    function compareDates(date1, date2, timeless) {
	        if (timeless === void 0) {
	            timeless = true;
	        }
	        if (timeless !== false) {
	            return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);
	        }
	        return date1.getTime() - date2.getTime();
	    }
	    var isBetween = function isBetween(ts, ts1, ts2) {
	        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);
	    };
	    var calculateSecondsSinceMidnight = function calculateSecondsSinceMidnight(hours, minutes, seconds) {
	        return hours * 3600 + minutes * 60 + seconds;
	    };
	    var parseSeconds = function parseSeconds(secondsSinceMidnight) {
	        var hours = Math.floor(secondsSinceMidnight / 3600),
	            minutes = (secondsSinceMidnight - hours * 3600) / 60;
	        return [hours, minutes, secondsSinceMidnight - hours * 3600 - minutes * 60];
	    };
	    var duration = {
	        DAY: 86400000
	    };
	    function getDefaultHours(config) {
	        var hours = config.defaultHour;
	        var minutes = config.defaultMinute;
	        var seconds = config.defaultSeconds;
	        if (config.minDate !== undefined) {
	            var minHour = config.minDate.getHours();
	            var minMinutes = config.minDate.getMinutes();
	            var minSeconds = config.minDate.getSeconds();
	            if (hours < minHour) {
	                hours = minHour;
	            }
	            if (hours === minHour && minutes < minMinutes) {
	                minutes = minMinutes;
	            }
	            if (hours === minHour && minutes === minMinutes && seconds < minSeconds) seconds = config.minDate.getSeconds();
	        }
	        if (config.maxDate !== undefined) {
	            var maxHr = config.maxDate.getHours();
	            var maxMinutes = config.maxDate.getMinutes();
	            hours = Math.min(hours, maxHr);
	            if (hours === maxHr) minutes = Math.min(maxMinutes, minutes);
	            if (hours === maxHr && minutes === maxMinutes) seconds = config.maxDate.getSeconds();
	        }
	        return { hours: hours, minutes: minutes, seconds: seconds };
	    }

	    if (typeof Object.assign !== "function") {
	        Object.assign = function (target) {
	            var args = [];
	            for (var _i = 1; _i < arguments.length; _i++) {
	                args[_i - 1] = arguments[_i];
	            }
	            if (!target) {
	                throw TypeError("Cannot convert undefined or null to object");
	            }
	            var _loop_1 = function _loop_1(source) {
	                if (source) {
	                    Object.keys(source).forEach(function (key) {
	                        return target[key] = source[key];
	                    });
	                }
	            };
	            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
	                var source = args_1[_a];
	                _loop_1(source);
	            }
	            return target;
	        };
	    }

	    var DEBOUNCED_CHANGE_MS = 300;
	    function FlatpickrInstance(element, instanceConfig) {
	        var self = {
	            config: _assign(_assign({}, defaults), flatpickr.defaultConfig),
	            l10n: english
	        };
	        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });
	        self._handlers = [];
	        self.pluginElements = [];
	        self.loadedPlugins = [];
	        self._bind = bind;
	        self._setHoursFromDate = setHoursFromDate;
	        self._positionCalendar = positionCalendar;
	        self.changeMonth = changeMonth;
	        self.changeYear = changeYear;
	        self.clear = clear;
	        self.close = close;
	        self.onMouseOver = onMouseOver;
	        self._createElement = createElement;
	        self.createDay = createDay;
	        self.destroy = destroy;
	        self.isEnabled = isEnabled;
	        self.jumpToDate = jumpToDate;
	        self.updateValue = updateValue;
	        self.open = open;
	        self.redraw = redraw;
	        self.set = set;
	        self.setDate = setDate;
	        self.toggle = toggle;
	        function setupHelperFunctions() {
	            self.utils = {
	                getDaysInMonth: function getDaysInMonth(month, yr) {
	                    if (month === void 0) {
	                        month = self.currentMonth;
	                    }
	                    if (yr === void 0) {
	                        yr = self.currentYear;
	                    }
	                    if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0)) return 29;
	                    return self.l10n.daysInMonth[month];
	                }
	            };
	        }
	        function init() {
	            self.element = self.input = element;
	            self.isOpen = false;
	            parseConfig();
	            setupLocale();
	            setupInputs();
	            setupDates();
	            setupHelperFunctions();
	            if (!self.isMobile) build();
	            bindEvents();
	            if (self.selectedDates.length || self.config.noCalendar) {
	                if (self.config.enableTime) {
	                    setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);
	                }
	                updateValue(false);
	            }
	            setCalendarWidth();
	            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
	            /* TODO: investigate this further
	                       Currently, there is weird positioning behavior in safari causing pages
	              to scroll up. https://github.com/chmln/flatpickr/issues/563
	                       However, most browsers are not Safari and positioning is expensive when used
	              in scale. https://github.com/chmln/flatpickr/issues/1096
	            */
	            if (!self.isMobile && isSafari) {
	                positionCalendar();
	            }
	            triggerEvent("onReady");
	        }
	        function getClosestActiveElement() {
	            var _a;
	            return ((_a = self.calendarContainer) === null || _a === void 0 ? void 0 : _a.getRootNode()).activeElement || document.activeElement;
	        }
	        function bindToInstance(fn) {
	            return fn.bind(self);
	        }
	        function setCalendarWidth() {
	            var config = self.config;
	            if (config.weekNumbers === false && config.showMonths === 1) {
	                return;
	            } else if (config.noCalendar !== true) {
	                window.requestAnimationFrame(function () {
	                    if (self.calendarContainer !== undefined) {
	                        self.calendarContainer.style.visibility = "hidden";
	                        self.calendarContainer.style.display = "block";
	                    }
	                    if (self.daysContainer !== undefined) {
	                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;
	                        self.daysContainer.style.width = daysWidth + "px";
	                        self.calendarContainer.style.width = daysWidth + (self.weekWrapper !== undefined ? self.weekWrapper.offsetWidth : 0) + "px";
	                        self.calendarContainer.style.removeProperty("visibility");
	                        self.calendarContainer.style.removeProperty("display");
	                    }
	                });
	            }
	        }
	        /**
	         * The handler for all events targeting the time inputs
	         */
	        function updateTime(e) {
	            if (self.selectedDates.length === 0) {
	                var defaultDate = self.config.minDate === undefined || compareDates(new Date(), self.config.minDate) >= 0 ? new Date() : new Date(self.config.minDate.getTime());
	                var defaults = getDefaultHours(self.config);
	                defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());
	                self.selectedDates = [defaultDate];
	                self.latestSelectedDateObj = defaultDate;
	            }
	            if (e !== undefined && e.type !== "blur") {
	                timeWrapper(e);
	            }
	            var prevValue = self._input.value;
	            setHoursFromInputs();
	            updateValue();
	            if (self._input.value !== prevValue) {
	                self._debouncedChange();
	            }
	        }
	        function ampm2military(hour, amPM) {
	            return hour % 12 + 12 * int(amPM === self.l10n.amPM[1]);
	        }
	        function military2ampm(hour) {
	            switch (hour % 24) {
	                case 0:
	                case 12:
	                    return 12;
	                default:
	                    return hour % 12;
	            }
	        }
	        /**
	         * Syncs the selected date object time with user's time input
	         */
	        function setHoursFromInputs() {
	            if (self.hourElement === undefined || self.minuteElement === undefined) return;
	            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24,
	                minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60,
	                seconds = self.secondElement !== undefined ? (parseInt(self.secondElement.value, 10) || 0) % 60 : 0;
	            if (self.amPM !== undefined) {
	                hours = ampm2military(hours, self.amPM.textContent);
	            }
	            var limitMinHours = self.config.minTime !== undefined || self.config.minDate && self.minDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.minDate, true) === 0;
	            var limitMaxHours = self.config.maxTime !== undefined || self.config.maxDate && self.maxDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.maxDate, true) === 0;
	            if (self.config.maxTime !== undefined && self.config.minTime !== undefined && self.config.minTime > self.config.maxTime) {
	                var minBound = calculateSecondsSinceMidnight(self.config.minTime.getHours(), self.config.minTime.getMinutes(), self.config.minTime.getSeconds());
	                var maxBound = calculateSecondsSinceMidnight(self.config.maxTime.getHours(), self.config.maxTime.getMinutes(), self.config.maxTime.getSeconds());
	                var currentTime = calculateSecondsSinceMidnight(hours, minutes, seconds);
	                if (currentTime > maxBound && currentTime < minBound) {
	                    var result = parseSeconds(minBound);
	                    hours = result[0];
	                    minutes = result[1];
	                    seconds = result[2];
	                }
	            } else {
	                if (limitMaxHours) {
	                    var maxTime = self.config.maxTime !== undefined ? self.config.maxTime : self.config.maxDate;
	                    hours = Math.min(hours, maxTime.getHours());
	                    if (hours === maxTime.getHours()) minutes = Math.min(minutes, maxTime.getMinutes());
	                    if (minutes === maxTime.getMinutes()) seconds = Math.min(seconds, maxTime.getSeconds());
	                }
	                if (limitMinHours) {
	                    var minTime = self.config.minTime !== undefined ? self.config.minTime : self.config.minDate;
	                    hours = Math.max(hours, minTime.getHours());
	                    if (hours === minTime.getHours() && minutes < minTime.getMinutes()) minutes = minTime.getMinutes();
	                    if (minutes === minTime.getMinutes()) seconds = Math.max(seconds, minTime.getSeconds());
	                }
	            }
	            setHours(hours, minutes, seconds);
	        }
	        /**
	         * Syncs time input values with a date
	         */
	        function setHoursFromDate(dateObj) {
	            var date = dateObj || self.latestSelectedDateObj;
	            if (date && date instanceof Date) {
	                setHours(date.getHours(), date.getMinutes(), date.getSeconds());
	            }
	        }
	        /**
	         * Sets the hours, minutes, and optionally seconds
	         * of the latest selected date object and the
	         * corresponding time inputs
	         * @param {Number} hours the hour. whether its military
	         *                 or am-pm gets inferred from config
	         * @param {Number} minutes the minutes
	         * @param {Number} seconds the seconds (optional)
	         */
	        function setHours(hours, minutes, seconds) {
	            if (self.latestSelectedDateObj !== undefined) {
	                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);
	            }
	            if (!self.hourElement || !self.minuteElement || self.isMobile) return;
	            self.hourElement.value = pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * int(hours % 12 === 0) : hours);
	            self.minuteElement.value = pad(minutes);
	            if (self.amPM !== undefined) self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];
	            if (self.secondElement !== undefined) self.secondElement.value = pad(seconds);
	        }
	        /**
	         * Handles the year input and incrementing events
	         * @param {Event} event the keyup or increment event
	         */
	        function onYearInput(event) {
	            var eventTarget = getEventTarget(event);
	            var year = parseInt(eventTarget.value) + (event.delta || 0);
	            if (year / 1000 > 1 || event.key === "Enter" && !/[^\d]/.test(year.toString())) {
	                changeYear(year);
	            }
	        }
	        /**
	         * Essentially addEventListener + tracking
	         * @param {Element} element the element to addEventListener to
	         * @param {String} event the event name
	         * @param {Function} handler the event handler
	         */
	        function bind(element, event, handler, options) {
	            if (event instanceof Array) return event.forEach(function (ev) {
	                return bind(element, ev, handler, options);
	            });
	            if (element instanceof Array) return element.forEach(function (el) {
	                return bind(el, event, handler, options);
	            });
	            element.addEventListener(event, handler, options);
	            self._handlers.push({
	                remove: function remove() {
	                    return element.removeEventListener(event, handler, options);
	                }
	            });
	        }
	        function triggerChange() {
	            triggerEvent("onChange");
	        }
	        /**
	         * Adds all the necessary event listeners
	         */
	        function bindEvents() {
	            if (self.config.wrap) {
	                ["open", "close", "toggle", "clear"].forEach(function (evt) {
	                    Array.prototype.forEach.call(self.element.querySelectorAll("[data-" + evt + "]"), function (el) {
	                        return bind(el, "click", self[evt]);
	                    });
	                });
	            }
	            if (self.isMobile) {
	                setupMobile();
	                return;
	            }
	            var debouncedResize = debounce(onResize, 50);
	            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);
	            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent)) bind(self.daysContainer, "mouseover", function (e) {
	                if (self.config.mode === "range") onMouseOver(getEventTarget(e));
	            });
	            bind(self._input, "keydown", onKeyDown);
	            if (self.calendarContainer !== undefined) {
	                bind(self.calendarContainer, "keydown", onKeyDown);
	            }
	            if (!self.config.inline && !self.config.static) bind(window, "resize", debouncedResize);
	            if (window.ontouchstart !== undefined) bind(window.document, "touchstart", documentClick);else bind(window.document, "mousedown", documentClick);
	            bind(window.document, "focus", documentClick, { capture: true });
	            if (self.config.clickOpens === true) {
	                bind(self._input, "focus", self.open);
	                bind(self._input, "click", self.open);
	            }
	            if (self.daysContainer !== undefined) {
	                bind(self.monthNav, "click", onMonthNavClick);
	                bind(self.monthNav, ["keyup", "increment"], onYearInput);
	                bind(self.daysContainer, "click", selectDate);
	            }
	            if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined) {
	                var selText = function selText(e) {
	                    return getEventTarget(e).select();
	                };
	                bind(self.timeContainer, ["increment"], updateTime);
	                bind(self.timeContainer, "blur", updateTime, { capture: true });
	                bind(self.timeContainer, "click", timeIncrement);
	                bind([self.hourElement, self.minuteElement], ["focus", "click"], selText);
	                if (self.secondElement !== undefined) bind(self.secondElement, "focus", function () {
	                    return self.secondElement && self.secondElement.select();
	                });
	                if (self.amPM !== undefined) {
	                    bind(self.amPM, "click", function (e) {
	                        updateTime(e);
	                    });
	                }
	            }
	            if (self.config.allowInput) {
	                bind(self._input, "blur", onBlur);
	            }
	        }
	        /**
	         * Set the calendar view to a particular date.
	         * @param {Date} jumpDate the date to set the view to
	         * @param {boolean} triggerChange if change events should be triggered
	         */
	        function jumpToDate(jumpDate, triggerChange) {
	            var jumpTo = jumpDate !== undefined ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate && self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);
	            var oldYear = self.currentYear;
	            var oldMonth = self.currentMonth;
	            try {
	                if (jumpTo !== undefined) {
	                    self.currentYear = jumpTo.getFullYear();
	                    self.currentMonth = jumpTo.getMonth();
	                }
	            } catch (e) {
	                /* istanbul ignore next */
	                e.message = "Invalid date supplied: " + jumpTo;
	                self.config.errorHandler(e);
	            }
	            if (triggerChange && self.currentYear !== oldYear) {
	                triggerEvent("onYearChange");
	                buildMonthSwitch();
	            }
	            if (triggerChange && (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {
	                triggerEvent("onMonthChange");
	            }
	            self.redraw();
	        }
	        /**
	         * The up/down arrow handler for time inputs
	         * @param {Event} e the click event
	         */
	        function timeIncrement(e) {
	            var eventTarget = getEventTarget(e);
	            if (~eventTarget.className.indexOf("arrow")) incrementNumInput(e, eventTarget.classList.contains("arrowUp") ? 1 : -1);
	        }
	        /**
	         * Increments/decrements the value of input associ-
	         * ated with the up/down arrow by dispatching an
	         * "increment" event on the input.
	         *
	         * @param {Event} e the click event
	         * @param {Number} delta the diff (usually 1 or -1)
	         * @param {Element} inputElem the input element
	         */
	        function incrementNumInput(e, delta, inputElem) {
	            var target = e && getEventTarget(e);
	            var input = inputElem || target && target.parentNode && target.parentNode.firstChild;
	            var event = createEvent("increment");
	            event.delta = delta;
	            input && input.dispatchEvent(event);
	        }
	        function build() {
	            var fragment = window.document.createDocumentFragment();
	            self.calendarContainer = createElement("div", "flatpickr-calendar");
	            self.calendarContainer.tabIndex = -1;
	            if (!self.config.noCalendar) {
	                fragment.appendChild(buildMonthNav());
	                self.innerContainer = createElement("div", "flatpickr-innerContainer");
	                if (self.config.weekNumbers) {
	                    var _a = buildWeeks(),
	                        weekWrapper = _a.weekWrapper,
	                        weekNumbers = _a.weekNumbers;
	                    self.innerContainer.appendChild(weekWrapper);
	                    self.weekNumbers = weekNumbers;
	                    self.weekWrapper = weekWrapper;
	                }
	                self.rContainer = createElement("div", "flatpickr-rContainer");
	                self.rContainer.appendChild(buildWeekdays());
	                if (!self.daysContainer) {
	                    self.daysContainer = createElement("div", "flatpickr-days");
	                    self.daysContainer.tabIndex = -1;
	                }
	                buildDays();
	                self.rContainer.appendChild(self.daysContainer);
	                self.innerContainer.appendChild(self.rContainer);
	                fragment.appendChild(self.innerContainer);
	            }
	            if (self.config.enableTime) {
	                fragment.appendChild(buildTime());
	            }
	            toggleClass(self.calendarContainer, "rangeMode", self.config.mode === "range");
	            toggleClass(self.calendarContainer, "animate", self.config.animate === true);
	            toggleClass(self.calendarContainer, "multiMonth", self.config.showMonths > 1);
	            self.calendarContainer.appendChild(fragment);
	            var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType !== undefined;
	            if (self.config.inline || self.config.static) {
	                self.calendarContainer.classList.add(self.config.inline ? "inline" : "static");
	                if (self.config.inline) {
	                    if (!customAppend && self.element.parentNode) self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);else if (self.config.appendTo !== undefined) self.config.appendTo.appendChild(self.calendarContainer);
	                }
	                if (self.config.static) {
	                    var wrapper = createElement("div", "flatpickr-wrapper");
	                    if (self.element.parentNode) self.element.parentNode.insertBefore(wrapper, self.element);
	                    wrapper.appendChild(self.element);
	                    if (self.altInput) wrapper.appendChild(self.altInput);
	                    wrapper.appendChild(self.calendarContainer);
	                }
	            }
	            if (!self.config.static && !self.config.inline) (self.config.appendTo !== undefined ? self.config.appendTo : window.document.body).appendChild(self.calendarContainer);
	        }
	        function createDay(className, date, _dayNumber, i) {
	            var dateIsEnabled = isEnabled(date, true),
	                dayElement = createElement("span", className, date.getDate().toString());
	            dayElement.dateObj = date;
	            dayElement.$i = i;
	            dayElement.setAttribute("aria-label", self.formatDate(date, self.config.ariaDateFormat));
	            if (className.indexOf("hidden") === -1 && compareDates(date, self.now) === 0) {
	                self.todayDateElem = dayElement;
	                dayElement.classList.add("today");
	                dayElement.setAttribute("aria-current", "date");
	            }
	            if (dateIsEnabled) {
	                dayElement.tabIndex = -1;
	                if (isDateSelected(date)) {
	                    dayElement.classList.add("selected");
	                    self.selectedDateElem = dayElement;
	                    if (self.config.mode === "range") {
	                        toggleClass(dayElement, "startRange", self.selectedDates[0] && compareDates(date, self.selectedDates[0], true) === 0);
	                        toggleClass(dayElement, "endRange", self.selectedDates[1] && compareDates(date, self.selectedDates[1], true) === 0);
	                        if (className === "nextMonthDay") dayElement.classList.add("inRange");
	                    }
	                }
	            } else {
	                dayElement.classList.add("flatpickr-disabled");
	            }
	            if (self.config.mode === "range") {
	                if (isDateInRange(date) && !isDateSelected(date)) dayElement.classList.add("inRange");
	            }
	            if (self.weekNumbers && self.config.showMonths === 1 && className !== "prevMonthDay" && i % 7 === 6) {
	                self.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + self.config.getWeek(date) + "</span>");
	            }
	            triggerEvent("onDayCreate", dayElement);
	            return dayElement;
	        }
	        function focusOnDayElem(targetNode) {
	            targetNode.focus();
	            if (self.config.mode === "range") onMouseOver(targetNode);
	        }
	        function getFirstAvailableDay(delta) {
	            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;
	            var endMonth = delta > 0 ? self.config.showMonths : -1;
	            for (var m = startMonth; m != endMonth; m += delta) {
	                var month = self.daysContainer.children[m];
	                var startIndex = delta > 0 ? 0 : month.children.length - 1;
	                var endIndex = delta > 0 ? month.children.length : -1;
	                for (var i = startIndex; i != endIndex; i += delta) {
	                    var c = month.children[i];
	                    if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj)) return c;
	                }
	            }
	            return undefined;
	        }
	        function getNextAvailableDay(current, delta) {
	            var givenMonth = current.className.indexOf("Month") === -1 ? current.dateObj.getMonth() : self.currentMonth;
	            var endMonth = delta > 0 ? self.config.showMonths : -1;
	            var loopDelta = delta > 0 ? 1 : -1;
	            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {
	                var month = self.daysContainer.children[m];
	                var startIndex = givenMonth - self.currentMonth === m ? current.$i + delta : delta < 0 ? month.children.length - 1 : 0;
	                var numMonthDays = month.children.length;
	                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {
	                    var c = month.children[i];
	                    if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta)) return focusOnDayElem(c);
	                }
	            }
	            self.changeMonth(loopDelta);
	            focusOnDay(getFirstAvailableDay(loopDelta), 0);
	            return undefined;
	        }
	        function focusOnDay(current, offset) {
	            var activeElement = getClosestActiveElement();
	            var dayFocused = isInView(activeElement || document.body);
	            var startElem = current !== undefined ? current : dayFocused ? activeElement : self.selectedDateElem !== undefined && isInView(self.selectedDateElem) ? self.selectedDateElem : self.todayDateElem !== undefined && isInView(self.todayDateElem) ? self.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);
	            if (startElem === undefined) {
	                self._input.focus();
	            } else if (!dayFocused) {
	                focusOnDayElem(startElem);
	            } else {
	                getNextAvailableDay(startElem, offset);
	            }
	        }
	        function buildMonthDays(year, month) {
	            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;
	            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);
	            var daysInMonth = self.utils.getDaysInMonth(month, year),
	                days = window.document.createDocumentFragment(),
	                isMultiMonth = self.config.showMonths > 1,
	                prevMonthDayClass = isMultiMonth ? "prevMonthDay hidden" : "prevMonthDay",
	                nextMonthDayClass = isMultiMonth ? "nextMonthDay hidden" : "nextMonthDay";
	            var dayNumber = prevMonthDays + 1 - firstOfMonth,
	                dayIndex = 0;
	            // prepend days from the ending of previous month
	            for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {
	                days.appendChild(createDay("flatpickr-day " + prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));
	            }
	            // Start at 1 since there is no 0th day
	            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {
	                days.appendChild(createDay("flatpickr-day", new Date(year, month, dayNumber), dayNumber, dayIndex));
	            }
	            // append days from the next month
	            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {
	                days.appendChild(createDay("flatpickr-day " + nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));
	            }
	            //updateNavigationCurrentMonth();
	            var dayContainer = createElement("div", "dayContainer");
	            dayContainer.appendChild(days);
	            return dayContainer;
	        }
	        function buildDays() {
	            if (self.daysContainer === undefined) {
	                return;
	            }
	            clearNode(self.daysContainer);
	            // TODO: week numbers for each month
	            if (self.weekNumbers) clearNode(self.weekNumbers);
	            var frag = document.createDocumentFragment();
	            for (var i = 0; i < self.config.showMonths; i++) {
	                var d = new Date(self.currentYear, self.currentMonth, 1);
	                d.setMonth(self.currentMonth + i);
	                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));
	            }
	            self.daysContainer.appendChild(frag);
	            self.days = self.daysContainer.firstChild;
	            if (self.config.mode === "range" && self.selectedDates.length === 1) {
	                onMouseOver();
	            }
	        }
	        function buildMonthSwitch() {
	            if (self.config.showMonths > 1 || self.config.monthSelectorType !== "dropdown") return;
	            var shouldBuildMonth = function shouldBuildMonth(month) {
	                if (self.config.minDate !== undefined && self.currentYear === self.config.minDate.getFullYear() && month < self.config.minDate.getMonth()) {
	                    return false;
	                }
	                return !(self.config.maxDate !== undefined && self.currentYear === self.config.maxDate.getFullYear() && month > self.config.maxDate.getMonth());
	            };
	            self.monthsDropdownContainer.tabIndex = -1;
	            self.monthsDropdownContainer.innerHTML = "";
	            for (var i = 0; i < 12; i++) {
	                if (!shouldBuildMonth(i)) continue;
	                var month = createElement("option", "flatpickr-monthDropdown-month");
	                month.value = new Date(self.currentYear, i).getMonth().toString();
	                month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);
	                month.tabIndex = -1;
	                if (self.currentMonth === i) {
	                    month.selected = true;
	                }
	                self.monthsDropdownContainer.appendChild(month);
	            }
	        }
	        function buildMonth() {
	            var container = createElement("div", "flatpickr-month");
	            var monthNavFragment = window.document.createDocumentFragment();
	            var monthElement;
	            if (self.config.showMonths > 1 || self.config.monthSelectorType === "static") {
	                monthElement = createElement("span", "cur-month");
	            } else {
	                self.monthsDropdownContainer = createElement("select", "flatpickr-monthDropdown-months");
	                self.monthsDropdownContainer.setAttribute("aria-label", self.l10n.monthAriaLabel);
	                bind(self.monthsDropdownContainer, "change", function (e) {
	                    var target = getEventTarget(e);
	                    var selectedMonth = parseInt(target.value, 10);
	                    self.changeMonth(selectedMonth - self.currentMonth);
	                    triggerEvent("onMonthChange");
	                });
	                buildMonthSwitch();
	                monthElement = self.monthsDropdownContainer;
	            }
	            var yearInput = createNumberInput("cur-year", { tabindex: "-1" });
	            var yearElement = yearInput.getElementsByTagName("input")[0];
	            yearElement.setAttribute("aria-label", self.l10n.yearAriaLabel);
	            if (self.config.minDate) {
	                yearElement.setAttribute("min", self.config.minDate.getFullYear().toString());
	            }
	            if (self.config.maxDate) {
	                yearElement.setAttribute("max", self.config.maxDate.getFullYear().toString());
	                yearElement.disabled = !!self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();
	            }
	            var currentMonth = createElement("div", "flatpickr-current-month");
	            currentMonth.appendChild(monthElement);
	            currentMonth.appendChild(yearInput);
	            monthNavFragment.appendChild(currentMonth);
	            container.appendChild(monthNavFragment);
	            return {
	                container: container,
	                yearElement: yearElement,
	                monthElement: monthElement
	            };
	        }
	        function buildMonths() {
	            clearNode(self.monthNav);
	            self.monthNav.appendChild(self.prevMonthNav);
	            if (self.config.showMonths) {
	                self.yearElements = [];
	                self.monthElements = [];
	            }
	            for (var m = self.config.showMonths; m--;) {
	                var month = buildMonth();
	                self.yearElements.push(month.yearElement);
	                self.monthElements.push(month.monthElement);
	                self.monthNav.appendChild(month.container);
	            }
	            self.monthNav.appendChild(self.nextMonthNav);
	        }
	        function buildMonthNav() {
	            self.monthNav = createElement("div", "flatpickr-months");
	            self.yearElements = [];
	            self.monthElements = [];
	            self.prevMonthNav = createElement("span", "flatpickr-prev-month");
	            self.prevMonthNav.innerHTML = self.config.prevArrow;
	            self.nextMonthNav = createElement("span", "flatpickr-next-month");
	            self.nextMonthNav.innerHTML = self.config.nextArrow;
	            buildMonths();
	            Object.defineProperty(self, "_hidePrevMonthArrow", {
	                get: function get() {
	                    return self.__hidePrevMonthArrow;
	                },
	                set: function set(bool) {
	                    if (self.__hidePrevMonthArrow !== bool) {
	                        toggleClass(self.prevMonthNav, "flatpickr-disabled", bool);
	                        self.__hidePrevMonthArrow = bool;
	                    }
	                }
	            });
	            Object.defineProperty(self, "_hideNextMonthArrow", {
	                get: function get() {
	                    return self.__hideNextMonthArrow;
	                },
	                set: function set(bool) {
	                    if (self.__hideNextMonthArrow !== bool) {
	                        toggleClass(self.nextMonthNav, "flatpickr-disabled", bool);
	                        self.__hideNextMonthArrow = bool;
	                    }
	                }
	            });
	            self.currentYearElement = self.yearElements[0];
	            updateNavigationCurrentMonth();
	            return self.monthNav;
	        }
	        function buildTime() {
	            self.calendarContainer.classList.add("hasTime");
	            if (self.config.noCalendar) self.calendarContainer.classList.add("noCalendar");
	            var defaults = getDefaultHours(self.config);
	            self.timeContainer = createElement("div", "flatpickr-time");
	            self.timeContainer.tabIndex = -1;
	            var separator = createElement("span", "flatpickr-time-separator", ":");
	            var hourInput = createNumberInput("flatpickr-hour", {
	                "aria-label": self.l10n.hourAriaLabel
	            });
	            self.hourElement = hourInput.getElementsByTagName("input")[0];
	            var minuteInput = createNumberInput("flatpickr-minute", {
	                "aria-label": self.l10n.minuteAriaLabel
	            });
	            self.minuteElement = minuteInput.getElementsByTagName("input")[0];
	            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;
	            self.hourElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.time_24hr ? defaults.hours : military2ampm(defaults.hours));
	            self.minuteElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : defaults.minutes);
	            self.hourElement.setAttribute("step", self.config.hourIncrement.toString());
	            self.minuteElement.setAttribute("step", self.config.minuteIncrement.toString());
	            self.hourElement.setAttribute("min", self.config.time_24hr ? "0" : "1");
	            self.hourElement.setAttribute("max", self.config.time_24hr ? "23" : "12");
	            self.hourElement.setAttribute("maxlength", "2");
	            self.minuteElement.setAttribute("min", "0");
	            self.minuteElement.setAttribute("max", "59");
	            self.minuteElement.setAttribute("maxlength", "2");
	            self.timeContainer.appendChild(hourInput);
	            self.timeContainer.appendChild(separator);
	            self.timeContainer.appendChild(minuteInput);
	            if (self.config.time_24hr) self.timeContainer.classList.add("time24hr");
	            if (self.config.enableSeconds) {
	                self.timeContainer.classList.add("hasSeconds");
	                var secondInput = createNumberInput("flatpickr-second");
	                self.secondElement = secondInput.getElementsByTagName("input")[0];
	                self.secondElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getSeconds() : defaults.seconds);
	                self.secondElement.setAttribute("step", self.minuteElement.getAttribute("step"));
	                self.secondElement.setAttribute("min", "0");
	                self.secondElement.setAttribute("max", "59");
	                self.secondElement.setAttribute("maxlength", "2");
	                self.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
	                self.timeContainer.appendChild(secondInput);
	            }
	            if (!self.config.time_24hr) {
	                // add self.amPM if appropriate
	                self.amPM = createElement("span", "flatpickr-am-pm", self.l10n.amPM[int((self.latestSelectedDateObj ? self.hourElement.value : self.config.defaultHour) > 11)]);
	                self.amPM.title = self.l10n.toggleTitle;
	                self.amPM.tabIndex = -1;
	                self.timeContainer.appendChild(self.amPM);
	            }
	            return self.timeContainer;
	        }
	        function buildWeekdays() {
	            if (!self.weekdayContainer) self.weekdayContainer = createElement("div", "flatpickr-weekdays");else clearNode(self.weekdayContainer);
	            for (var i = self.config.showMonths; i--;) {
	                var container = createElement("div", "flatpickr-weekdaycontainer");
	                self.weekdayContainer.appendChild(container);
	            }
	            updateWeekdays();
	            return self.weekdayContainer;
	        }
	        function updateWeekdays() {
	            if (!self.weekdayContainer) {
	                return;
	            }
	            var firstDayOfWeek = self.l10n.firstDayOfWeek;
	            var weekdays = __spreadArrays(self.l10n.weekdays.shorthand);
	            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
	                weekdays = __spreadArrays(weekdays.splice(firstDayOfWeek, weekdays.length), weekdays.splice(0, firstDayOfWeek));
	            }
	            for (var i = self.config.showMonths; i--;) {
	                self.weekdayContainer.children[i].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + weekdays.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      ";
	            }
	        }
	        /* istanbul ignore next */
	        function buildWeeks() {
	            self.calendarContainer.classList.add("hasWeeks");
	            var weekWrapper = createElement("div", "flatpickr-weekwrapper");
	            weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self.l10n.weekAbbreviation));
	            var weekNumbers = createElement("div", "flatpickr-weeks");
	            weekWrapper.appendChild(weekNumbers);
	            return {
	                weekWrapper: weekWrapper,
	                weekNumbers: weekNumbers
	            };
	        }
	        function changeMonth(value, isOffset) {
	            if (isOffset === void 0) {
	                isOffset = true;
	            }
	            var delta = isOffset ? value : value - self.currentMonth;
	            if (delta < 0 && self._hidePrevMonthArrow === true || delta > 0 && self._hideNextMonthArrow === true) return;
	            self.currentMonth += delta;
	            if (self.currentMonth < 0 || self.currentMonth > 11) {
	                self.currentYear += self.currentMonth > 11 ? 1 : -1;
	                self.currentMonth = (self.currentMonth + 12) % 12;
	                triggerEvent("onYearChange");
	                buildMonthSwitch();
	            }
	            buildDays();
	            triggerEvent("onMonthChange");
	            updateNavigationCurrentMonth();
	        }
	        function clear(triggerChangeEvent, toInitial) {
	            if (triggerChangeEvent === void 0) {
	                triggerChangeEvent = true;
	            }
	            if (toInitial === void 0) {
	                toInitial = true;
	            }
	            self.input.value = "";
	            if (self.altInput !== undefined) self.altInput.value = "";
	            if (self.mobileInput !== undefined) self.mobileInput.value = "";
	            self.selectedDates = [];
	            self.latestSelectedDateObj = undefined;
	            if (toInitial === true) {
	                self.currentYear = self._initialDate.getFullYear();
	                self.currentMonth = self._initialDate.getMonth();
	            }
	            if (self.config.enableTime === true) {
	                var _a = getDefaultHours(self.config),
	                    hours = _a.hours,
	                    minutes = _a.minutes,
	                    seconds = _a.seconds;
	                setHours(hours, minutes, seconds);
	            }
	            self.redraw();
	            if (triggerChangeEvent)
	                // triggerChangeEvent is true (default) or an Event
	                triggerEvent("onChange");
	        }
	        function close() {
	            self.isOpen = false;
	            if (!self.isMobile) {
	                if (self.calendarContainer !== undefined) {
	                    self.calendarContainer.classList.remove("open");
	                }
	                if (self._input !== undefined) {
	                    self._input.classList.remove("active");
	                }
	            }
	            triggerEvent("onClose");
	        }
	        function destroy() {
	            if (self.config !== undefined) triggerEvent("onDestroy");
	            for (var i = self._handlers.length; i--;) {
	                self._handlers[i].remove();
	            }
	            self._handlers = [];
	            if (self.mobileInput) {
	                if (self.mobileInput.parentNode) self.mobileInput.parentNode.removeChild(self.mobileInput);
	                self.mobileInput = undefined;
	            } else if (self.calendarContainer && self.calendarContainer.parentNode) {
	                if (self.config.static && self.calendarContainer.parentNode) {
	                    var wrapper = self.calendarContainer.parentNode;
	                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);
	                    if (wrapper.parentNode) {
	                        while (wrapper.firstChild) {
	                            wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);
	                        }wrapper.parentNode.removeChild(wrapper);
	                    }
	                } else self.calendarContainer.parentNode.removeChild(self.calendarContainer);
	            }
	            if (self.altInput) {
	                self.input.type = "text";
	                if (self.altInput.parentNode) self.altInput.parentNode.removeChild(self.altInput);
	                delete self.altInput;
	            }
	            if (self.input) {
	                self.input.type = self.input._type;
	                self.input.classList.remove("flatpickr-input");
	                self.input.removeAttribute("readonly");
	            }
	            ["_showTimeInput", "latestSelectedDateObj", "_hideNextMonthArrow", "_hidePrevMonthArrow", "__hideNextMonthArrow", "__hidePrevMonthArrow", "isMobile", "isOpen", "selectedDateElem", "minDateHasTime", "maxDateHasTime", "days", "daysContainer", "_input", "_positionElement", "innerContainer", "rContainer", "monthNav", "todayDateElem", "calendarContainer", "weekdayContainer", "prevMonthNav", "nextMonthNav", "monthsDropdownContainer", "currentMonthElement", "currentYearElement", "navigationCurrentMonth", "selectedDateElem", "config"].forEach(function (k) {
	                try {
	                    delete self[k];
	                } catch (_) {}
	            });
	        }
	        function isCalendarElem(elem) {
	            return self.calendarContainer.contains(elem);
	        }
	        function documentClick(e) {
	            if (self.isOpen && !self.config.inline) {
	                var eventTarget_1 = getEventTarget(e);
	                var isCalendarElement = isCalendarElem(eventTarget_1);
	                var isInput = eventTarget_1 === self.input || eventTarget_1 === self.altInput || self.element.contains(eventTarget_1) ||
	                // web components
	                // e.path is not present in all browsers. circumventing typechecks
	                e.path && e.path.indexOf && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));
	                var lostFocus = !isInput && !isCalendarElement && !isCalendarElem(e.relatedTarget);
	                var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {
	                    return elem.contains(eventTarget_1);
	                });
	                if (lostFocus && isIgnored) {
	                    if (self.config.allowInput) {
	                        self.setDate(self._input.value, false, self.config.altInput ? self.config.altFormat : self.config.dateFormat);
	                    }
	                    if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined && self.input.value !== "" && self.input.value !== undefined) {
	                        updateTime();
	                    }
	                    self.close();
	                    if (self.config && self.config.mode === "range" && self.selectedDates.length === 1) self.clear(false);
	                }
	            }
	        }
	        function changeYear(newYear) {
	            if (!newYear || self.config.minDate && newYear < self.config.minDate.getFullYear() || self.config.maxDate && newYear > self.config.maxDate.getFullYear()) return;
	            var newYearNum = newYear,
	                isNewYear = self.currentYear !== newYearNum;
	            self.currentYear = newYearNum || self.currentYear;
	            if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) {
	                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);
	            } else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) {
	                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);
	            }
	            if (isNewYear) {
	                self.redraw();
	                triggerEvent("onYearChange");
	                buildMonthSwitch();
	            }
	        }
	        function isEnabled(date, timeless) {
	            var _a;
	            if (timeless === void 0) {
	                timeless = true;
	            }
	            var dateToCheck = self.parseDate(date, undefined, timeless); // timeless
	            if (self.config.minDate && dateToCheck && compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0 || self.config.maxDate && dateToCheck && compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0) return false;
	            if (!self.config.enable && self.config.disable.length === 0) return true;
	            if (dateToCheck === undefined) return false;
	            var bool = !!self.config.enable,
	                array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;
	            for (var i = 0, d = void 0; i < array.length; i++) {
	                d = array[i];
	                if (typeof d === "function" && d(dateToCheck) // disabled by function
	                ) return bool;else if (d instanceof Date && dateToCheck !== undefined && d.getTime() === dateToCheck.getTime())
	                    // disabled by date
	                    return bool;else if (typeof d === "string") {
	                    // disabled by date string
	                    var parsed = self.parseDate(d, undefined, true);
	                    return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;
	                } else if (
	                // disabled by range
	                (typeof d === 'undefined' ? 'undefined' : _typeof(d)) === "object" && dateToCheck !== undefined && d.from && d.to && dateToCheck.getTime() >= d.from.getTime() && dateToCheck.getTime() <= d.to.getTime()) return bool;
	            }
	            return !bool;
	        }
	        function isInView(elem) {
	            if (self.daysContainer !== undefined) return elem.className.indexOf("hidden") === -1 && elem.className.indexOf("flatpickr-disabled") === -1 && self.daysContainer.contains(elem);
	            return false;
	        }
	        function onBlur(e) {
	            var isInput = e.target === self._input;
	            var valueChanged = self._input.value.trimEnd() !== getDateStr();
	            if (isInput && valueChanged && !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {
	                self.setDate(self._input.value, true, e.target === self.altInput ? self.config.altFormat : self.config.dateFormat);
	            }
	        }
	        function onKeyDown(e) {
	            // e.key                      e.keyCode
	            // "Backspace"                        8
	            // "Tab"                              9
	            // "Enter"                           13
	            // "Escape"     (IE "Esc")           27
	            // "ArrowLeft"  (IE "Left")          37
	            // "ArrowUp"    (IE "Up")            38
	            // "ArrowRight" (IE "Right")         39
	            // "ArrowDown"  (IE "Down")          40
	            // "Delete"     (IE "Del")           46
	            var eventTarget = getEventTarget(e);
	            var isInput = self.config.wrap ? element.contains(eventTarget) : eventTarget === self._input;
	            var allowInput = self.config.allowInput;
	            var allowKeydown = self.isOpen && (!allowInput || !isInput);
	            var allowInlineKeydown = self.config.inline && isInput && !allowInput;
	            if (e.keyCode === 13 && isInput) {
	                if (allowInput) {
	                    self.setDate(self._input.value, true, eventTarget === self.altInput ? self.config.altFormat : self.config.dateFormat);
	                    self.close();
	                    return eventTarget.blur();
	                } else {
	                    self.open();
	                }
	            } else if (isCalendarElem(eventTarget) || allowKeydown || allowInlineKeydown) {
	                var isTimeObj = !!self.timeContainer && self.timeContainer.contains(eventTarget);
	                switch (e.keyCode) {
	                    case 13:
	                        if (isTimeObj) {
	                            e.preventDefault();
	                            updateTime();
	                            focusAndClose();
	                        } else selectDate(e);
	                        break;
	                    case 27:
	                        // escape
	                        e.preventDefault();
	                        focusAndClose();
	                        break;
	                    case 8:
	                    case 46:
	                        if (isInput && !self.config.allowInput) {
	                            e.preventDefault();
	                            self.clear();
	                        }
	                        break;
	                    case 37:
	                    case 39:
	                        if (!isTimeObj && !isInput) {
	                            e.preventDefault();
	                            var activeElement = getClosestActiveElement();
	                            if (self.daysContainer !== undefined && (allowInput === false || activeElement && isInView(activeElement))) {
	                                var delta_1 = e.keyCode === 39 ? 1 : -1;
	                                if (!e.ctrlKey) focusOnDay(undefined, delta_1);else {
	                                    e.stopPropagation();
	                                    changeMonth(delta_1);
	                                    focusOnDay(getFirstAvailableDay(1), 0);
	                                }
	                            }
	                        } else if (self.hourElement) self.hourElement.focus();
	                        break;
	                    case 38:
	                    case 40:
	                        e.preventDefault();
	                        var delta = e.keyCode === 40 ? 1 : -1;
	                        if (self.daysContainer && eventTarget.$i !== undefined || eventTarget === self.input || eventTarget === self.altInput) {
	                            if (e.ctrlKey) {
	                                e.stopPropagation();
	                                changeYear(self.currentYear - delta);
	                                focusOnDay(getFirstAvailableDay(1), 0);
	                            } else if (!isTimeObj) focusOnDay(undefined, delta * 7);
	                        } else if (eventTarget === self.currentYearElement) {
	                            changeYear(self.currentYear - delta);
	                        } else if (self.config.enableTime) {
	                            if (!isTimeObj && self.hourElement) self.hourElement.focus();
	                            updateTime(e);
	                            self._debouncedChange();
	                        }
	                        break;
	                    case 9:
	                        if (isTimeObj) {
	                            var elems = [self.hourElement, self.minuteElement, self.secondElement, self.amPM].concat(self.pluginElements).filter(function (x) {
	                                return x;
	                            });
	                            var i = elems.indexOf(eventTarget);
	                            if (i !== -1) {
	                                var target = elems[i + (e.shiftKey ? -1 : 1)];
	                                e.preventDefault();
	                                (target || self._input).focus();
	                            }
	                        } else if (!self.config.noCalendar && self.daysContainer && self.daysContainer.contains(eventTarget) && e.shiftKey) {
	                            e.preventDefault();
	                            self._input.focus();
	                        }
	                        break;
	                }
	            }
	            if (self.amPM !== undefined && eventTarget === self.amPM) {
	                switch (e.key) {
	                    case self.l10n.amPM[0].charAt(0):
	                    case self.l10n.amPM[0].charAt(0).toLowerCase():
	                        self.amPM.textContent = self.l10n.amPM[0];
	                        setHoursFromInputs();
	                        updateValue();
	                        break;
	                    case self.l10n.amPM[1].charAt(0):
	                    case self.l10n.amPM[1].charAt(0).toLowerCase():
	                        self.amPM.textContent = self.l10n.amPM[1];
	                        setHoursFromInputs();
	                        updateValue();
	                        break;
	                }
	            }
	            if (isInput || isCalendarElem(eventTarget)) {
	                triggerEvent("onKeyDown", e);
	            }
	        }
	        function onMouseOver(elem, cellClass) {
	            if (cellClass === void 0) {
	                cellClass = "flatpickr-day";
	            }
	            if (self.selectedDates.length !== 1 || elem && (!elem.classList.contains(cellClass) || elem.classList.contains("flatpickr-disabled"))) return;
	            var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(),
	                initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(),
	                rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()),
	                rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());
	            var containsDisabled = false;
	            var minRange = 0,
	                maxRange = 0;
	            for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {
	                if (!isEnabled(new Date(t), true)) {
	                    containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;
	                    if (t < initialDate && (!minRange || t > minRange)) minRange = t;else if (t > initialDate && (!maxRange || t < maxRange)) maxRange = t;
	                }
	            }
	            var hoverableCells = Array.from(self.rContainer.querySelectorAll("*:nth-child(-n+" + self.config.showMonths + ") > ." + cellClass));
	            hoverableCells.forEach(function (dayElem) {
	                var date = dayElem.dateObj;
	                var timestamp = date.getTime();
	                var outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;
	                if (outOfRange) {
	                    dayElem.classList.add("notAllowed");
	                    ["inRange", "startRange", "endRange"].forEach(function (c) {
	                        dayElem.classList.remove(c);
	                    });
	                    return;
	                } else if (containsDisabled && !outOfRange) return;
	                ["startRange", "inRange", "endRange", "notAllowed"].forEach(function (c) {
	                    dayElem.classList.remove(c);
	                });
	                if (elem !== undefined) {
	                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime() ? "startRange" : "endRange");
	                    if (initialDate < hoverDate && timestamp === initialDate) dayElem.classList.add("startRange");else if (initialDate > hoverDate && timestamp === initialDate) dayElem.classList.add("endRange");
	                    if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate)) dayElem.classList.add("inRange");
	                }
	            });
	        }
	        function onResize() {
	            if (self.isOpen && !self.config.static && !self.config.inline) positionCalendar();
	        }
	        function open(e, positionElement) {
	            if (positionElement === void 0) {
	                positionElement = self._positionElement;
	            }
	            if (self.isMobile === true) {
	                if (e) {
	                    e.preventDefault();
	                    var eventTarget = getEventTarget(e);
	                    if (eventTarget) {
	                        eventTarget.blur();
	                    }
	                }
	                if (self.mobileInput !== undefined) {
	                    self.mobileInput.focus();
	                    self.mobileInput.click();
	                }
	                triggerEvent("onOpen");
	                return;
	            } else if (self._input.disabled || self.config.inline) {
	                return;
	            }
	            var wasOpen = self.isOpen;
	            self.isOpen = true;
	            if (!wasOpen) {
	                self.calendarContainer.classList.add("open");
	                self._input.classList.add("active");
	                triggerEvent("onOpen");
	                positionCalendar(positionElement);
	            }
	            if (self.config.enableTime === true && self.config.noCalendar === true) {
	                if (self.config.allowInput === false && (e === undefined || !self.timeContainer.contains(e.relatedTarget))) {
	                    setTimeout(function () {
	                        return self.hourElement.select();
	                    }, 50);
	                }
	            }
	        }
	        function minMaxDateSetter(type) {
	            return function (date) {
	                var dateObj = self.config["_" + type + "Date"] = self.parseDate(date, self.config.dateFormat);
	                var inverseDateObj = self.config["_" + (type === "min" ? "max" : "min") + "Date"];
	                if (dateObj !== undefined) {
	                    self[type === "min" ? "minDateHasTime" : "maxDateHasTime"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;
	                }
	                if (self.selectedDates) {
	                    self.selectedDates = self.selectedDates.filter(function (d) {
	                        return isEnabled(d);
	                    });
	                    if (!self.selectedDates.length && type === "min") setHoursFromDate(dateObj);
	                    updateValue();
	                }
	                if (self.daysContainer) {
	                    redraw();
	                    if (dateObj !== undefined) self.currentYearElement[type] = dateObj.getFullYear().toString();else self.currentYearElement.removeAttribute(type);
	                    self.currentYearElement.disabled = !!inverseDateObj && dateObj !== undefined && inverseDateObj.getFullYear() === dateObj.getFullYear();
	                }
	            };
	        }
	        function parseConfig() {
	            var boolOpts = ["wrap", "weekNumbers", "allowInput", "allowInvalidPreload", "clickOpens", "time_24hr", "enableTime", "noCalendar", "altInput", "shorthandCurrentMonth", "inline", "static", "enableSeconds", "disableMobile"];
	            var userConfig = _assign(_assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);
	            var formats = {};
	            self.config.parseDate = userConfig.parseDate;
	            self.config.formatDate = userConfig.formatDate;
	            Object.defineProperty(self.config, "enable", {
	                get: function get() {
	                    return self.config._enable;
	                },
	                set: function set(dates) {
	                    self.config._enable = parseDateRules(dates);
	                }
	            });
	            Object.defineProperty(self.config, "disable", {
	                get: function get() {
	                    return self.config._disable;
	                },
	                set: function set(dates) {
	                    self.config._disable = parseDateRules(dates);
	                }
	            });
	            var timeMode = userConfig.mode === "time";
	            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
	                var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;
	                formats.dateFormat = userConfig.noCalendar || timeMode ? "H:i" + (userConfig.enableSeconds ? ":S" : "") : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
	            }
	            if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {
	                var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;
	                formats.altFormat = userConfig.noCalendar || timeMode ? "h:i" + (userConfig.enableSeconds ? ":S K" : " K") : defaultAltFormat + (" h:i" + (userConfig.enableSeconds ? ":S" : "") + " K");
	            }
	            Object.defineProperty(self.config, "minDate", {
	                get: function get() {
	                    return self.config._minDate;
	                },
	                set: minMaxDateSetter("min")
	            });
	            Object.defineProperty(self.config, "maxDate", {
	                get: function get() {
	                    return self.config._maxDate;
	                },
	                set: minMaxDateSetter("max")
	            });
	            var minMaxTimeSetter = function minMaxTimeSetter(type) {
	                return function (val) {
	                    self.config[type === "min" ? "_minTime" : "_maxTime"] = self.parseDate(val, "H:i:S");
	                };
	            };
	            Object.defineProperty(self.config, "minTime", {
	                get: function get() {
	                    return self.config._minTime;
	                },
	                set: minMaxTimeSetter("min")
	            });
	            Object.defineProperty(self.config, "maxTime", {
	                get: function get() {
	                    return self.config._maxTime;
	                },
	                set: minMaxTimeSetter("max")
	            });
	            if (userConfig.mode === "time") {
	                self.config.noCalendar = true;
	                self.config.enableTime = true;
	            }
	            Object.assign(self.config, formats, userConfig);
	            for (var i = 0; i < boolOpts.length; i++) {
	                // https://github.com/microsoft/TypeScript/issues/31663
	                self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === "true";
	            }HOOKS.filter(function (hook) {
	                return self.config[hook] !== undefined;
	            }).forEach(function (hook) {
	                self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);
	            });
	            self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === "single" && !self.config.disable.length && !self.config.enable && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
	            for (var i = 0; i < self.config.plugins.length; i++) {
	                var pluginConf = self.config.plugins[i](self) || {};
	                for (var key in pluginConf) {
	                    if (HOOKS.indexOf(key) > -1) {
	                        self.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self.config[key]);
	                    } else if (typeof userConfig[key] === "undefined") self.config[key] = pluginConf[key];
	                }
	            }
	            if (!userConfig.altInputClass) {
	                self.config.altInputClass = getInputElem().className + " " + self.config.altInputClass;
	            }
	            triggerEvent("onParseConfig");
	        }
	        function getInputElem() {
	            return self.config.wrap ? element.querySelector("[data-input]") : element;
	        }
	        function setupLocale() {
	            if (_typeof(self.config.locale) !== "object" && typeof flatpickr.l10ns[self.config.locale] === "undefined") self.config.errorHandler(new Error("flatpickr: invalid locale " + self.config.locale));
	            self.l10n = _assign(_assign({}, flatpickr.l10ns.default), _typeof(self.config.locale) === "object" ? self.config.locale : self.config.locale !== "default" ? flatpickr.l10ns[self.config.locale] : undefined);
	            tokenRegex.D = "(" + self.l10n.weekdays.shorthand.join("|") + ")";
	            tokenRegex.l = "(" + self.l10n.weekdays.longhand.join("|") + ")";
	            tokenRegex.M = "(" + self.l10n.months.shorthand.join("|") + ")";
	            tokenRegex.F = "(" + self.l10n.months.longhand.join("|") + ")";
	            tokenRegex.K = "(" + self.l10n.amPM[0] + "|" + self.l10n.amPM[1] + "|" + self.l10n.amPM[0].toLowerCase() + "|" + self.l10n.amPM[1].toLowerCase() + ")";
	            var userConfig = _assign(_assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));
	            if (userConfig.time_24hr === undefined && flatpickr.defaultConfig.time_24hr === undefined) {
	                self.config.time_24hr = self.l10n.time_24hr;
	            }
	            self.formatDate = createDateFormatter(self);
	            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });
	        }
	        function positionCalendar(customPositionElement) {
	            if (typeof self.config.position === "function") {
	                return void self.config.position(self, customPositionElement);
	            }
	            if (self.calendarContainer === undefined) return;
	            triggerEvent("onPreCalendarPosition");
	            var positionElement = customPositionElement || self._positionElement;
	            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function (acc, child) {
	                return acc + child.offsetHeight;
	            }, 0),
	                calendarWidth = self.calendarContainer.offsetWidth,
	                configPos = self.config.position.split(" "),
	                configPosVertical = configPos[0],
	                configPosHorizontal = configPos.length > 1 ? configPos[1] : null,
	                inputBounds = positionElement.getBoundingClientRect(),
	                distanceFromBottom = window.innerHeight - inputBounds.bottom,
	                showOnTop = configPosVertical === "above" || configPosVertical !== "below" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;
	            var top = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);
	            toggleClass(self.calendarContainer, "arrowTop", !showOnTop);
	            toggleClass(self.calendarContainer, "arrowBottom", showOnTop);
	            if (self.config.inline) return;
	            var left = window.pageXOffset + inputBounds.left;
	            var isCenter = false;
	            var isRight = false;
	            if (configPosHorizontal === "center") {
	                left -= (calendarWidth - inputBounds.width) / 2;
	                isCenter = true;
	            } else if (configPosHorizontal === "right") {
	                left -= calendarWidth - inputBounds.width;
	                isRight = true;
	            }
	            toggleClass(self.calendarContainer, "arrowLeft", !isCenter && !isRight);
	            toggleClass(self.calendarContainer, "arrowCenter", isCenter);
	            toggleClass(self.calendarContainer, "arrowRight", isRight);
	            var right = window.document.body.offsetWidth - (window.pageXOffset + inputBounds.right);
	            var rightMost = left + calendarWidth > window.document.body.offsetWidth;
	            var centerMost = right + calendarWidth > window.document.body.offsetWidth;
	            toggleClass(self.calendarContainer, "rightMost", rightMost);
	            if (self.config.static) return;
	            self.calendarContainer.style.top = top + "px";
	            if (!rightMost) {
	                self.calendarContainer.style.left = left + "px";
	                self.calendarContainer.style.right = "auto";
	            } else if (!centerMost) {
	                self.calendarContainer.style.left = "auto";
	                self.calendarContainer.style.right = right + "px";
	            } else {
	                var doc = getDocumentStyleSheet();
	                // some testing environments don't have css support
	                if (doc === undefined) return;
	                var bodyWidth = window.document.body.offsetWidth;
	                var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);
	                var centerBefore = ".flatpickr-calendar.centerMost:before";
	                var centerAfter = ".flatpickr-calendar.centerMost:after";
	                var centerIndex = doc.cssRules.length;
	                var centerStyle = "{left:" + inputBounds.left + "px;right:auto;}";
	                toggleClass(self.calendarContainer, "rightMost", false);
	                toggleClass(self.calendarContainer, "centerMost", true);
	                doc.insertRule(centerBefore + "," + centerAfter + centerStyle, centerIndex);
	                self.calendarContainer.style.left = centerLeft + "px";
	                self.calendarContainer.style.right = "auto";
	            }
	        }
	        function getDocumentStyleSheet() {
	            var editableSheet = null;
	            for (var i = 0; i < document.styleSheets.length; i++) {
	                var sheet = document.styleSheets[i];
	                if (!sheet.cssRules) continue;
	                try {
	                    sheet.cssRules;
	                } catch (err) {
	                    continue;
	                }
	                editableSheet = sheet;
	                break;
	            }
	            return editableSheet != null ? editableSheet : createStyleSheet();
	        }
	        function createStyleSheet() {
	            var style = document.createElement("style");
	            document.head.appendChild(style);
	            return style.sheet;
	        }
	        function redraw() {
	            if (self.config.noCalendar || self.isMobile) return;
	            buildMonthSwitch();
	            updateNavigationCurrentMonth();
	            buildDays();
	        }
	        function focusAndClose() {
	            self._input.focus();
	            if (window.navigator.userAgent.indexOf("MSIE") !== -1 || navigator.msMaxTouchPoints !== undefined) {
	                // hack - bugs in the way IE handles focus keeps the calendar open
	                setTimeout(self.close, 0);
	            } else {
	                self.close();
	            }
	        }
	        function selectDate(e) {
	            e.preventDefault();
	            e.stopPropagation();
	            var isSelectable = function isSelectable(day) {
	                return day.classList && day.classList.contains("flatpickr-day") && !day.classList.contains("flatpickr-disabled") && !day.classList.contains("notAllowed");
	            };
	            var t = findParent(getEventTarget(e), isSelectable);
	            if (t === undefined) return;
	            var target = t;
	            var selectedDate = self.latestSelectedDateObj = new Date(target.dateObj.getTime());
	            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth || selectedDate.getMonth() > self.currentMonth + self.config.showMonths - 1) && self.config.mode !== "range";
	            self.selectedDateElem = target;
	            if (self.config.mode === "single") self.selectedDates = [selectedDate];else if (self.config.mode === "multiple") {
	                var selectedIndex = isDateSelected(selectedDate);
	                if (selectedIndex) self.selectedDates.splice(parseInt(selectedIndex), 1);else self.selectedDates.push(selectedDate);
	            } else if (self.config.mode === "range") {
	                if (self.selectedDates.length === 2) {
	                    self.clear(false, false);
	                }
	                self.latestSelectedDateObj = selectedDate;
	                self.selectedDates.push(selectedDate);
	                // unless selecting same date twice, sort ascendingly
	                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0) self.selectedDates.sort(function (a, b) {
	                    return a.getTime() - b.getTime();
	                });
	            }
	            setHoursFromInputs();
	            if (shouldChangeMonth) {
	                var isNewYear = self.currentYear !== selectedDate.getFullYear();
	                self.currentYear = selectedDate.getFullYear();
	                self.currentMonth = selectedDate.getMonth();
	                if (isNewYear) {
	                    triggerEvent("onYearChange");
	                    buildMonthSwitch();
	                }
	                triggerEvent("onMonthChange");
	            }
	            updateNavigationCurrentMonth();
	            buildDays();
	            updateValue();
	            // maintain focus
	            if (!shouldChangeMonth && self.config.mode !== "range" && self.config.showMonths === 1) focusOnDayElem(target);else if (self.selectedDateElem !== undefined && self.hourElement === undefined) {
	                self.selectedDateElem && self.selectedDateElem.focus();
	            }
	            if (self.hourElement !== undefined) self.hourElement !== undefined && self.hourElement.focus();
	            if (self.config.closeOnSelect) {
	                var single = self.config.mode === "single" && !self.config.enableTime;
	                var range = self.config.mode === "range" && self.selectedDates.length === 2 && !self.config.enableTime;
	                if (single || range) {
	                    focusAndClose();
	                }
	            }
	            triggerChange();
	        }
	        var CALLBACKS = {
	            locale: [setupLocale, updateWeekdays],
	            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],
	            minDate: [jumpToDate],
	            maxDate: [jumpToDate],
	            positionElement: [updatePositionElement],
	            clickOpens: [function () {
	                if (self.config.clickOpens === true) {
	                    bind(self._input, "focus", self.open);
	                    bind(self._input, "click", self.open);
	                } else {
	                    self._input.removeEventListener("focus", self.open);
	                    self._input.removeEventListener("click", self.open);
	                }
	            }]
	        };
	        function set(option, value) {
	            if (option !== null && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === "object") {
	                Object.assign(self.config, option);
	                for (var key in option) {
	                    if (CALLBACKS[key] !== undefined) CALLBACKS[key].forEach(function (x) {
	                        return x();
	                    });
	                }
	            } else {
	                self.config[option] = value;
	                if (CALLBACKS[option] !== undefined) CALLBACKS[option].forEach(function (x) {
	                    return x();
	                });else if (HOOKS.indexOf(option) > -1) self.config[option] = arrayify(value);
	            }
	            self.redraw();
	            updateValue(true);
	        }
	        function setSelectedDate(inputDate, format) {
	            var dates = [];
	            if (inputDate instanceof Array) dates = inputDate.map(function (d) {
	                return self.parseDate(d, format);
	            });else if (inputDate instanceof Date || typeof inputDate === "number") dates = [self.parseDate(inputDate, format)];else if (typeof inputDate === "string") {
	                switch (self.config.mode) {
	                    case "single":
	                    case "time":
	                        dates = [self.parseDate(inputDate, format)];
	                        break;
	                    case "multiple":
	                        dates = inputDate.split(self.config.conjunction).map(function (date) {
	                            return self.parseDate(date, format);
	                        });
	                        break;
	                    case "range":
	                        dates = inputDate.split(self.l10n.rangeSeparator).map(function (date) {
	                            return self.parseDate(date, format);
	                        });
	                        break;
	                }
	            } else self.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(inputDate)));
	            self.selectedDates = self.config.allowInvalidPreload ? dates : dates.filter(function (d) {
	                return d instanceof Date && isEnabled(d, false);
	            });
	            if (self.config.mode === "range") self.selectedDates.sort(function (a, b) {
	                return a.getTime() - b.getTime();
	            });
	        }
	        function setDate(date, triggerChange, format) {
	            if (triggerChange === void 0) {
	                triggerChange = false;
	            }
	            if (format === void 0) {
	                format = self.config.dateFormat;
	            }
	            if (date !== 0 && !date || date instanceof Array && date.length === 0) return self.clear(triggerChange);
	            setSelectedDate(date, format);
	            self.latestSelectedDateObj = self.selectedDates[self.selectedDates.length - 1];
	            self.redraw();
	            jumpToDate(undefined, triggerChange);
	            setHoursFromDate();
	            if (self.selectedDates.length === 0) {
	                self.clear(false);
	            }
	            updateValue(triggerChange);
	            if (triggerChange) triggerEvent("onChange");
	        }
	        function parseDateRules(arr) {
	            return arr.slice().map(function (rule) {
	                if (typeof rule === "string" || typeof rule === "number" || rule instanceof Date) {
	                    return self.parseDate(rule, undefined, true);
	                } else if (rule && (typeof rule === 'undefined' ? 'undefined' : _typeof(rule)) === "object" && rule.from && rule.to) return {
	                    from: self.parseDate(rule.from, undefined),
	                    to: self.parseDate(rule.to, undefined)
	                };
	                return rule;
	            }).filter(function (x) {
	                return x;
	            }); // remove falsy values
	        }
	        function setupDates() {
	            self.selectedDates = [];
	            self.now = self.parseDate(self.config.now) || new Date();
	            // Workaround IE11 setting placeholder as the input's value
	            var preloadedDate = self.config.defaultDate || ((self.input.nodeName === "INPUT" || self.input.nodeName === "TEXTAREA") && self.input.placeholder && self.input.value === self.input.placeholder ? null : self.input.value);
	            if (preloadedDate) setSelectedDate(preloadedDate, self.config.dateFormat);
	            self._initialDate = self.selectedDates.length > 0 ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now.getTime() ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now.getTime() ? self.config.maxDate : self.now;
	            self.currentYear = self._initialDate.getFullYear();
	            self.currentMonth = self._initialDate.getMonth();
	            if (self.selectedDates.length > 0) self.latestSelectedDateObj = self.selectedDates[0];
	            if (self.config.minTime !== undefined) self.config.minTime = self.parseDate(self.config.minTime, "H:i");
	            if (self.config.maxTime !== undefined) self.config.maxTime = self.parseDate(self.config.maxTime, "H:i");
	            self.minDateHasTime = !!self.config.minDate && (self.config.minDate.getHours() > 0 || self.config.minDate.getMinutes() > 0 || self.config.minDate.getSeconds() > 0);
	            self.maxDateHasTime = !!self.config.maxDate && (self.config.maxDate.getHours() > 0 || self.config.maxDate.getMinutes() > 0 || self.config.maxDate.getSeconds() > 0);
	        }
	        function setupInputs() {
	            self.input = getInputElem();
	            /* istanbul ignore next */
	            if (!self.input) {
	                self.config.errorHandler(new Error("Invalid input element specified"));
	                return;
	            }
	            // hack: store previous type to restore it after destroy()
	            self.input._type = self.input.type;
	            self.input.type = "text";
	            self.input.classList.add("flatpickr-input");
	            self._input = self.input;
	            if (self.config.altInput) {
	                // replicate self.element
	                self.altInput = createElement(self.input.nodeName, self.config.altInputClass);
	                self._input = self.altInput;
	                self.altInput.placeholder = self.input.placeholder;
	                self.altInput.disabled = self.input.disabled;
	                self.altInput.required = self.input.required;
	                self.altInput.tabIndex = self.input.tabIndex;
	                self.altInput.type = "text";
	                self.input.setAttribute("type", "hidden");
	                if (!self.config.static && self.input.parentNode) self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);
	            }
	            if (!self.config.allowInput) self._input.setAttribute("readonly", "readonly");
	            updatePositionElement();
	        }
	        function updatePositionElement() {
	            self._positionElement = self.config.positionElement || self._input;
	        }
	        function setupMobile() {
	            var inputType = self.config.enableTime ? self.config.noCalendar ? "time" : "datetime-local" : "date";
	            self.mobileInput = createElement("input", self.input.className + " flatpickr-mobile");
	            self.mobileInput.tabIndex = 1;
	            self.mobileInput.type = inputType;
	            self.mobileInput.disabled = self.input.disabled;
	            self.mobileInput.required = self.input.required;
	            self.mobileInput.placeholder = self.input.placeholder;
	            self.mobileFormatStr = inputType === "datetime-local" ? "Y-m-d\\TH:i:S" : inputType === "date" ? "Y-m-d" : "H:i:S";
	            if (self.selectedDates.length > 0) {
	                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);
	            }
	            if (self.config.minDate) self.mobileInput.min = self.formatDate(self.config.minDate, "Y-m-d");
	            if (self.config.maxDate) self.mobileInput.max = self.formatDate(self.config.maxDate, "Y-m-d");
	            if (self.input.getAttribute("step")) self.mobileInput.step = String(self.input.getAttribute("step"));
	            self.input.type = "hidden";
	            if (self.altInput !== undefined) self.altInput.type = "hidden";
	            try {
	                if (self.input.parentNode) self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);
	            } catch (_a) {}
	            bind(self.mobileInput, "change", function (e) {
	                self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);
	                triggerEvent("onChange");
	                triggerEvent("onClose");
	            });
	        }
	        function toggle(e) {
	            if (self.isOpen === true) return self.close();
	            self.open(e);
	        }
	        function triggerEvent(event, data) {
	            // If the instance has been destroyed already, all hooks have been removed
	            if (self.config === undefined) return;
	            var hooks = self.config[event];
	            if (hooks !== undefined && hooks.length > 0) {
	                for (var i = 0; hooks[i] && i < hooks.length; i++) {
	                    hooks[i](self.selectedDates, self.input.value, self, data);
	                }
	            }
	            if (event === "onChange") {
	                self.input.dispatchEvent(createEvent("change"));
	                // many front-end frameworks bind to the input event
	                self.input.dispatchEvent(createEvent("input"));
	            }
	        }
	        function createEvent(name) {
	            var e = document.createEvent("Event");
	            e.initEvent(name, true, true);
	            return e;
	        }
	        function isDateSelected(date) {
	            for (var i = 0; i < self.selectedDates.length; i++) {
	                var selectedDate = self.selectedDates[i];
	                if (selectedDate instanceof Date && compareDates(selectedDate, date) === 0) return "" + i;
	            }
	            return false;
	        }
	        function isDateInRange(date) {
	            if (self.config.mode !== "range" || self.selectedDates.length < 2) return false;
	            return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;
	        }
	        function updateNavigationCurrentMonth() {
	            if (self.config.noCalendar || self.isMobile || !self.monthNav) return;
	            self.yearElements.forEach(function (yearElement, i) {
	                var d = new Date(self.currentYear, self.currentMonth, 1);
	                d.setMonth(self.currentMonth + i);
	                if (self.config.showMonths > 1 || self.config.monthSelectorType === "static") {
	                    self.monthElements[i].textContent = monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + " ";
	                } else {
	                    self.monthsDropdownContainer.value = d.getMonth().toString();
	                }
	                yearElement.value = d.getFullYear().toString();
	            });
	            self._hidePrevMonthArrow = self.config.minDate !== undefined && (self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear());
	            self._hideNextMonthArrow = self.config.maxDate !== undefined && (self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear());
	        }
	        function getDateStr(specificFormat) {
	            var format = specificFormat || (self.config.altInput ? self.config.altFormat : self.config.dateFormat);
	            return self.selectedDates.map(function (dObj) {
	                return self.formatDate(dObj, format);
	            }).filter(function (d, i, arr) {
	                return self.config.mode !== "range" || self.config.enableTime || arr.indexOf(d) === i;
	            }).join(self.config.mode !== "range" ? self.config.conjunction : self.l10n.rangeSeparator);
	        }
	        /**
	         * Updates the values of inputs associated with the calendar
	         */
	        function updateValue(triggerChange) {
	            if (triggerChange === void 0) {
	                triggerChange = true;
	            }
	            if (self.mobileInput !== undefined && self.mobileFormatStr) {
	                self.mobileInput.value = self.latestSelectedDateObj !== undefined ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr) : "";
	            }
	            self.input.value = getDateStr(self.config.dateFormat);
	            if (self.altInput !== undefined) {
	                self.altInput.value = getDateStr(self.config.altFormat);
	            }
	            if (triggerChange !== false) triggerEvent("onValueUpdate");
	        }
	        function onMonthNavClick(e) {
	            var eventTarget = getEventTarget(e);
	            var isPrevMonth = self.prevMonthNav.contains(eventTarget);
	            var isNextMonth = self.nextMonthNav.contains(eventTarget);
	            if (isPrevMonth || isNextMonth) {
	                changeMonth(isPrevMonth ? -1 : 1);
	            } else if (self.yearElements.indexOf(eventTarget) >= 0) {
	                eventTarget.select();
	            } else if (eventTarget.classList.contains("arrowUp")) {
	                self.changeYear(self.currentYear + 1);
	            } else if (eventTarget.classList.contains("arrowDown")) {
	                self.changeYear(self.currentYear - 1);
	            }
	        }
	        function timeWrapper(e) {
	            e.preventDefault();
	            var isKeyDown = e.type === "keydown",
	                eventTarget = getEventTarget(e),
	                input = eventTarget;
	            if (self.amPM !== undefined && eventTarget === self.amPM) {
	                self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
	            }
	            var min = parseFloat(input.getAttribute("min")),
	                max = parseFloat(input.getAttribute("max")),
	                step = parseFloat(input.getAttribute("step")),
	                curValue = parseInt(input.value, 10),
	                delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);
	            var newValue = curValue + step * delta;
	            if (typeof input.value !== "undefined" && input.value.length === 2) {
	                var isHourElem = input === self.hourElement,
	                    isMinuteElem = input === self.minuteElement;
	                if (newValue < min) {
	                    newValue = max + newValue + int(!isHourElem) + (int(isHourElem) && int(!self.amPM));
	                    if (isMinuteElem) incrementNumInput(undefined, -1, self.hourElement);
	                } else if (newValue > max) {
	                    newValue = input === self.hourElement ? newValue - max - int(!self.amPM) : min;
	                    if (isMinuteElem) incrementNumInput(undefined, 1, self.hourElement);
	                }
	                if (self.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) {
	                    self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
	                }
	                input.value = pad(newValue);
	            }
	        }
	        init();
	        return self;
	    }
	    /* istanbul ignore next */
	    function _flatpickr(nodeList, config) {
	        // static list
	        var nodes = Array.prototype.slice.call(nodeList).filter(function (x) {
	            return x instanceof HTMLElement;
	        });
	        var instances = [];
	        for (var i = 0; i < nodes.length; i++) {
	            var node = nodes[i];
	            try {
	                if (node.getAttribute("data-fp-omit") !== null) continue;
	                if (node._flatpickr !== undefined) {
	                    node._flatpickr.destroy();
	                    node._flatpickr = undefined;
	                }
	                node._flatpickr = FlatpickrInstance(node, config || {});
	                instances.push(node._flatpickr);
	            } catch (e) {
	                console.error(e);
	            }
	        }
	        return instances.length === 1 ? instances[0] : instances;
	    }
	    /* istanbul ignore next */
	    if (typeof HTMLElement !== "undefined" && typeof HTMLCollection !== "undefined" && typeof NodeList !== "undefined") {
	        // browser env
	        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {
	            return _flatpickr(this, config);
	        };
	        HTMLElement.prototype.flatpickr = function (config) {
	            return _flatpickr([this], config);
	        };
	    }
	    /* istanbul ignore next */
	    var flatpickr = function flatpickr(selector, config) {
	        if (typeof selector === "string") {
	            return _flatpickr(window.document.querySelectorAll(selector), config);
	        } else if (selector instanceof Node) {
	            return _flatpickr([selector], config);
	        } else {
	            return _flatpickr(selector, config);
	        }
	    };
	    /* istanbul ignore next */
	    flatpickr.defaultConfig = {};
	    flatpickr.l10ns = {
	        en: _assign({}, english),
	        default: _assign({}, english)
	    };
	    flatpickr.localize = function (l10n) {
	        flatpickr.l10ns.default = _assign(_assign({}, flatpickr.l10ns.default), l10n);
	    };
	    flatpickr.setDefaults = function (config) {
	        flatpickr.defaultConfig = _assign(_assign({}, flatpickr.defaultConfig), config);
	    };
	    flatpickr.parseDate = createDateParser({});
	    flatpickr.formatDate = createDateFormatter({});
	    flatpickr.compareDates = compareDates;
	    /* istanbul ignore next */
	    if (typeof jQuery !== "undefined" && typeof jQuery.fn !== "undefined") {
	        jQuery.fn.flatpickr = function (config) {
	            return _flatpickr(this, config);
	        };
	    }
	    Date.prototype.fp_incr = function (days) {
	        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === "string" ? parseInt(days, 10) : days));
	    };
	    if (typeof window !== "undefined") {
	        window.flatpickr = flatpickr;
	    }

	    return flatpickr;
	});

/***/ })
/******/ ]);